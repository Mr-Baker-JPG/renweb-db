openapi: 3.0.1
info:
  title: FACTSAPI
  description: API Endpoints for FACTS SIS
  version: ''
servers:
  - url: https://api.factsmgt.com
paths:
  '/api/Subscriptions/{subscriptionId}':
    get:
      tags:
        - Subscriptions
      summary: Gets Subscription information from cosmos
      description: Gets Subscription information from cosmos
      operationId: Subscriptions_GetSubscription
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalApiApimDocumentDtoArray'
              example:
                - id: String
                  name: String
                  apiHash: String
                  subscriptionId: String
                  districtId: 1
                  schoolId: 1
                  scopes: String
                  schoolName: String
                  districtName: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Address:
    get:
      tags:
        - Address
        - People
      summary: Gets a list of addresses
      description: Gets a list of addresses
      operationId: Address_GetAddresses
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAddressVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Address
      summary: Creates a new address
      description: Creates a new address
      operationId: Address_CreateAddress
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          application/json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          text/json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressVM'
              example:
                addressID: 1
                address1: String
                address2: String
                city: String
                state: String
                zip: String
                country: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                greeting1: String
                greeting2: String
                greeting3: String
                greeting4: String
                greeting5: String
                newStudentInquiryID: 1
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressVM'
              example:
                addressID: 1
                address1: String
                address2: String
                city: String
                state: String
                zip: String
                country: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                greeting1: String
                greeting2: String
                greeting3: String
                greeting4: String
                greeting5: String
                newStudentInquiryID: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/Address/{addressId}':
    get:
      tags:
        - People
        - Address
      summary: Gets a single address
      description: Gets a single address
      operationId: Address_GetAddressById
      parameters:
        - name: addressId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressVM'
              example:
                addressID: 1
                address1: String
                address2: String
                city: String
                state: String
                zip: String
                country: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                greeting1: String
                greeting2: String
                greeting3: String
                greeting4: String
                greeting5: String
                newStudentInquiryID: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Address
      summary: Replaces an address
      description: Replaces an address
      operationId: Address_ReplaceAddress
      parameters:
        - name: addressId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          application/json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          text/json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressVM'
            example:
              addressID: 1
              address1: String
              address2: String
              city: String
              state: String
              zip: String
              country: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              greeting1: String
              greeting2: String
              greeting3: String
              greeting4: String
              greeting5: String
              newStudentInquiryID: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressVM'
              example:
                addressID: 1
                address1: String
                address2: String
                city: String
                state: String
                zip: String
                country: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                greeting1: String
                greeting2: String
                greeting3: String
                greeting4: String
                greeting5: String
                newStudentInquiryID: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Address
      summary: Update an address based on the json patch document
      description: Update an address based on the json patch document
      operationId: Address_UpdateAddress
      parameters:
        - name: addressId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressVM'
              example:
                addressID: 1
                address1: String
                address2: String
                city: String
                state: String
                zip: String
                country: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                greeting1: String
                greeting2: String
                greeting3: String
                greeting4: String
                greeting5: String
                newStudentInquiryID: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Demographic:
    get:
      tags:
        - Demographic
        - People
      summary: Gets a list of people demographic information
      description: Gets a list of people demographic information
      operationId: Demographic_GetPersonDemographics
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonDemographicVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/Demographic':
    get:
      tags:
        - Demographic
        - People
      summary: Get a person's demographic information record
      description: Get a person's demographic information record
      operationId: Demographic_GetPersonDemographic
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDemographicVM'
              example:
                personId: 1
                gender: female
                birthdate: '2020-01-01'
                ethnicity: String
                citizenship: USA
                maritalStatus: Married
                primaryLanguage: Welsh
                birthplace: String
                birthCity: Cardiff
                birthState: Wales
                birthCountry: UK
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Demographic
        - People
      summary: Updates a person's demographic information
      description: Updates a person's demographic information
      operationId: Demographic_UpdatePersonDemographic
      parameters:
        - name: personId
          in: path
          description: Format - int32. The person id of the person being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonDemographicVM'
            example:
              personId: 1
              gender: female
              birthdate: '2020-01-01'
              ethnicity: String
              citizenship: USA
              maritalStatus: Married
              primaryLanguage: Welsh
              birthplace: String
              birthCity: Cardiff
              birthState: Wales
              birthCountry: UK
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDemographicVM'
            example:
              personId: 1
              gender: female
              birthdate: '2020-01-01'
              ethnicity: String
              citizenship: USA
              maritalStatus: Married
              primaryLanguage: Welsh
              birthplace: String
              birthCity: Cardiff
              birthState: Wales
              birthCountry: UK
          text/json:
            schema:
              $ref: '#/components/schemas/PersonDemographicVM'
            example:
              personId: 1
              gender: female
              birthdate: '2020-01-01'
              ethnicity: String
              citizenship: USA
              maritalStatus: Married
              primaryLanguage: Welsh
              birthplace: String
              birthCity: Cardiff
              birthState: Wales
              birthCountry: UK
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonDemographicVM'
            example:
              personId: 1
              gender: female
              birthdate: '2020-01-01'
              ethnicity: String
              citizenship: USA
              maritalStatus: Married
              primaryLanguage: Welsh
              birthplace: String
              birthCity: Cardiff
              birthState: Wales
              birthCountry: UK
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDemographicVM'
              example:
                personId: 1
                gender: female
                birthdate: '2020-01-01'
                ethnicity: String
                citizenship: USA
                maritalStatus: Married
                primaryLanguage: Welsh
                birthplace: String
                birthCity: Cardiff
                birthState: Wales
                birthCountry: UK
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Demographic
        - People
      summary: Updates a person's demographic information based on the json patch document
      description: Updates a person's demographic information based on the json patch document
      operationId: Demographic_JsonPatchPersonDemographic
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id of the person being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDemographicVM'
              example:
                personId: 1
                gender: female
                birthdate: '2020-01-01'
                ethnicity: String
                citizenship: USA
                maritalStatus: Married
                primaryLanguage: Welsh
                birthplace: String
                birthCity: Cardiff
                birthState: Wales
                birthCountry: UK
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/DirectoryPreferences:
    get:
      tags:
        - Directory Preferences
        - People
      summary: Gets a list of people's directory preferences
      description: Gets a list of people's directory preferences
      operationId: DirectoryPreferences_GetDirectoryPreferences
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfDirectoryPreferencesVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/DirectoryPreferences':
    get:
      tags:
        - Directory Preferences
        - People
      summary: Gets a single person's directory preferences information
      description: Gets a single person's directory preferences information
      operationId: DirectoryPreferences_GetDirectoryPreferencesById
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryPreferencesVmOut'
              example:
                blockName: false
                blockCellPhone: false
                blockHomePhone: false
                blockAddress: false
                blockEmail: false
                personId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Directory Preferences
      summary: Replaces a person's directory preferences information
      description: Replaces a person's directory preferences information
      operationId: DirectoryPreferences_ReplaceDirectoryPreferences
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DirectoryPreferencesVmIn'
            example:
              blockName: false
              blockCellPhone: false
              blockHomePhone: false
              blockAddress: false
              blockEmail: false
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryPreferencesVmIn'
            example:
              blockName: false
              blockCellPhone: false
              blockHomePhone: false
              blockAddress: false
              blockEmail: false
          text/json:
            schema:
              $ref: '#/components/schemas/DirectoryPreferencesVmIn'
            example:
              blockName: false
              blockCellPhone: false
              blockHomePhone: false
              blockAddress: false
              blockEmail: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/DirectoryPreferencesVmIn'
            example:
              blockName: false
              blockCellPhone: false
              blockHomePhone: false
              blockAddress: false
              blockEmail: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryPreferencesVmOut'
              example:
                blockName: false
                blockCellPhone: false
                blockHomePhone: false
                blockAddress: false
                blockEmail: false
                personId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Directory Preferences
      summary: Update a person's directory preferences information based on the json patch document
      description: Update a person's directory preferences information based on the json patch document
      operationId: DirectoryPreferences_UpdateDirectoryPreferences
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryPreferencesVmOut'
              example:
                blockName: false
                blockCellPhone: false
                blockHomePhone: false
                blockAddress: false
                blockEmail: false
                personId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Education:
    get:
      tags:
        - People
        - Education
      summary: Gets a list of people education information
      description: Gets a list of people education information
      operationId: Education_GetPersonEducation
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEducationVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Education/{educationId}':
    get:
      tags:
        - People
        - Education
      summary: Get a person's education record
      description: Get a person's education record
      operationId: Education_GetPersonEducationById
      parameters:
        - name: educationId
          in: path
          description: 'Format - int32. The education record id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationVmOut'
              example:
                personId: 1
                degreeSchool: Name
                degreeName: String
                degreeYear: 2020
                educationLevel: 1
                degreeType: Associates
                educationId: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Education
        - People
      summary: Updates a person's education information
      description: Updates a person's education information
      operationId: Education_ReplacePersonEducation
      parameters:
        - name: educationId
          in: path
          description: Format - int32. The education id of the record being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EducationVmIn'
            example:
              personId: 1
              degreeSchool: Name
              degreeName: String
              degreeYear: 2020
              educationLevel: 1
              degreeType: Associates
          application/json:
            schema:
              $ref: '#/components/schemas/EducationVmIn'
            example:
              personId: 1
              degreeSchool: Name
              degreeName: String
              degreeYear: 2020
              educationLevel: 1
              degreeType: Associates
          text/json:
            schema:
              $ref: '#/components/schemas/EducationVmIn'
            example:
              personId: 1
              degreeSchool: Name
              degreeName: String
              degreeYear: 2020
              educationLevel: 1
              degreeType: Associates
          application/*+json:
            schema:
              $ref: '#/components/schemas/EducationVmIn'
            example:
              personId: 1
              degreeSchool: Name
              degreeName: String
              degreeYear: 2020
              educationLevel: 1
              degreeType: Associates
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationVmOut'
              example:
                personId: 1
                degreeSchool: Name
                degreeName: String
                degreeYear: 2020
                educationLevel: 1
                degreeType: Associates
                educationId: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Education
        - People
      summary: Updates a person's education information based on the json patch document
      description: Updates a person's education information based on the json patch document
      operationId: Education_UpdatePersonEducation
      parameters:
        - name: educationId
          in: path
          description: 'Format - int32. The education id of the record being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationVmOut'
              example:
                personId: 1
                degreeSchool: Name
                degreeName: String
                degreeYear: 2020
                educationLevel: 1
                degreeType: Associates
                educationId: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/EmergencyContact:
    get:
      tags:
        - Emergency Contact
        - People
      summary: Gets a list of emergencyContacts
      description: Gets a list of emergencyContacts
      operationId: EmergencyContact_GetEmergencyContacts
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEmergencyContactVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Emergency Contact
        - People
      summary: Creates a new emergencyContact
      description: Creates a new emergencyContact
      operationId: EmergencyContact_CreateEmergencyContact
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          text/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactVM'
              example:
                emergencyContactID: 1
                firstName: String
                lastName: String
                middleName: String
                salutation: String
                suffix: String
                homePhone: String
                cellPhone: String
                email: String
                relationship: String
                workPhone: String
                studentID: 1
                sortOrder: 1
                refID: 1
                note: String
                countryCode: String
                portalSortOrder: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/EmergencyContact/{emergencyContactId}':
    get:
      tags:
        - Emergency Contact
        - People
      summary: Gets a single emergencyContact
      description: Gets a single emergencyContact
      operationId: EmergencyContact_GetEmergencyContactById
      parameters:
        - name: emergencyContactId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactVM'
              example:
                emergencyContactID: 1
                firstName: String
                lastName: String
                middleName: String
                salutation: String
                suffix: String
                homePhone: String
                cellPhone: String
                email: String
                relationship: String
                workPhone: String
                studentID: 1
                sortOrder: 1
                refID: 1
                note: String
                countryCode: String
                portalSortOrder: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Emergency Contact
        - People
      summary: Replaces an emergencyContact
      description: Replaces an emergencyContact
      operationId: EmergencyContact_ReplaceEmergencyContact
      parameters:
        - name: emergencyContactId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          text/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmergencyContactVM'
            example:
              emergencyContactID: 1
              firstName: String
              lastName: String
              middleName: String
              salutation: String
              suffix: String
              homePhone: String
              cellPhone: String
              email: String
              relationship: String
              workPhone: String
              studentID: 1
              sortOrder: 1
              refID: 1
              note: String
              countryCode: String
              portalSortOrder: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactVM'
              example:
                emergencyContactID: 1
                firstName: String
                lastName: String
                middleName: String
                salutation: String
                suffix: String
                homePhone: String
                cellPhone: String
                email: String
                relationship: String
                workPhone: String
                studentID: 1
                sortOrder: 1
                refID: 1
                note: String
                countryCode: String
                portalSortOrder: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Emergency Contact
      summary: Update an emergencyContact based on the json patch document
      description: Update an emergencyContact based on the json patch document
      operationId: EmergencyContact_UpdateEmergencyContact
      parameters:
        - name: emergencyContactId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContactVM'
              example:
                emergencyContactID: 1
                firstName: String
                lastName: String
                middleName: String
                salutation: String
                suffix: String
                homePhone: String
                cellPhone: String
                email: String
                relationship: String
                workPhone: String
                studentID: 1
                sortOrder: 1
                refID: 1
                note: String
                countryCode: String
                portalSortOrder: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/ParentAlert:
    get:
      tags:
        - People
        - Parent Alert
      summary: Gets a list of people parent alert information
      description: Gets a list of people parent alert information
      operationId: ParentAlert_GetParentAlert
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfParentAlertEntity'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/ParentAlert':
    get:
      tags:
        - People
        - Parent Alert
      summary: Get a person's parent alert record
      description: Get a person's parent alert record
      operationId: ParentAlert_GetParentAlertById
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentAlertEntity'
              example:
                id: String
                personId: 1
                parentAlertPreference: String
                parentAlertHomePhone: false
                parentAlertCellPhone: false
                parentAlertWorkPhone: false
                parentAlertNoText: false
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Parent Alert
      summary: Updates a person's parent alert information
      description: Updates a person's parent alert information
      operationId: ParentAlert_UpdateParentAlert
      parameters:
        - name: personId
          in: path
          description: Format - int32. The person id of the person being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ParentAlertEntity'
            example:
              id: String
              personId: 1
              parentAlertPreference: String
              parentAlertHomePhone: false
              parentAlertCellPhone: false
              parentAlertWorkPhone: false
              parentAlertNoText: false
          application/json:
            schema:
              $ref: '#/components/schemas/ParentAlertEntity'
            example:
              id: String
              personId: 1
              parentAlertPreference: String
              parentAlertHomePhone: false
              parentAlertCellPhone: false
              parentAlertWorkPhone: false
              parentAlertNoText: false
          text/json:
            schema:
              $ref: '#/components/schemas/ParentAlertEntity'
            example:
              id: String
              personId: 1
              parentAlertPreference: String
              parentAlertHomePhone: false
              parentAlertCellPhone: false
              parentAlertWorkPhone: false
              parentAlertNoText: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/ParentAlertEntity'
            example:
              id: String
              personId: 1
              parentAlertPreference: String
              parentAlertHomePhone: false
              parentAlertCellPhone: false
              parentAlertWorkPhone: false
              parentAlertNoText: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentAlertEntity'
              example:
                id: String
                personId: 1
                parentAlertPreference: String
                parentAlertHomePhone: false
                parentAlertCellPhone: false
                parentAlertWorkPhone: false
                parentAlertNoText: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Parent Alert
      summary: Updates a person's parent alert information based on the json patch document
      description: Updates a person's parent alert information based on the json patch document
      operationId: ParentAlert_JsonPatchParentAlert
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id of the person being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentAlertEntity'
              example:
                id: String
                personId: 1
                parentAlertPreference: String
                parentAlertHomePhone: false
                parentAlertCellPhone: false
                parentAlertWorkPhone: false
                parentAlertNoText: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/ParentStudent:
    get:
      tags:
        - People
        - Parent Student
      summary: Gets a list of parents
      description: Gets a list of parents
      operationId: ParentStudent_GetParents
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfParentStudentVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Parent Student
      summary: Creates a new parent student
      description: Creates a new parent student
      operationId: ParentStudent_CreateParentStudent
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          application/json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          text/json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentStudentVM'
              example:
                parentID: 1
                studentID: 1
                custody: false
                correspondence: false
                relationship: String
                grandparent: false
                emergencyContact: false
                reportCard: false
                pwBlock: false
                pickUp: false
                parentsWeb: false
                reEnroll: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/ParentStudent/parent/{parentId}/student/{studentId}':
    get:
      tags:
        - Parent Student
        - People
      summary: Gets a single parent student
      description: Gets a single parent student
      operationId: ParentStudent_GetParentStudentById
      parameters:
        - name: parentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: studentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentStudentVM'
              example:
                parentID: 1
                studentID: 1
                custody: false
                correspondence: false
                relationship: String
                grandparent: false
                emergencyContact: false
                reportCard: false
                pwBlock: false
                pickUp: false
                parentsWeb: false
                reEnroll: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Parent Student
      summary: Replaces a parent student
      description: Replaces a parent student
      operationId: ParentStudent_ReplaceParentStudent
      parameters:
        - name: parentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: studentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          application/json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          text/json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/ParentStudentVM'
            example:
              parentID: 1
              studentID: 1
              custody: false
              correspondence: false
              relationship: String
              grandparent: false
              emergencyContact: false
              reportCard: false
              pwBlock: false
              pickUp: false
              parentsWeb: false
              reEnroll: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentStudentVM'
              example:
                parentID: 1
                studentID: 1
                custody: false
                correspondence: false
                relationship: String
                grandparent: false
                emergencyContact: false
                reportCard: false
                pwBlock: false
                pickUp: false
                parentsWeb: false
                reEnroll: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Parent Student
      summary: Update a parent student based on the json patch document
      description: Update a parent student based on the json patch document
      operationId: ParentStudent_UpdateParentStudent
      parameters:
        - name: parentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: studentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentStudentVM'
              example:
                parentID: 1
                studentID: 1
                custody: false
                correspondence: false
                relationship: String
                grandparent: false
                emergencyContact: false
                reportCard: false
                pwBlock: false
                pickUp: false
                parentsWeb: false
                reEnroll: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /People:
    get:
      tags:
        - Person
        - People
      summary: Gets a list of people
      description: Gets a list of people
      operationId: People_GetPeopleBase
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/People/{personId}':
    get:
      tags:
        - Person
        - People
      summary: Get a person record
      description: Get a person record
      operationId: People_GetPersonBase
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVM'
              example:
                personId: 1
                firstName: String
                lastName: String
                middleName: String
                nickName: String
                salutation: Mrs
                suffix: Jr.
                email: String
                email2: String
                username: String
                homePhone: 555-555-5555
                cellPhone: 555-555-5555
                addressID: 1
                deceased: false
                modifiedDate: '2020-01-01'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Person
        - People
      summary: Updates a person
      description: Updates a person
      operationId: People_UpdatePersonBase
      parameters:
        - name: personId
          in: path
          description: Format - int32. The person id of the person being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonVM'
            example:
              personId: 1
              firstName: String
              lastName: String
              middleName: String
              nickName: String
              salutation: Mrs
              suffix: Jr.
              email: String
              email2: String
              username: String
              homePhone: 555-555-5555
              cellPhone: 555-555-5555
              addressID: 1
              deceased: false
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/PersonVM'
            example:
              personId: 1
              firstName: String
              lastName: String
              middleName: String
              nickName: String
              salutation: Mrs
              suffix: Jr.
              email: String
              email2: String
              username: String
              homePhone: 555-555-5555
              cellPhone: 555-555-5555
              addressID: 1
              deceased: false
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonVM'
            example:
              personId: 1
              firstName: String
              lastName: String
              middleName: String
              nickName: String
              salutation: Mrs
              suffix: Jr.
              email: String
              email2: String
              username: String
              homePhone: 555-555-5555
              cellPhone: 555-555-5555
              addressID: 1
              deceased: false
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonVM'
            example:
              personId: 1
              firstName: String
              lastName: String
              middleName: String
              nickName: String
              salutation: Mrs
              suffix: Jr.
              email: String
              email2: String
              username: String
              homePhone: 555-555-5555
              cellPhone: 555-555-5555
              addressID: 1
              deceased: false
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVM'
              example:
                personId: 1
                firstName: String
                lastName: String
                middleName: String
                nickName: String
                salutation: Mrs
                suffix: Jr.
                email: String
                email2: String
                username: String
                homePhone: 555-555-5555
                cellPhone: 555-555-5555
                addressID: 1
                deceased: false
                modifiedDate: '2020-01-01'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Person
      summary: Updates a person based on the json patch document
      description: Updates a person based on the json patch document
      operationId: People_JsonPatchPersonBase
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id of the person being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVM'
              example:
                personId: 1
                firstName: String
                lastName: String
                middleName: String
                nickName: String
                salutation: Mrs
                suffix: Jr.
                email: String
                email2: String
                username: String
                homePhone: 555-555-5555
                cellPhone: 555-555-5555
                addressID: 1
                deceased: false
                modifiedDate: '2020-01-01'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/PublicSchools:
    get:
      tags:
        - Public Schools
        - People
      summary: Gets a list of people public school
      description: Gets a list of people public school
      operationId: PublicSchools_GetPersonPublicSchools
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPublicSchoolVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/PublicSchools':
    get:
      tags:
        - Public Schools
        - People
      summary: Get a person's public schools record
      description: Get a person's public schools record
      operationId: PublicSchools_GetPersonPublicSchoolsById
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSchoolVM'
              example:
                personId: 12345
                publicSchoolDistrict: District Name
                publicSchoolCounty: County Name
                publicSchoolState: NE
                publicSchoolLocalSchool: School Name
                publicSchoolCode: School Code
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Public Schools
        - People
      summary: Update a person's public schools record
      description: Update a person's public schools record
      operationId: PublicSchools_UpdatePublicSchools
      parameters:
        - name: personId
          in: path
          description: Format - int32. The person id of the person being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PublicSchoolVM'
            example:
              personId: 12345
              publicSchoolDistrict: District Name
              publicSchoolCounty: County Name
              publicSchoolState: NE
              publicSchoolLocalSchool: School Name
              publicSchoolCode: School Code
          application/json:
            schema:
              $ref: '#/components/schemas/PublicSchoolVM'
            example:
              personId: 12345
              publicSchoolDistrict: District Name
              publicSchoolCounty: County Name
              publicSchoolState: NE
              publicSchoolLocalSchool: School Name
              publicSchoolCode: School Code
          text/json:
            schema:
              $ref: '#/components/schemas/PublicSchoolVM'
            example:
              personId: 12345
              publicSchoolDistrict: District Name
              publicSchoolCounty: County Name
              publicSchoolState: NE
              publicSchoolLocalSchool: School Name
              publicSchoolCode: School Code
          application/*+json:
            schema:
              $ref: '#/components/schemas/PublicSchoolVM'
            example:
              personId: 12345
              publicSchoolDistrict: District Name
              publicSchoolCounty: County Name
              publicSchoolState: NE
              publicSchoolLocalSchool: School Name
              publicSchoolCode: School Code
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSchoolVM'
              example:
                personId: 12345
                publicSchoolDistrict: District Name
                publicSchoolCounty: County Name
                publicSchoolState: NE
                publicSchoolLocalSchool: School Name
                publicSchoolCode: School Code
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Public Schools
      summary: Updates a person based on the json patch document
      description: Updates a person based on the json patch document
      operationId: PublicSchools_JsonPatchPublicSchools
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id of the person being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSchoolVM'
              example:
                personId: 12345
                publicSchoolDistrict: District Name
                publicSchoolCounty: County Name
                publicSchoolState: NE
                publicSchoolLocalSchool: School Name
                publicSchoolCode: School Code
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/PersonFamily:
    get:
      tags:
        - Person Family
        - People
      summary: Gets a list of people families
      description: Gets a list of people families
      operationId: PersonFamily_GetPeopleFamilies
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonFamilyVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Person Family
        - People
      summary: Creates a new person family
      description: Creates a new person family
      operationId: PersonFamily_CreatePersonFamily
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          application/json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          text/json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonFamilyVM'
              example:
                personId: 1
                familyId: 1
                parent: false
                student: false
                financialResponsibility: false
                financialResponsibilityPercent: String
                familyOrder: 1
                factsCustomer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/PersonFamily/family/{familyId}/person/{personId}':
    get:
      tags:
        - Person Family
        - People
      summary: Gets a single person Family
      description: Gets a single person Family
      operationId: PersonFamily_GetPersonFamilyById
      parameters:
        - name: familyId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonFamilyVM'
              example:
                personId: 1
                familyId: 1
                parent: false
                student: false
                financialResponsibility: false
                financialResponsibilityPercent: String
                familyOrder: 1
                factsCustomer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Person Family
        - People
      summary: Replaces a person family
      description: Replaces a person family
      operationId: PersonFamily_ReplacePersonFamily
      parameters:
        - name: familyId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          application/json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          text/json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonFamilyVM'
            example:
              personId: 1
              familyId: 1
              parent: false
              student: false
              financialResponsibility: false
              financialResponsibilityPercent: String
              familyOrder: 1
              factsCustomer: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonFamilyVM'
              example:
                personId: 1
                familyId: 1
                parent: false
                student: false
                financialResponsibility: false
                financialResponsibilityPercent: String
                familyOrder: 1
                factsCustomer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Person Family
      summary: Update a person family based on the json patch document
      description: Update a person family based on the json patch document
      operationId: PersonFamily_UpdatePersonFamily
      parameters:
        - name: familyId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonFamilyVM'
              example:
                personId: 1
                familyId: 1
                parent: false
                student: false
                financialResponsibility: false
                financialResponsibilityPercent: String
                familyOrder: 1
                factsCustomer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Religion:
    get:
      tags:
        - Religion
        - People
      summary: Gets a list of people religion information
      description: Gets a list of people religion information
      operationId: Religion_GetReligion
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonReligionEntity'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/Religion':
    get:
      tags:
        - People
        - Religion
      summary: Gets a single person's religion information
      description: Gets a single person's religion information
      operationId: Religion_GetReligionById
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonReligionEntity'
              example:
                id: String
                personId: 1
                denomination: String
                congregationId: 1
                baptismCongregation: String
                baptismCity: String
                baptismState: String
                baptismDate: String
                communionCongregation: String
                communionCity: String
                communionState: String
                communionDate: String
                confirmationCongregation: String
                confirmationCity: String
                confirmationState: String
                confirmationDate: String
                reconciliationCongregation: String
                reconciliationCity: String
                reconciliationState: String
                reconciliationDate: String
                barMitzvahCongregation: String
                barMitzvahCity: String
                barMitzvahState: String
                barMitzvahDate: String
                localChurchMember: false
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Religion
      summary: Replaces a person's religion information
      description: Replaces a person's religion information
      operationId: Religion_ReplaceReligion
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonReligionEntity'
            example:
              id: String
              personId: 1
              denomination: String
              congregationId: 1
              baptismCongregation: String
              baptismCity: String
              baptismState: String
              baptismDate: String
              communionCongregation: String
              communionCity: String
              communionState: String
              communionDate: String
              confirmationCongregation: String
              confirmationCity: String
              confirmationState: String
              confirmationDate: String
              reconciliationCongregation: String
              reconciliationCity: String
              reconciliationState: String
              reconciliationDate: String
              barMitzvahCongregation: String
              barMitzvahCity: String
              barMitzvahState: String
              barMitzvahDate: String
              localChurchMember: false
          application/json:
            schema:
              $ref: '#/components/schemas/PersonReligionEntity'
            example:
              id: String
              personId: 1
              denomination: String
              congregationId: 1
              baptismCongregation: String
              baptismCity: String
              baptismState: String
              baptismDate: String
              communionCongregation: String
              communionCity: String
              communionState: String
              communionDate: String
              confirmationCongregation: String
              confirmationCity: String
              confirmationState: String
              confirmationDate: String
              reconciliationCongregation: String
              reconciliationCity: String
              reconciliationState: String
              reconciliationDate: String
              barMitzvahCongregation: String
              barMitzvahCity: String
              barMitzvahState: String
              barMitzvahDate: String
              localChurchMember: false
          text/json:
            schema:
              $ref: '#/components/schemas/PersonReligionEntity'
            example:
              id: String
              personId: 1
              denomination: String
              congregationId: 1
              baptismCongregation: String
              baptismCity: String
              baptismState: String
              baptismDate: String
              communionCongregation: String
              communionCity: String
              communionState: String
              communionDate: String
              confirmationCongregation: String
              confirmationCity: String
              confirmationState: String
              confirmationDate: String
              reconciliationCongregation: String
              reconciliationCity: String
              reconciliationState: String
              reconciliationDate: String
              barMitzvahCongregation: String
              barMitzvahCity: String
              barMitzvahState: String
              barMitzvahDate: String
              localChurchMember: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonReligionEntity'
            example:
              id: String
              personId: 1
              denomination: String
              congregationId: 1
              baptismCongregation: String
              baptismCity: String
              baptismState: String
              baptismDate: String
              communionCongregation: String
              communionCity: String
              communionState: String
              communionDate: String
              confirmationCongregation: String
              confirmationCity: String
              confirmationState: String
              confirmationDate: String
              reconciliationCongregation: String
              reconciliationCity: String
              reconciliationState: String
              reconciliationDate: String
              barMitzvahCongregation: String
              barMitzvahCity: String
              barMitzvahState: String
              barMitzvahDate: String
              localChurchMember: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonReligionEntity'
              example:
                id: String
                personId: 1
                denomination: String
                congregationId: 1
                baptismCongregation: String
                baptismCity: String
                baptismState: String
                baptismDate: String
                communionCongregation: String
                communionCity: String
                communionState: String
                communionDate: String
                confirmationCongregation: String
                confirmationCity: String
                confirmationState: String
                confirmationDate: String
                reconciliationCongregation: String
                reconciliationCity: String
                reconciliationState: String
                reconciliationDate: String
                barMitzvahCongregation: String
                barMitzvahCity: String
                barMitzvahState: String
                barMitzvahDate: String
                localChurchMember: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Religion
        - People
      summary: Update a person's religion information based on the json patch document
      description: Update a person's religion information based on the json patch document
      operationId: Religion_UpdateReligion
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonReligionEntity'
              example:
                id: String
                personId: 1
                denomination: String
                congregationId: 1
                baptismCongregation: String
                baptismCity: String
                baptismState: String
                baptismDate: String
                communionCongregation: String
                communionCity: String
                communionState: String
                communionDate: String
                confirmationCongregation: String
                confirmationCity: String
                confirmationState: String
                confirmationDate: String
                reconciliationCongregation: String
                reconciliationCity: String
                reconciliationState: String
                reconciliationDate: String
                barMitzvahCongregation: String
                barMitzvahCity: String
                barMitzvahState: String
                barMitzvahDate: String
                localChurchMember: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/ReligiousEvents:
    get:
      tags:
        - Religious Events
        - People
      summary: Gets a list of people religious events
      description: Gets a list of people religious events
      operationId: ReligiousEvents_GetReligiousEvents
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfReligiousEventVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Religious Events
      summary: Creates a new religious event
      description: Creates a new religious event
      operationId: ReligiousEvents_CreateReligiousEvent
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          application/json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          text/json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReligiousEventVmOut'
              example:
                personId: 1
                religiousEventDate: '2020-01-01'
                religiousEventType: String
                location: String
                city: String
                state: String
                note: String
                religiousEventId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/ReligiousEvents/{religiousEventId}':
    get:
      tags:
        - Religious Events
        - People
      summary: Gets a single religious event
      description: Gets a single religious event
      operationId: ReligiousEvents_GetReligiousEventsById
      parameters:
        - name: religiousEventId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReligiousEventVmOut'
              example:
                personId: 1
                religiousEventDate: '2020-01-01'
                religiousEventType: String
                location: String
                city: String
                state: String
                note: String
                religiousEventId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Religious Events
        - People
      summary: Replaces a religious event
      description: Replaces a religious event
      operationId: ReligiousEvents_ReplaceReligiousEvents
      parameters:
        - name: religiousEventId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          application/json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          text/json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReligiousEventVmIn'
            example:
              personId: 1
              religiousEventDate: '2020-01-01'
              religiousEventType: String
              location: String
              city: String
              state: String
              note: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReligiousEventVmOut'
              example:
                personId: 1
                religiousEventDate: '2020-01-01'
                religiousEventType: String
                location: String
                city: String
                state: String
                note: String
                religiousEventId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Religious Events
        - People
      summary: Update a religious event based on the json patch document
      description: Update a religious event based on the json patch document
      operationId: ReligiousEvents_UpdateReligiousEvents
      parameters:
        - name: religiousEventId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReligiousEventVmOut'
              example:
                personId: 1
                religiousEventDate: '2020-01-01'
                religiousEventType: String
                location: String
                city: String
                state: String
                note: String
                religiousEventId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Vehicles:
    get:
      tags:
        - People
        - Vehicle
      summary: Gets a list of people vehicle information
      description: Gets a list of people vehicle information
      operationId: Vehicles_GetVehicle
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonVehicleEntity'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/Vehicles':
    get:
      tags:
        - Vehicle
        - People
      summary: Gets a single person's vehicle information
      description: Gets a single person's vehicle information
      operationId: Vehicles_GetVehicleById
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVehicleEntity'
              example:
                id: String
                personId: 1
                autoMake: String
                autoModel: String
                autoLicense: String
                driversLicense: String
                permitNumber: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Vehicle
        - People
      summary: Replaces a person's Vehicle information
      description: Replaces a person's Vehicle information
      operationId: Vehicles_ReplaceVehicle
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonVehicleEntity'
            example:
              id: String
              personId: 1
              autoMake: String
              autoModel: String
              autoLicense: String
              driversLicense: String
              permitNumber: String
          application/json:
            schema:
              $ref: '#/components/schemas/PersonVehicleEntity'
            example:
              id: String
              personId: 1
              autoMake: String
              autoModel: String
              autoLicense: String
              driversLicense: String
              permitNumber: String
          text/json:
            schema:
              $ref: '#/components/schemas/PersonVehicleEntity'
            example:
              id: String
              personId: 1
              autoMake: String
              autoModel: String
              autoLicense: String
              driversLicense: String
              permitNumber: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonVehicleEntity'
            example:
              id: String
              personId: 1
              autoMake: String
              autoModel: String
              autoLicense: String
              driversLicense: String
              permitNumber: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVehicleEntity'
              example:
                id: String
                personId: 1
                autoMake: String
                autoModel: String
                autoLicense: String
                driversLicense: String
                permitNumber: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Vehicle
      summary: Update a person's vehicle information based on the json patch document
      description: Update a person's vehicle information based on the json patch document
      operationId: Vehicles_UpdateVehicle
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonVehicleEntity'
              example:
                id: String
                personId: 1
                autoMake: String
                autoModel: String
                autoLicense: String
                driversLicense: String
                permitNumber: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Work:
    get:
      tags:
        - Work
        - People
      summary: Gets a list of people work information
      description: Gets a list of people work information
      operationId: Work_GetWork
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonWorkEntity'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/{personId}/Work':
    get:
      tags:
        - Work
        - People
      summary: Get a person work record
      description: Get a person work record
      operationId: Work_GetWorkById
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonWorkEntity'
              example:
                id: String
                personId: 1
                occupation: String
                company: String
                jobCategory: String
                workStreet: String
                workFax: String
                workPhone: String
                workPhoneExtension: String
                workCity: String
                workState: String
                workZip: String
                matchingGiftEmployer: false
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Work
      summary: Updates person work information
      description: Updates person work information
      operationId: Work_UpdateWork
      parameters:
        - name: personId
          in: path
          description: Format - int32. The person id of the person being updated.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The person entity with updates. '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonWorkEntity'
            example:
              id: String
              personId: 1
              occupation: String
              company: String
              jobCategory: String
              workStreet: String
              workFax: String
              workPhone: String
              workPhoneExtension: String
              workCity: String
              workState: String
              workZip: String
              matchingGiftEmployer: false
          application/json:
            schema:
              $ref: '#/components/schemas/PersonWorkEntity'
            example:
              id: String
              personId: 1
              occupation: String
              company: String
              jobCategory: String
              workStreet: String
              workFax: String
              workPhone: String
              workPhoneExtension: String
              workCity: String
              workState: String
              workZip: String
              matchingGiftEmployer: false
          text/json:
            schema:
              $ref: '#/components/schemas/PersonWorkEntity'
            example:
              id: String
              personId: 1
              occupation: String
              company: String
              jobCategory: String
              workStreet: String
              workFax: String
              workPhone: String
              workPhoneExtension: String
              workCity: String
              workState: String
              workZip: String
              matchingGiftEmployer: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonWorkEntity'
            example:
              id: String
              personId: 1
              occupation: String
              company: String
              jobCategory: String
              workStreet: String
              workFax: String
              workPhone: String
              workPhoneExtension: String
              workCity: String
              workState: String
              workZip: String
              matchingGiftEmployer: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonWorkEntity'
              example:
                id: String
                personId: 1
                occupation: String
                company: String
                jobCategory: String
                workStreet: String
                workFax: String
                workPhone: String
                workPhoneExtension: String
                workCity: String
                workState: String
                workZip: String
                matchingGiftEmployer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Work
        - People
      summary: Updates a person based on the json patch document
      description: Updates a person based on the json patch document
      operationId: Work_PatchWork
      parameters:
        - name: personId
          in: path
          description: 'Format - int32. The person id of the person being patched. '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The patch document with changes '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonWorkEntity'
              example:
                id: String
                personId: 1
                occupation: String
                company: String
                jobCategory: String
                workStreet: String
                workFax: String
                workPhone: String
                workPhoneExtension: String
                workCity: String
                workState: String
                workZip: String
                matchingGiftEmployer: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/Honors:
    get:
      tags:
        - People
        - Honors
      summary: Gets a list of honors.
      description: Gets a list of honors.
      operationId: Honors_GetHonors
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfHonorsVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/Honors/{honorId}':
    get:
      tags:
        - People
        - Honors
      summary: Gets a honor.
      description: Gets a honor.
      operationId: Honors_GetAHonor
      parameters:
        - name: honorId
          in: path
          description: Format - int32. The honor identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ActionResult<HonorsVmOut>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HonorsVmOut'
              example:
                calcMethod: String
                gradeLevel: String
                honorName: String
                honorRollId: 1
                maxClass: 1
                minAvg: 1
                minClass: 1
                minCredits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolCode: String
                sequence: 1
                timeFrame: 1
                honorId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Honors
      summary: Replaces the honors.
      description: Replaces the honors.
      operationId: Honors_ReplaceHonors
      parameters:
        - name: honorId
          in: path
          description: Format - int32. The honor identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The honor.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/HonorsVmIn'
            example:
              calcMethod: String
              gradeLevel: String
              honorName: String
              honorRollId: 1
              maxClass: 1
              minAvg: 1
              minClass: 1
              minCredits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              schoolCode: String
              sequence: 1
              timeFrame: 1
          application/json:
            schema:
              $ref: '#/components/schemas/HonorsVmIn'
            example:
              calcMethod: String
              gradeLevel: String
              honorName: String
              honorRollId: 1
              maxClass: 1
              minAvg: 1
              minClass: 1
              minCredits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              schoolCode: String
              sequence: 1
              timeFrame: 1
          text/json:
            schema:
              $ref: '#/components/schemas/HonorsVmIn'
            example:
              calcMethod: String
              gradeLevel: String
              honorName: String
              honorRollId: 1
              maxClass: 1
              minAvg: 1
              minClass: 1
              minCredits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              schoolCode: String
              sequence: 1
              timeFrame: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/HonorsVmIn'
            example:
              calcMethod: String
              gradeLevel: String
              honorName: String
              honorRollId: 1
              maxClass: 1
              minAvg: 1
              minClass: 1
              minCredits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              schoolCode: String
              sequence: 1
              timeFrame: 1
      responses:
        '200':
          description: ActionResult<HonorsVmOut>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HonorsVmOut'
              example:
                calcMethod: String
                gradeLevel: String
                honorName: String
                honorRollId: 1
                maxClass: 1
                minAvg: 1
                minClass: 1
                minCredits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolCode: String
                sequence: 1
                timeFrame: 1
                honorId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Honors
        - People
      summary: Updates the honors.
      description: Updates the honors.
      operationId: Honors_UpdateHonors
      parameters:
        - name: honorId
          in: path
          description: Format - int32. The honor identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ActionResult<HonorsVmOut>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HonorsVmOut'
              example:
                calcMethod: String
                gradeLevel: String
                honorName: String
                honorRollId: 1
                maxClass: 1
                minAvg: 1
                minClass: 1
                minCredits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolCode: String
                sequence: 1
                timeFrame: 1
                honorId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students:
    get:
      tags:
        - Student
        - People
      summary: Gets a list of student information
      description: Gets a list of student information
      operationId: Student_GetStudentV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStudentModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Student
      summary: Create student
      description: Create student
      operationId: Student_PostStudentV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student request '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/{personStudentId}':
    get:
      tags:
        - Student
        - People
      summary: Gets student information by id
      description: Gets student information by id
      operationId: Student_GetStudentByIdV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentModel'
              example:
                school: { }
                locker: [ ]
                configSchoolId: 0
                personStudentId: 0
                studentId: 0
                schoolCode: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Student
      summary: Update student. This updates everything on student. Be careful to use it!!!
      description: Update student. This updates everything on student. Be careful to use it!!!
      operationId: Student_PutStudentV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentRequest'
            example:
              school: { }
              locker: [ ]
              configSchoolId: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentModel'
              example:
                school: { }
                locker: [ ]
                configSchoolId: 0
                personStudentId: 0
                studentId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Student
      summary: Partial Update student.
      description: Partial Update student.
      operationId: Student_PatchStudentV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentModel'
              example:
                school: { }
                locker: [ ]
                configSchoolId: 0
                personStudentId: 0
                studentId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students/LockerConfiguration:
    get:
      tags:
        - People
        - StudentLocker
      summary: Gets a list of student locker
      description: Gets a list of student locker
      operationId: StudentLocker_GetStudentLockerListV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfLockerModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - StudentLocker
      summary: Creates locker
      description: Creates locker
      operationId: StudentLocker_PostStudentLocker
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The locker model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          application/json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          text/json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/LockerConfiguration/{lockerConfigurationId}':
    get:
      tags:
        - People
        - StudentLocker
      summary: Gets locker by id
      description: Gets locker by id
      operationId: StudentLocker_GetStudentLockerByIdV1
      parameters:
        - name: lockerConfigurationId
          in: path
          description: 'Format - int32. The locker id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockerModel'
              example:
                locker: String
                lockerGroupId: 1
                schoolCode: String
                combination1: String
                combination2: String
                combination3: String
                combination4: String
                combination5: String
                note: String
                outOfService: false
                currentCombination: 1
                lockerId: 0
                configSchoolId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - StudentLocker
      summary: Updates locker by id
      description: Updates locker by id
      operationId: StudentLocker_PutStudentLockerByIdV1
      parameters:
        - name: lockerConfigurationId
          in: path
          description: 'Format - int32. The locker id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The locker model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          application/json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          text/json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/LockerRequest'
            example:
              locker: String
              lockerGroupId: 1
              schoolCode: String
              combination1: String
              combination2: String
              combination3: String
              combination4: String
              combination5: String
              note: String
              outOfService: false
              currentCombination: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockerModel'
              example:
                locker: String
                lockerGroupId: 1
                schoolCode: String
                combination1: String
                combination2: String
                combination3: String
                combination4: String
                combination5: String
                note: String
                outOfService: false
                currentCombination: 1
                lockerId: 0
                configSchoolId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - StudentLocker
      summary: Partial Updates locker by id
      description: Partial Updates locker by id
      operationId: StudentLocker_PatchStudentLockerByIdV1
      parameters:
        - name: lockerConfigurationId
          in: path
          description: 'Format - int32. The locker id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The locker '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockerModel'
              example:
                locker: String
                lockerGroupId: 1
                schoolCode: String
                combination1: String
                combination2: String
                combination3: String
                combination4: String
                combination5: String
                note: String
                outOfService: false
                currentCombination: 1
                lockerId: 0
                configSchoolId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/{personStudentId}/School':
    get:
      tags:
        - StudentSchool
        - People
      summary: Gets student school information by id
      description: Gets student school information by id
      operationId: StudentSchool_GetStudentSchoolV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSchoolModel'
              example:
                status: String
                substatus: String
                enrollDate: '2020-01-01'
                withdrawDate: '2020-01-01'
                withdrawReason: String
                graduationDate: '2020-01-01'
                gradeLevel: String
                nextStatus: String
                nextSchoolCode: String
                nextGradeLevel: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - StudentSchool
      summary: Update student school information
      description: Update student school information
      operationId: StudentSchool_PutStudentSchoolV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student school '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentSchoolModel'
            example:
              status: String
              substatus: String
              enrollDate: '2020-01-01'
              withdrawDate: '2020-01-01'
              withdrawReason: String
              graduationDate: '2020-01-01'
              gradeLevel: String
              nextStatus: String
              nextSchoolCode: String
              nextGradeLevel: String
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSchoolModel'
            example:
              status: String
              substatus: String
              enrollDate: '2020-01-01'
              withdrawDate: '2020-01-01'
              withdrawReason: String
              graduationDate: '2020-01-01'
              gradeLevel: String
              nextStatus: String
              nextSchoolCode: String
              nextGradeLevel: String
          text/json:
            schema:
              $ref: '#/components/schemas/StudentSchoolModel'
            example:
              status: String
              substatus: String
              enrollDate: '2020-01-01'
              withdrawDate: '2020-01-01'
              withdrawReason: String
              graduationDate: '2020-01-01'
              gradeLevel: String
              nextStatus: String
              nextSchoolCode: String
              nextGradeLevel: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentSchoolModel'
            example:
              status: String
              substatus: String
              enrollDate: '2020-01-01'
              withdrawDate: '2020-01-01'
              withdrawReason: String
              graduationDate: '2020-01-01'
              gradeLevel: String
              nextStatus: String
              nextSchoolCode: String
              nextGradeLevel: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSchoolModel'
              example:
                status: String
                substatus: String
                enrollDate: '2020-01-01'
                withdrawDate: '2020-01-01'
                withdrawReason: String
                graduationDate: '2020-01-01'
                gradeLevel: String
                nextStatus: String
                nextSchoolCode: String
                nextGradeLevel: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - StudentSchool
        - People
      summary: Partial Update student school information
      description: Partial Update student school information
      operationId: StudentSchool_PatchStudentSchoolV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student school '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSchoolModel'
              example:
                status: String
                substatus: String
                enrollDate: '2020-01-01'
                withdrawDate: '2020-01-01'
                withdrawReason: String
                graduationDate: '2020-01-01'
                gradeLevel: String
                nextStatus: String
                nextSchoolCode: String
                nextGradeLevel: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students/Status:
    get:
      tags:
        - StudentStatus
        - People
      summary: Gets a list of student status
      description: Gets a list of student status
      operationId: StudentStatus_GetStudentStatusV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusModelArray'
              example:
                - status: String
                  displayName: String
                  subStatus: [ ]
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/Status/{status}':
    get:
      tags:
        - People
        - StudentStatus
      summary: Gets a student status with substatus
      description: Gets a student status with substatus
      operationId: StudentStatus_GetStudentStatusByIdV1
      parameters:
        - name: status
          in: path
          description: 'The status name '
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusModel'
              example:
                status: String
                displayName: String
                subStatus: [ ]
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/Status/{status}/Substatus/{subStatusId}':
    get:
      tags:
        - StudentStatus
        - People
      summary: Gets a student substatus by id
      description: Gets a student substatus by id
      operationId: StudentStatus_GetStudentSubStatusByIdV1
      parameters:
        - name: status
          in: path
          description: 'The status name '
          required: true
          schema:
            type: string
        - name: subStatusId
          in: path
          description: 'Format - int32. The subStatus id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubStatusModel'
              example:
                status: String
                schoolCode: String
                id: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - StudentStatus
      summary: Update a student substatus by id
      description: Update a student substatus by id
      operationId: StudentStatus_PutStudentSubStatusByIdV1
      parameters:
        - name: status
          in: path
          description: 'The status name '
          required: true
          schema:
            type: string
        - name: subStatusId
          in: path
          description: 'Format - int32. The subStatus id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The subStatus '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          application/json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          text/json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubStatusModel'
              example:
                status: String
                schoolCode: String
                id: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/Status/{status}/Substatus':
    post:
      tags:
        - People
        - StudentStatus
      summary: Creates a student substatus
      description: Creates a student substatus
      operationId: StudentStatus_PostStudentSubStatusByIdV1
      parameters:
        - name: status
          in: path
          description: 'The status name '
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The subStatus '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          application/json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          text/json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubStatusRequest'
            example:
              status: String
              schoolCode: String
      responses:
        '200':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - StudentStatus
      summary: Update student substatus list
      description: Update student substatus list
      operationId: StudentStatus_PutStudentSubstatusV1
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubStatusModelArray'
            example:
              - status: String
                schoolCode: String
                id: 0
          application/json:
            schema:
              $ref: '#/components/schemas/SubStatusModelArray'
            example:
              - status: String
                schoolCode: String
                id: 0
          text/json:
            schema:
              $ref: '#/components/schemas/SubStatusModelArray'
            example:
              - status: String
                schoolCode: String
                id: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/SubStatusModelArray'
            example:
              - status: String
                schoolCode: String
                id: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubStatusModelArray'
              example:
                - status: String
                  schoolCode: String
                  id: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Congregations:
    get:
      tags:
        - Congregations
        - People
      summary: Gets a list of congregations
      description: Gets a list of congregations
      operationId: Congregations_GetCongregations
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<CongregationVM>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfCongregationVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Congregations
        - People
      summary: Creates the congregation.
      description: Creates the congregation.
      operationId: Congregations_CreateCongregation
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The congregation vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          application/json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          text/json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
      responses:
        '201':
          description: Task<ActionResult<CongregationVM>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CongregationVM'
              example:
                congregationId: 1
                congregationName: String
                congregationCity: String
                congregationPhone: String
                congregationState: String
                congregationStreet: String
                congregationZip: String
                seniorPastor: String
                youthPastor: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Congregations/{congregationId}':
    get:
      tags:
        - Congregations
        - People
      summary: Gets the congregation by identifier.
      description: Gets the congregation by identifier.
      operationId: Congregations_GetCongregationById
      parameters:
        - name: congregationId
          in: path
          description: Format - int32. The congregation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<CongregationVM>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CongregationVM'
              example:
                congregationId: 1
                congregationName: String
                congregationCity: String
                congregationPhone: String
                congregationState: String
                congregationStreet: String
                congregationZip: String
                seniorPastor: String
                youthPastor: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Congregations
        - People
      summary: Replaces the congregation.
      description: Replaces the congregation.
      operationId: Congregations_ReplaceCongregation
      parameters:
        - name: congregationId
          in: path
          description: Format - int32. The congregation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The congregation vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          application/json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          text/json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/CongregationVM'
            example:
              congregationId: 1
              congregationName: String
              congregationCity: String
              congregationPhone: String
              congregationState: String
              congregationStreet: String
              congregationZip: String
              seniorPastor: String
              youthPastor: String
      responses:
        '200':
          description: Task<ActionResult<CongregationVM>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CongregationVM'
              example:
                congregationId: 1
                congregationName: String
                congregationCity: String
                congregationPhone: String
                congregationState: String
                congregationStreet: String
                congregationZip: String
                seniorPastor: String
                youthPastor: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Congregations
      summary: Updates the congregation.
      description: Updates the congregation.
      operationId: Congregations_UpdateCongregation
      parameters:
        - name: congregationId
          in: path
          description: Format - int32. The congregation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<CongregationVM>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CongregationVM'
              example:
                congregationId: 1
                congregationName: String
                congregationCity: String
                congregationPhone: String
                congregationState: String
                congregationStreet: String
                congregationZip: String
                seniorPastor: String
                youthPastor: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Interests:
    get:
      tags:
        - Interests
        - People
      summary: Gets a list of people interests
      description: Gets a list of people interests
      operationId: Interests_GetpeopleInterests
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPersonInterestVM'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Interests
      summary: Creates a new person interest
      description: Creates a new person interest
      operationId: Interests_CreatePersonInterest
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonInterestVM'
            example:
              personID: 1
              interest: String
          application/json:
            schema:
              $ref: '#/components/schemas/PersonInterestVM'
            example:
              personID: 1
              interest: String
          text/json:
            schema:
              $ref: '#/components/schemas/PersonInterestVM'
            example:
              personID: 1
              interest: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonInterestVM'
            example:
              personID: 1
              interest: String
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonInterestVM'
              example:
                personID: 1
                interest: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/Alerts:
    get:
      tags:
        - Alerts
        - People
      summary: Gets a list of student alerts.
      description: Gets a list of student alerts.
      operationId: Alerts_GetStudentAlerts
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<StudentAlertVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAlertVm'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Alerts
      summary: Creates a student alert.
      description: Creates a student alert.
      operationId: Alerts_CreateStudentAlert
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The student alert.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
      responses:
        '200':
          description: Task<ActionResult<StudentAlertVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertVm'
              example:
                alertID: 1
                studentID: 1
                title: String
                description: String
                active: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/Alerts/{alertId}':
    get:
      tags:
        - Alerts
        - People
      summary: Gets a single student alert.
      description: Gets a single student alert.
      operationId: Alerts_GetAStudentAlert
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The student alert identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<StudentAlertVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertVm'
              example:
                alertID: 1
                studentID: 1
                title: String
                description: String
                active: false
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Alerts
      summary: Replaces a student alert.
      description: Replaces a student alert.
      operationId: Alerts_ReplaceStudentAlert
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The student alert identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The student alert.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertVm'
            example:
              alertID: 1
              studentID: 1
              title: String
              description: String
              active: false
      responses:
        '200':
          description: Task<ActionResult<StudentAlertVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertVm'
              example:
                alertID: 1
                studentID: 1
                title: String
                description: String
                active: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Alerts
        - People
      summary: Updates tha student alert.
      description: Updates tha student alert.
      operationId: Alerts_UpdateStudentAlert
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The student alert identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<StudentAlertVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertVm'
              example:
                alertID: 1
                studentID: 1
                title: String
                description: String
                active: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/PickupContacts:
    get:
      tags:
        - People
        - PickupContacts
      summary: Gets a list of pickup contacts.
      description: Gets a list of pickup contacts.
      operationId: PickupContacts_GetPickupContacts
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<PickupContactVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfPickupContactVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/PickupContacts/{pickupContactId}':
    get:
      tags:
        - People
        - PickupContacts
      summary: Gets a single pickup contact.
      description: Gets a single pickup contact.
      operationId: PickupContacts_GetAPickupContact
      parameters:
        - name: pickupContactId
          in: path
          description: Format - int32. The pickup contact identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PickupContactVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickupContactVmOut'
              example:
                cellPhone: String
                countryCode: String
                email: String
                firstName: String
                homePhone: String
                lastName: String
                middleName: String
                note: String
                portalSortOrder: 1
                refId: 1
                relationship: String
                salutation: String
                studentId: 1
                suffix: String
                workPhone: String
                pickupId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - PickupContacts
      summary: Replaces a pickup contact.
      description: Replaces a pickup contact.
      operationId: PickupContacts_ReplacePickupContact
      parameters:
        - name: pickupContactId
          in: path
          description: Format - int32. The pickup contact identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The pickup contact.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PickupContactVmIn'
            example:
              cellPhone: String
              countryCode: String
              email: String
              firstName: String
              homePhone: String
              lastName: String
              middleName: String
              note: String
              portalSortOrder: 1
              refId: 1
              relationship: String
              salutation: String
              studentId: 1
              suffix: String
              workPhone: String
          application/json:
            schema:
              $ref: '#/components/schemas/PickupContactVmIn'
            example:
              cellPhone: String
              countryCode: String
              email: String
              firstName: String
              homePhone: String
              lastName: String
              middleName: String
              note: String
              portalSortOrder: 1
              refId: 1
              relationship: String
              salutation: String
              studentId: 1
              suffix: String
              workPhone: String
          text/json:
            schema:
              $ref: '#/components/schemas/PickupContactVmIn'
            example:
              cellPhone: String
              countryCode: String
              email: String
              firstName: String
              homePhone: String
              lastName: String
              middleName: String
              note: String
              portalSortOrder: 1
              refId: 1
              relationship: String
              salutation: String
              studentId: 1
              suffix: String
              workPhone: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupContactVmIn'
            example:
              cellPhone: String
              countryCode: String
              email: String
              firstName: String
              homePhone: String
              lastName: String
              middleName: String
              note: String
              portalSortOrder: 1
              refId: 1
              relationship: String
              salutation: String
              studentId: 1
              suffix: String
              workPhone: String
      responses:
        '200':
          description: Task<ActionResult<PickupContactVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickupContactVmOut'
              example:
                cellPhone: String
                countryCode: String
                email: String
                firstName: String
                homePhone: String
                lastName: String
                middleName: String
                note: String
                portalSortOrder: 1
                refId: 1
                relationship: String
                salutation: String
                studentId: 1
                suffix: String
                workPhone: String
                pickupId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - PickupContacts
        - People
      summary: Updates tha pickup contact.
      description: Updates tha pickup contact.
      operationId: PickupContacts_UpdatePickupContact
      parameters:
        - name: pickupContactId
          in: path
          description: Format - int32. The pickup contact identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<PickupContactVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickupContactVmOut'
              example:
                cellPhone: String
                countryCode: String
                email: String
                firstName: String
                homePhone: String
                lastName: String
                middleName: String
                note: String
                portalSortOrder: 1
                refId: 1
                relationship: String
                salutation: String
                studentId: 1
                suffix: String
                workPhone: String
                pickupId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /DefinedLists:
    get:
      tags:
        - DefinedLists
        - People
      summary: Gets a list of DefinedLists. Support filter/sort by name.
      description: Gets a list of DefinedLists. Support filter/sort by name.
      operationId: DefinedLists_GetDefinedListsV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: type
          in: query
          description: 'The type of DefinedLists '
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
              - 23
              - 24
              - 25
              - 26
              - 27
              - 28
              - 29
              - 30
              - 31
              - 32
              - 33
              - 34
              - 35
              - 36
              - 37
              - 38
              - 39
              - 40
              - 41
              - 42
              - 43
              - 44
              - 45
              - 46
              - 47
              - 48
              - 49
              - 50
              - 51
              - 52
              - 53
              - 54
              - 55
              - 56
              - 57
              - 58
              - 59
              - 60
              - 61
              - 62
              - 63
              - 64
              - 65
              - 66
              - 67
              - 68
              - 69
              - 70
              - 71
              - 72
              - 73
              - 74
              - 75
              - 76
              - -1
            type: integer
            default: -1
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfDefinedListsModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - DefinedLists
      summary: Create DefinedList
      description: Create DefinedList
      operationId: DefinedLists_PostDefinedListsV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The DefinedLists model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          application/json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          text/json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/DefinedLists/{DefinedListsId}':
    get:
      tags:
        - People
        - DefinedLists
      summary: Gets DefinedList by id
      description: Gets DefinedList by id
      operationId: DefinedLists_GetDefinedListsByIdV1
      parameters:
        - name: DefinedListsId
          in: path
          required: true
          schema:
            type: string
        - name: DefinedListId
          in: query
          description: 'Format - int32. The DefinedList id '
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedListsModel'
              example:
                type: String
                name: String
                definedListId: 0
                schoolCode: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - DefinedLists
      summary: Update DefinedLists by id
      description: Update DefinedLists by id
      operationId: DefinedLists_PutDefinedListsByIdV1
      parameters:
        - name: DefinedListsId
          in: path
          required: true
          schema:
            type: string
        - name: DefinedListId
          in: query
          description: 'Format - int32. The DefinedLists id '
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The DefinedLists model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          application/json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          text/json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/DefinedListsRequest'
            example:
              type: String
              name: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedListsModel'
              example:
                type: String
                name: String
                definedListId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/DefinedLists/{DefinedListId}':
    patch:
      tags:
        - DefinedLists
        - People
      summary: Partial Update DefinedList by id
      description: Partial Update DefinedList by id
      operationId: DefinedLists_PatchDefinedListsByIdV1
      parameters:
        - name: DefinedListId
          in: path
          description: 'Format - int32. The DefinedList id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The DefinedLists patch doc
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefinedListsModel'
              example:
                type: String
                name: String
                definedListId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/EnrollmentHistories:
    get:
      tags:
        - Enrollment History
        - People
      summary: Lists the enrollment histories.
      description: Lists the enrollment histories.
      operationId: EnrollmentHistories_GetEnrollmentHistories
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<EnrollmentHistoryVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfEnrollmentHistoryVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Enrollment History
      summary: Creates the enrollment history.
      description: Creates the enrollment history.
      operationId: EnrollmentHistories_CreateEnrollmentHistory
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
      responses:
        '200':
          description: Task<ActionResult<EnrollmentHistoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentHistoryVmOut'
              example:
                beginDate: '2020-01-01'
                endDate: '2020-01-01'
                gradeLevel: String
                note: String
                schoolCode: String
                status: String
                studentId: 1
                yearId: 1
                enrollmentHistoryId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/EnrollmentHistories/{enrollmentHistoryId}':
    get:
      tags:
        - People
        - Enrollment History
      summary: Gets the enrollment history.
      description: Gets the enrollment history.
      operationId: EnrollmentHistories_GetEnrollmentHistory
      parameters:
        - name: enrollmentHistoryId
          in: path
          description: Format - int32. The enrollment history identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<EnrollmentHistoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentHistoryVmOut'
              example:
                beginDate: '2020-01-01'
                endDate: '2020-01-01'
                gradeLevel: String
                note: String
                schoolCode: String
                status: String
                studentId: 1
                yearId: 1
                enrollmentHistoryId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Enrollment History
      summary: Replaces the enrollment history.
      description: Replaces the enrollment history.
      operationId: EnrollmentHistories_ReplaceEnrollmentHistory
      parameters:
        - name: enrollmentHistoryId
          in: path
          description: Format - int32. The enrollment history identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnrollmentHistoryVmIn'
            example:
              beginDate: '2020-01-01'
              endDate: '2020-01-01'
              gradeLevel: String
              note: String
              schoolCode: String
              status: String
              studentId: 1
              yearId: 1
      responses:
        '200':
          description: Task<ActionResult<EnrollmentHistoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentHistoryVmOut'
              example:
                beginDate: '2020-01-01'
                endDate: '2020-01-01'
                gradeLevel: String
                note: String
                schoolCode: String
                status: String
                studentId: 1
                yearId: 1
                enrollmentHistoryId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Enrollment History
        - People
      summary: Updates the enrollment history.
      description: Updates the enrollment history.
      operationId: EnrollmentHistories_UpdateEnrollmentHistory
      parameters:
        - name: enrollmentHistoryId
          in: path
          description: Format - int32. The enrollment history identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<EnrollmentHistoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollmentHistoryVmOut'
              example:
                beginDate: '2020-01-01'
                endDate: '2020-01-01'
                gradeLevel: String
                note: String
                schoolCode: String
                status: String
                studentId: 1
                yearId: 1
                enrollmentHistoryId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /UserDefinedData:
    get:
      tags:
        - UserDefinedData
        - People
      summary: 'Gets a list of userDefinedData. Support filter/sort by GroupId, DataTyp, DataOrder.'
      description: 'Gets a list of userDefinedData. Support filter/sort by GroupId, DataTyp, DataOrder.'
      operationId: UserDefinedData_GetUserDefinedDataV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUserDefinedDataModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - UserDefinedData
      summary: Create userDefinedData
      description: Create userDefinedData
      operationId: UserDefinedData_PostUserDefinedDataV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedData model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/UserDefinedData/{userDefinedDataId}':
    get:
      tags:
        - UserDefinedData
        - People
      summary: Gets userDefinedData by id
      description: Gets userDefinedData by id
      operationId: UserDefinedData_GetUserDefinedDataByIdV1
      parameters:
        - name: userDefinedDataId
          in: path
          description: 'Format - int32. The userDefinedData id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedDataModel'
              example:
                fieldId: 1
                linkedId: 1
                data: String
                dataId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - UserDefinedData
        - People
      summary: Update userDefinedData by id
      description: Update userDefinedData by id
      operationId: UserDefinedData_PutUserDefinedDataByIdV1
      parameters:
        - name: userDefinedDataId
          in: path
          description: 'Format - int32. The userDefinedData id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedData model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedDataRequest'
            example:
              fieldId: 1
              linkedId: 1
              data: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedDataModel'
              example:
                fieldId: 1
                linkedId: 1
                data: String
                dataId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - UserDefinedData
      summary: Partial Update userDefinedData by id
      description: Partial Update userDefinedData by id
      operationId: UserDefinedData_PatchUserDefinedDataByIdV1
      parameters:
        - name: userDefinedDataId
          in: path
          description: 'Format - int32. The userDefinedData id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The userDefinedData patch doc
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedDataModel'
              example:
                fieldId: 1
                linkedId: 1
                data: String
                dataId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /UserDefinedFields:
    get:
      tags:
        - UserDefinedFields
        - People
      summary: 'Gets a list of userDefinedField. Support filter/sort by GroupId, FieldTyp, FieldOrder.'
      description: 'Gets a list of userDefinedField. Support filter/sort by GroupId, FieldTyp, FieldOrder.'
      operationId: UserDefinedField_GetUserDefinedFieldV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUserDefinedFieldModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - UserDefinedFields
      summary: Create userDefinedField
      description: Create userDefinedField
      operationId: UserDefinedField_PostUserDefinedFieldV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedField model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/UserDefinedFields/{userDefinedFieldId}':
    get:
      tags:
        - People
        - UserDefinedFields
      summary: Gets userDefinedField by id
      description: Gets userDefinedField by id
      operationId: UserDefinedField_GetUserDefinedFieldByIdV1
      parameters:
        - name: userDefinedFieldId
          in: path
          description: 'Format - int32. The userDefinedField id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldModel'
              example:
                groupId: 1
                fieldName: String
                fieldType: 1
                fieldOrder: 1
                listItems: [ ]
                fieldId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - UserDefinedFields
        - People
      summary: Update userDefinedField by id
      description: Update userDefinedField by id
      operationId: UserDefinedField_PutUserDefinedFieldByIdV1
      parameters:
        - name: userDefinedFieldId
          in: path
          description: 'Format - int32. The userDefinedField id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedField model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldRequest'
            example:
              groupId: 1
              fieldName: String
              fieldType: 1
              fieldOrder: 1
              listItems: [ ]
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldModel'
              example:
                groupId: 1
                fieldName: String
                fieldType: 1
                fieldOrder: 1
                listItems: [ ]
                fieldId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - UserDefinedFields
        - People
      summary: Partial Update userDefinedField by id
      description: Partial Update userDefinedField by id
      operationId: UserDefinedField_PatchUserDefinedFieldByIdV1
      parameters:
        - name: userDefinedFieldId
          in: path
          description: 'Format - int32. The userDefinedField id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The userDefinedField patch doc
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldModel'
              example:
                groupId: 1
                fieldName: String
                fieldType: 1
                fieldOrder: 1
                listItems: [ ]
                fieldId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /UserDefinedGroups:
    get:
      tags:
        - UserDefinedGroups
        - People
      summary: 'Gets a list of userDefinedGroup. Support filter/sort by groupOrder, districtWide.'
      description: 'Gets a list of userDefinedGroup. Support filter/sort by groupOrder, districtWide.'
      operationId: UserDefinedGroup_GetUserDefinedGroupV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: type
          in: query
          description: The type of  UserDefinedGroup
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
            type: integer
            default: 0
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfUserDefinedGroupModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - UserDefinedGroups
        - People
      summary: Create userDefinedGroup
      description: Create userDefinedGroup
      operationId: UserDefinedGroup_PostUserDefinedGroupV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedGroup model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/UserDefinedGroups/{userDefinedGroupId}':
    get:
      tags:
        - UserDefinedGroups
        - People
      summary: Gets userDefinedGroup by id
      description: Gets userDefinedGroup by id
      operationId: UserDefinedGroup_GetUserDefinedGroupByIdV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupModel'
              example:
                groupType: String
                groupName: String
                groupOrder: 1
                districtWide: false
                groupId: 0
                schoolCode: string
                fieldList:
                  - groupId: 1
                    fieldName: String
                    fieldType: 1
                    fieldOrder: 1
                    listItems: [ ]
                    fieldId: 0
                securityLevel: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - UserDefinedGroups
        - People
      summary: Update userDefinedGroup by id
      description: Update userDefinedGroup by id
      operationId: UserDefinedGroup_PutUserDefinedGroupByIdV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The userDefinedGroup model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupRequest'
            example:
              groupType: String
              groupName: String
              groupOrder: 1
              districtWide: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupModel'
              example:
                groupType: String
                groupName: String
                groupOrder: 1
                districtWide: false
                groupId: 0
                schoolCode: string
                fieldList:
                  - groupId: 1
                    fieldName: String
                    fieldType: 1
                    fieldOrder: 1
                    listItems: [ ]
                    fieldId: 0
                securityLevel: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - UserDefinedGroups
        - People
      summary: Partial Update userDefinedGroup by id
      description: Partial Update userDefinedGroup by id
      operationId: UserDefinedGroup_PatchUserDefinedGroupByIdV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The userDefinedGroup patch doc
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupModel'
              example:
                groupType: String
                groupName: String
                groupOrder: 1
                districtWide: false
                groupId: 0
                schoolCode: string
                fieldList:
                  - groupId: 1
                    fieldName: String
                    fieldType: 1
                    fieldOrder: 1
                    listItems: [ ]
                    fieldId: 0
                securityLevel: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/UserDefinedGroupSecurity/UserDefinedGroups/{userDefinedGroupId}':
    get:
      tags:
        - UserDefinedGroupsSecurity
        - People
      summary: Gets userDefinedGroupSecurity
      description: Gets userDefinedGroupSecurity
      operationId: UserDefinedGroupSecurity_GetUserDefinedGroupSecurityV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
              example:
                canEveryoneUse: false
                group: [ ]
                person: [ ]
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - UserDefinedGroupsSecurity
      summary: Update userDefinedGroupSecurity
      description: Update userDefinedGroupSecurity
      operationId: UserDefinedGroupSecurity_PutUserDefinedGroupSecurityV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The UserDefinedGroupSecurity model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
            example:
              canEveryoneUse: false
              group: [ ]
              person: [ ]
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
            example:
              canEveryoneUse: false
              group: [ ]
              person: [ ]
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
            example:
              canEveryoneUse: false
              group: [ ]
              person: [ ]
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
            example:
              canEveryoneUse: false
              group: [ ]
              person: [ ]
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
              example:
                canEveryoneUse: false
                group: [ ]
                person: [ ]
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - UserDefinedGroupsSecurity
      summary: Partial Update userDefinedGroupSecurity
      description: Partial Update userDefinedGroupSecurity
      operationId: UserDefinedGroupSecurity_PatchUserDefinedGroupSecurityV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The UserDefinedGroupSecurity patch doc '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupSecurityModel'
              example:
                canEveryoneUse: false
                group: [ ]
                person: [ ]
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/UserDefinedGroupSecurity/UserDefinedGroups/{userDefinedGroupId}/SecurityGroups/{securityGroupId}':
    get:
      tags:
        - UserDefinedGroupsSecurity
        - People
      summary: Gets userDefinedGroupSecurity on securityGroup
      description: Gets userDefinedGroupSecurity on securityGroup
      operationId: UserDefinedGroupSecurity_GetUserDefinedGroup_SecurityGroupV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: securityGroupId
          in: path
          description: 'Format - int32. The securityGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
              example:
                id: 1
                securityLevel: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - UserDefinedGroupsSecurity
      summary: Update userDefinedGroupSecurity on securityGroup
      description: Update userDefinedGroupSecurity on securityGroup
      operationId: UserDefinedGroupSecurity_PutUserDefinedGroup_SecurityGroupV1
      parameters:
        - name: userDefinedGroupId
          in: path
          description: 'Format - int32. The userDefinedGroup id '
          required: true
          schema:
            type: integer
        - name: securityGroupId
          in: path
          description: 'Format - int32. The securityGroup id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The security Item '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
            example:
              id: 1
              securityLevel: 1
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
            example:
              id: 1
              securityLevel: 1
          text/json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
            example:
              id: 1
              securityLevel: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
            example:
              id: 1
              securityLevel: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
              example:
                id: 1
                securityLevel: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/AdvisingNotes:
    get:
      tags:
        - People
        - AdvisingNotes
      summary: Gets a list of all Advising Notes.
      description: Gets a list of all Advising Notes.
      operationId: AdvisingNotes_GetAdvisingNotes
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<AdvisingNoteVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAdvisingNoteVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - AdvisingNotes
        - People
      summary: Creates the advising note.
      description: Creates the advising note.
      operationId: AdvisingNotes_CreateAdvisingNote
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The note.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<AdvisingNoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisingNoteVmOut'
              example:
                note: String
                date: '2020-01-01'
                studentId: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                noteId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/AdvisingNotes/{noteId}':
    get:
      tags:
        - AdvisingNotes
        - People
      summary: Gets an advising note.
      description: Gets an advising note.
      operationId: AdvisingNotes_GetAnAdvisingNote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<AdvisingNoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisingNoteVmOut'
              example:
                note: String
                date: '2020-01-01'
                studentId: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                noteId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - AdvisingNotes
      summary: Replaces the advising note.
      description: Replaces the advising note.
      operationId: AdvisingNotes_ReplaceAdvisingNote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The updated note.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdvisingNoteVmIn'
            example:
              note: String
              date: '2020-01-01'
              studentId: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<AdvisingNoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisingNoteVmOut'
              example:
                note: String
                date: '2020-01-01'
                studentId: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                noteId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - AdvisingNotes
      summary: Updates the advising note.
      description: Updates the advising note.
      operationId: AdvisingNotes_UpdateAdvisingNote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<AdvisingNoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisingNoteVmOut'
              example:
                note: String
                date: '2020-01-01'
                studentId: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                noteId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/Conference:
    get:
      tags:
        - People
        - Conferences
      summary: List all conferences.
      description: List all conferences.
      operationId: Conference_GetConferences
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ConferenceVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfConferenceVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - Conferences
      summary: Creates the conference.
      description: Creates the conference.
      operationId: Conference_CreateConference
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The conference.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          text/json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
      responses:
        '200':
          description: Task<ActionResult<ConferenceVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceVmOut'
              example:
                date: '2020-01-01'
                studentId: 1
                reason: String
                problem: String
                staffID: 1
                subject: String
                recommendation: String
                parent: String
                location: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                reason1: false
                reason2: false
                reason3: false
                problem1: false
                problem2: false
                problem3: false
                problem4: false
                problem5: false
                problem6: false
                problem7: false
                problem8: false
                problem9: false
                problem10: false
                conferenceId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/Conference/{conferenceId}':
    get:
      tags:
        - People
        - Conferences
      summary: Gets a conference.
      description: Gets a conference.
      operationId: Conference_GetAConference
      parameters:
        - name: conferenceId
          in: path
          description: Format - int32. The conference identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<ConferenceVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceVmOut'
              example:
                date: '2020-01-01'
                studentId: 1
                reason: String
                problem: String
                staffID: 1
                subject: String
                recommendation: String
                parent: String
                location: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                reason1: false
                reason2: false
                reason3: false
                problem1: false
                problem2: false
                problem3: false
                problem4: false
                problem5: false
                problem6: false
                problem7: false
                problem8: false
                problem9: false
                problem10: false
                conferenceId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Conferences
      summary: Replaces the conference.
      description: Replaces the conference.
      operationId: Conference_ReplaceConference
      parameters:
        - name: conferenceId
          in: path
          description: Format - int32. The conference identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          text/json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConferenceVmIn'
            example:
              date: '2020-01-01'
              studentId: 1
              reason: String
              problem: String
              staffID: 1
              subject: String
              recommendation: String
              parent: String
              location: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              reason1: false
              reason2: false
              reason3: false
              problem1: false
              problem2: false
              problem3: false
              problem4: false
              problem5: false
              problem6: false
              problem7: false
              problem8: false
              problem9: false
              problem10: false
      responses:
        '200':
          description: Task<ActionResult<ConferenceVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceVmOut'
              example:
                date: '2020-01-01'
                studentId: 1
                reason: String
                problem: String
                staffID: 1
                subject: String
                recommendation: String
                parent: String
                location: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                reason1: false
                reason2: false
                reason3: false
                problem1: false
                problem2: false
                problem3: false
                problem4: false
                problem5: false
                problem6: false
                problem7: false
                problem8: false
                problem9: false
                problem10: false
                conferenceId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Conferences
      summary: Updates the conference.
      description: Updates the conference.
      operationId: Conference_UpdateConference
      parameters:
        - name: conferenceId
          in: path
          description: Format - int32. The conference identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<ConferenceVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceVmOut'
              example:
                date: '2020-01-01'
                studentId: 1
                reason: String
                problem: String
                staffID: 1
                subject: String
                recommendation: String
                parent: String
                location: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                reason1: false
                reason2: false
                reason3: false
                problem1: false
                problem2: false
                problem3: false
                problem4: false
                problem5: false
                problem6: false
                problem7: false
                problem8: false
                problem9: false
                problem10: false
                conferenceId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students/Recognition:
    get:
      tags:
        - People
        - StudentRecognition
      summary: 'Gets a list of student recognition. Support filter/sort by studentId, yearId.'
      description: 'Gets a list of student recognition. Support filter/sort by studentId, yearId.'
      operationId: StudentRecognition_GetStudentRecognitionV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStudentRecognitionModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - StudentRecognition
      summary: Create student recognition
      description: Create student recognition
      operationId: StudentRecognition_PostStudentRecognitionV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student recognition model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          text/json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/Recognition/{recognitionId}':
    get:
      tags:
        - People
        - StudentRecognition
      summary: Gets student recognition by id
      description: Gets student recognition by id
      operationId: StudentRecognition_GetStudentRecognitionByIdV1
      parameters:
        - name: recognitionId
          in: path
          description: 'Format - int32. The recognition id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentRecognitionModel'
              example:
                studentId: 1
                yearId: 1
                recognition: String
                note: String
                category: String
                gradeLevel: String
                recognitionId: 0
                schoolCode: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - StudentRecognition
      summary: Update student recognition
      description: Update student recognition
      operationId: StudentRecognition_PutStudentRecognitionByIdV1
      parameters:
        - name: recognitionId
          in: path
          description: 'Format - int32. The recognition id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student recognition model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          text/json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentRecognitionRequest'
            example:
              studentId: 1
              yearId: 1
              recognition: String
              note: String
              category: String
              gradeLevel: String
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentRecognitionModel'
              example:
                studentId: 1
                yearId: 1
                recognition: String
                note: String
                category: String
                gradeLevel: String
                recognitionId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - StudentRecognition
        - People
      summary: Partial Update student recognition
      description: Partial Update student recognition
      operationId: StudentRecognition_PatchStudentRecognitionByIdV1
      parameters:
        - name: recognitionId
          in: path
          description: 'Format - int32. The recognition id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student recognition '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentRecognitionModel'
              example:
                studentId: 1
                yearId: 1
                recognition: String
                note: String
                category: String
                gradeLevel: String
                recognitionId: 0
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students/ServiceHours:
    get:
      tags:
        - StudentServiceHours
        - People
      summary: 'Gets a list of student ServiceHours. Support filter by personId, date.'
      description: 'Gets a list of student ServiceHours. Support filter by personId, date.'
      operationId: StudentServiceHours_GetStudentServiceHoursV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStudentServiceHoursModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - StudentServiceHours
        - People
      summary: Create student serviceHours
      description: Create student serviceHours
      operationId: StudentServiceHours_PostStudentServiceHoursV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student serviceHours model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          text/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/ServiceHours/{serviceHoursId}':
    get:
      tags:
        - People
        - StudentServiceHours
      summary: Gets student serviceHours by id
      description: Gets student serviceHours by id
      operationId: StudentServiceHours_GetStudentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - StudentServiceHours
        - People
      summary: Update student serviceHours
      description: Update student serviceHours
      operationId: StudentServiceHours_PutStudentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student serviceHours model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          text/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - StudentServiceHours
        - People
      summary: Partial Update student serviceHours
      description: Partial Update student serviceHours
      operationId: StudentServiceHours_PatchStudentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The student serviceHours '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/BehaviorEvents:
    get:
      tags:
        - People
        - BehaviorEvents
      summary: Gets a list of behavior event records.
      description: Gets a list of behavior event records.
      operationId: BehaviorEvents_GetBehaviorEvents
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<BehaviorEventsVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfBehaviorEventsVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - BehaviorEvents
        - People
      summary: Creates a behavior event.
      description: Creates a behavior event.
      operationId: BehaviorEvents_CreateBehaviorEvents
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The behavior events.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          text/json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
      responses:
        '200':
          description: Task<ActionResult<BehaviorEventsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorEventsVmOut'
              example:
                dateOfIncident: '2020-01-01'
                descriptionOfIncident: String
                history: String
                sanction1: String
                sanction2: String
                sanctionDate1: '2020-01-01'
                sanctionDate2: '2020-01-01'
                violation: String
                reportedBy: String
                reviewedBy: String
                status: String
                studentID: 1
                demerits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                staffID: 1
                level: 1
                type: 1
                notified: false
                disciplineID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/BehaviorEvents/{disciplineId}':
    get:
      tags:
        - People
        - BehaviorEvents
      summary: Gets a behavior event.
      description: Gets a behavior event.
      operationId: BehaviorEvents_GetABehaviorEvent
      parameters:
        - name: disciplineId
          in: path
          description: Format - int32. The behavior events identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<BehaviorEventsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorEventsVmOut'
              example:
                dateOfIncident: '2020-01-01'
                descriptionOfIncident: String
                history: String
                sanction1: String
                sanction2: String
                sanctionDate1: '2020-01-01'
                sanctionDate2: '2020-01-01'
                violation: String
                reportedBy: String
                reviewedBy: String
                status: String
                studentID: 1
                demerits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                staffID: 1
                level: 1
                type: 1
                notified: false
                disciplineID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - BehaviorEvents
        - People
      summary: Replaces a behavior event.
      description: Replaces a behavior event.
      operationId: BehaviorEvents_ReplaceBehaviorEvents
      parameters:
        - name: disciplineId
          in: path
          description: Format - int32. The behavior events identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The behavior events.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          text/json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/BehaviorEventsVmIn'
            example:
              dateOfIncident: '2020-01-01'
              descriptionOfIncident: String
              history: String
              sanction1: String
              sanction2: String
              sanctionDate1: '2020-01-01'
              sanctionDate2: '2020-01-01'
              violation: String
              reportedBy: String
              reviewedBy: String
              status: String
              studentID: 1
              demerits: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              staffID: 1
              level: 1
              type: 1
              notified: false
      responses:
        '200':
          description: Task<ActionResult<BehaviorEventsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorEventsVmOut'
              example:
                dateOfIncident: '2020-01-01'
                descriptionOfIncident: String
                history: String
                sanction1: String
                sanction2: String
                sanctionDate1: '2020-01-01'
                sanctionDate2: '2020-01-01'
                violation: String
                reportedBy: String
                reviewedBy: String
                status: String
                studentID: 1
                demerits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                staffID: 1
                level: 1
                type: 1
                notified: false
                disciplineID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - BehaviorEvents
        - People
      summary: Updates the behavior event.
      description: Updates the behavior event.
      operationId: BehaviorEvents_UpdateBehaviorEvents
      parameters:
        - name: disciplineId
          in: path
          description: Format - int32. The behavior events identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<BehaviorEventsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorEventsVmOut'
              example:
                dateOfIncident: '2020-01-01'
                descriptionOfIncident: String
                history: String
                sanction1: String
                sanction2: String
                sanctionDate1: '2020-01-01'
                sanctionDate2: '2020-01-01'
                violation: String
                reportedBy: String
                reviewedBy: String
                status: String
                studentID: 1
                demerits: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                staffID: 1
                level: 1
                type: 1
                notified: false
                disciplineID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Notes:
    get:
      tags:
        - Notes
        - People
      summary: List all the notes.
      description: List all the notes.
      operationId: Notes_GetNotes
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<NoteVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfNoteVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/Notes/{noteId}':
    get:
      tags:
        - Notes
        - People
      summary: Gets a note.
      description: Gets a note.
      operationId: Notes_GetANote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<NoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteVmOut'
              example:
                enteredById: 1
                noteDate: '2020-01-01'
                noteType: { }
                personId: 1
                note: String
                yearId: 1
                noteId: 0
                modifiedById: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - Notes
      summary: Replaces a note.
      description: Replaces a note.
      operationId: Notes_ReplaceANote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The updated note.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NoteVmIn'
            example:
              enteredById: 1
              noteDate: '2020-01-01'
              noteType: { }
              personId: 1
              note: String
              yearId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/NoteVmIn'
            example:
              enteredById: 1
              noteDate: '2020-01-01'
              noteType: { }
              personId: 1
              note: String
              yearId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/NoteVmIn'
            example:
              enteredById: 1
              noteDate: '2020-01-01'
              noteType: { }
              personId: 1
              note: String
              yearId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteVmIn'
            example:
              enteredById: 1
              noteDate: '2020-01-01'
              noteType: { }
              personId: 1
              note: String
              yearId: 1
      responses:
        '200':
          description: Task<ActionResult<NoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteVmOut'
              example:
                enteredById: 1
                noteDate: '2020-01-01'
                noteType: { }
                personId: 1
                note: String
                yearId: 1
                noteId: 0
                modifiedById: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Notes
        - People
      summary: Updates a note.
      description: Updates a note.
      operationId: Notes_UpdateANote
      parameters:
        - name: noteId
          in: path
          description: Format - int32. The note identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<NoteVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteVmOut'
              example:
                enteredById: 1
                noteDate: '2020-01-01'
                noteType: { }
                personId: 1
                note: String
                yearId: 1
                noteId: 0
                modifiedById: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Parents/ServiceHours:
    get:
      tags:
        - ParentServiceHours
        - People
      summary: 'Gets a list of parent ServiceHours. Support filter by personId, date.'
      description: 'Gets a list of parent ServiceHours. Support filter by personId, date.'
      operationId: ParentServiceHours_GetParentServiceHoursV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStudentServiceHoursModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - ParentServiceHours
        - People
      summary: Create parent serviceHours
      description: Create parent serviceHours
      operationId: ParentServiceHours_PostParentServiceHoursV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The parent serviceHours model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          text/json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/StudentServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Parents/ServiceHours/{serviceHoursId}':
    get:
      tags:
        - People
        - ParentServiceHours
      summary: Gets parent serviceHours by id
      description: Gets parent serviceHours by id
      operationId: ParentServiceHours_GetParentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - ParentServiceHours
        - People
      summary: Update parent serviceHours
      description: Update parent serviceHours
      operationId: ParentServiceHours_PutParentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The serviceHours model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
              yearId: 0
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
              yearId: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
              yearId: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceHoursModel'
            example:
              serviceHoursId: 1
              personId: 1
              description: String
              hours: 1
              date: '2020-01-01'
              note: String
              verifiedBy: String
              createdBy: 1
              yearId: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
                yearId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - ParentServiceHours
        - People
      summary: Partial Update parent serviceHours
      description: Partial Update parent serviceHours
      operationId: ParentServiceHours_PatchParentServiceHoursByIdV1
      parameters:
        - name: serviceHoursId
          in: path
          description: 'Format - int32. The serviceHours id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The serviceHours '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentServiceHoursModel'
              example:
                serviceHoursId: 1
                personId: 1
                description: String
                hours: 1
                date: '2020-01-01'
                note: String
                verifiedBy: String
                createdBy: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /staff/StaffObservations:
    get:
      tags:
        - People
        - Staff Observations
      summary: Gets a list of the observations.
      description: Gets a list of the observations.
      operationId: StaffObservations_GetStaffObservations
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<StaffObservationsVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStaffObservationsVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Staff Observations
        - People
      summary: Creates the staff observation.
      description: Creates the staff observation.
      operationId: StaffObservations_CreateStaffObservation
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          application/json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          text/json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
      responses:
        '200':
          description: Task<ActionResult<StaffObservationsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffObservationsVmOut'
              example:
                endDate: '2020-01-01'
                eval: false
                evaluatorId: 1
                observationConfigId: 1
                personId: 1
                startDate: '2020-01-01'
                title: String
                observationId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/staff/StaffObservations/{observationId}':
    get:
      tags:
        - Staff Observations
        - People
      summary: Gets a staff observation.
      description: Gets a staff observation.
      operationId: StaffObservations_GetAStaffObservation
      parameters:
        - name: observationId
          in: path
          description: Format - int32. The observation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<StaffObservationsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffObservationsVmOut'
              example:
                endDate: '2020-01-01'
                eval: false
                evaluatorId: 1
                observationConfigId: 1
                personId: 1
                startDate: '2020-01-01'
                title: String
                observationId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Staff Observations
        - People
      summary: Replaces the staff observation.
      description: Replaces the staff observation.
      operationId: StaffObservations_ReplaceStaffObservation
      parameters:
        - name: observationId
          in: path
          description: Format - int32. The observation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          application/json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          text/json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StaffObservationsVmIn'
            example:
              endDate: '2020-01-01'
              eval: false
              evaluatorId: 1
              observationConfigId: 1
              personId: 1
              startDate: '2020-01-01'
              title: String
      responses:
        '200':
          description: Task<ActionResult<StaffObservationsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffObservationsVmOut'
              example:
                endDate: '2020-01-01'
                eval: false
                evaluatorId: 1
                observationConfigId: 1
                personId: 1
                startDate: '2020-01-01'
                title: String
                observationId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Staff Observations
      summary: Updates the staff observation.
      description: Updates the staff observation.
      operationId: StaffObservations_UpdateStaffObservation
      parameters:
        - name: observationId
          in: path
          description: Format - int32. The observation identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<StaffObservationsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffObservationsVmOut'
              example:
                endDate: '2020-01-01'
                eval: false
                evaluatorId: 1
                observationConfigId: 1
                personId: 1
                startDate: '2020-01-01'
                title: String
                observationId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /students/AlertApplication:
    get:
      tags:
        - AlertApplication
        - People
      summary: Gets a list of student alerts.
      description: Gets a list of student alerts.
      operationId: AlertApplication_GetStudentAlertApplications
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<StudentAlertApplicationVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAlertApplicationVm'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - AlertApplication
        - People
      summary: Creates a student alert application.
      description: Creates a student alert application.
      operationId: AlertApplication_CreateStudentAlertApplication
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The student alert.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          application/json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          text/json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
      responses:
        '200':
          description: Task<ActionResult<StudentAlertApplicationVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertApplicationVm'
              example:
                alertID: 1
                applicationID: 1
                visual: false
                beep: false
                popUp: false
                popUpAlways: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/students/AlertApplication/alert/{alertId}/application/{applicationId}':
    get:
      tags:
        - AlertApplication
        - People
      summary: Gets a student alert application.
      description: Gets a student alert application.
      operationId: AlertApplication_GetAStudentAlertApplication
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The alert identifier.
          required: true
          schema:
            type: integer
        - name: applicationId
          in: path
          description: "Format - int32. The applicationId identifier.\n            Gets or sets the Enum value for which application the alert should show in.\n            Unless noted, it will show upon selecting the person on the main screen in that area\n            1= Student General\n            2= Cash Register\n            3= Lunch Verification\n            4= Student Clock\n            5= Medical\n            6= Teacher (Shows on staff login, for any instructors of classes the student is in)"
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<StudentAlertApplicationVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertApplicationVm'
              example:
                alertID: 1
                applicationID: 1
                visual: false
                beep: false
                popUp: false
                popUpAlways: false
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - People
        - AlertApplication
      summary: Replaces a student alert application.
      description: Replaces a student alert application.
      operationId: AlertApplication_ReplaceStudentAlertApplication
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The alert identifier.
          required: true
          schema:
            type: integer
        - name: applicationId
          in: path
          description: "Format - int32. The applicationId identifier.\n            Gets or sets the Enum value for which application the alert should show in.\n            Unless noted, it will show upon selecting the person on the main screen in that area\n            1= Student General\n            2= Cash Register\n            3= Lunch Verification\n            4= Student Clock\n            5= Medical\n            6= Teacher (Shows on staff login, for any instructors of classes the student is in)"
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The student alert.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          application/json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          text/json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertApplicationVm'
            example:
              alertID: 1
              applicationID: 1
              visual: false
              beep: false
              popUp: false
              popUpAlways: false
      responses:
        '200':
          description: Task<ActionResult<StudentAlertApplicationVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertApplicationVm'
              example:
                alertID: 1
                applicationID: 1
                visual: false
                beep: false
                popUp: false
                popUpAlways: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - AlertApplication
      summary: Updates tha student alert application.
      description: Updates tha student alert application.
      operationId: AlertApplication_UpdateStudentAlertApplication
      parameters:
        - name: alertId
          in: path
          description: Format - int32. The alert identifier.
          required: true
          schema:
            type: integer
        - name: applicationId
          in: path
          description: "Format - int32. The applicationId identifier.\n            Gets or sets the Enum value for which application the alert should show in.\n            Unless noted, it will show upon selecting the person on the main screen in that area\n            1= Student General\n            2= Cash Register\n            3= Lunch Verification\n            4= Student Clock\n            5= Medical\n            6= Teacher (Shows on staff login, for any instructors of classes the student is in)"
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<StudentAlertApplicationVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertApplicationVm'
              example:
                alertID: 1
                applicationID: 1
                visual: false
                beep: false
                popUp: false
                popUpAlways: false
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /interests/Categories:
    get:
      tags:
        - People
        - InterestCategories
      summary: Gets a list of interest categories.
      description: Gets a list of interest categories.
      operationId: Categories_GetAllInterestCategories
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<InterestCategoryVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfInterestCategoryVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - People
        - InterestCategories
      summary: Creates a interest category.
      description: Creates a interest category.
      operationId: Categories_CreateInterestCategory
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The interest category.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
      responses:
        '200':
          description: Task<ActionResult<InterestCategoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestCategoryVmOut'
              example:
                category: String
                districtWide: false
                type: 1
                sortOrder: 1
                onlineApplication: false
                schoolCode: String
                active: false
                interestCategoryID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/interests/Categories/{interestCategoryId}':
    get:
      tags:
        - InterestCategories
        - People
      summary: Gets a single interest category.
      description: Gets a single interest category.
      operationId: Categories_GetInterestCategory
      parameters:
        - name: interestCategoryId
          in: path
          description: Format - int32. The interest category identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<InterestCategoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestCategoryVmOut'
              example:
                category: String
                districtWide: false
                type: 1
                sortOrder: 1
                onlineApplication: false
                schoolCode: String
                active: false
                interestCategoryID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - InterestCategories
        - People
      summary: Replaces a interest category.
      description: Replaces a interest category.
      operationId: Categories_ReplaceInterestCategory
      parameters:
        - name: interestCategoryId
          in: path
          description: Format - int32. The interest category identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The interest category.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/InterestCategoryVmIn'
            example:
              category: String
              districtWide: false
              type: 1
              sortOrder: 1
              onlineApplication: false
              schoolCode: String
              active: false
      responses:
        '200':
          description: Task<ActionResult<InterestCategoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestCategoryVmOut'
              example:
                category: String
                districtWide: false
                type: 1
                sortOrder: 1
                onlineApplication: false
                schoolCode: String
                active: false
                interestCategoryID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - InterestCategories
        - People
      summary: Updates tha interest category.
      description: Updates tha interest category.
      operationId: Categories_UpdateInterestCategory
      parameters:
        - name: interestCategoryId
          in: path
          description: Format - int32. The interest category identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<InterestCategoryVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestCategoryVmOut'
              example:
                category: String
                districtWide: false
                type: 1
                sortOrder: 1
                onlineApplication: false
                schoolCode: String
                active: false
                interestCategoryID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /interests/Items:
    get:
      tags:
        - InterestItems
        - People
      summary: Gets a list of interest items.
      description: Gets a list of interest items.
      operationId: Items_GetAllInterestItems
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<InterestItemsVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfInterestItemsVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - InterestItems
        - People
      summary: Creates a interest items.
      description: Creates a interest items.
      operationId: Items_CreateInterestItems
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The interest items.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
      responses:
        '200':
          description: Task<ActionResult<InterestItemsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestItemsVmOut'
              example:
                interest: String
                interestCategoryID: 1
                sortOrder: 1
                active: false
                interestID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/interests/Items/{interestItemsId}':
    get:
      tags:
        - People
        - InterestItems
      summary: Gets a single interest items.
      description: Gets a single interest items.
      operationId: Items_GetInterestItems
      parameters:
        - name: interestItemsId
          in: path
          description: Format - int32. The interest items identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<InterestItemsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestItemsVmOut'
              example:
                interest: String
                interestCategoryID: 1
                sortOrder: 1
                active: false
                interestID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - InterestItems
        - People
      summary: Replaces a interest items.
      description: Replaces a interest items.
      operationId: Items_ReplaceInterestItems
      parameters:
        - name: interestItemsId
          in: path
          description: Format - int32. The interest items identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The interest items.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          application/json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          text/json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/InterestItemsVmIn'
            example:
              interest: String
              interestCategoryID: 1
              sortOrder: 1
              active: false
      responses:
        '200':
          description: Task<ActionResult<InterestItemsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestItemsVmOut'
              example:
                interest: String
                interestCategoryID: 1
                sortOrder: 1
                active: false
                interestID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - InterestItems
        - People
      summary: Updates tha interest items.
      description: Updates tha interest items.
      operationId: Items_UpdateInterestItems
      parameters:
        - name: interestItemsId
          in: path
          description: Format - int32. The interest items identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<InterestItemsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestItemsVmOut'
              example:
                interest: String
                interestCategoryID: 1
                sortOrder: 1
                active: false
                interestID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /families:
    get:
      tags:
        - Families
        - People
      summary: Gets all families.
      description: Gets all families.
      operationId: Family_GetAllFamilies
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<FamilyConfigVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfFamilyConfigVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Families
        - People
      summary: Creates the family.
      description: Creates the family.
      operationId: Family_CreateFamily
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The family.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          text/json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
      responses:
        '200':
          description: Task<ActionResult<FamilyConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyConfigVmOut'
              example:
                familyName: String
                enableWeb: false
                unlisted: 1
                note: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                familyNameBP: String
                parentsWebFinancialBlock: false
                familyID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/families/{familyId}':
    get:
      tags:
        - People
        - Families
      summary: Gets the family.
      description: Gets the family.
      operationId: Family_GetFamily
      parameters:
        - name: familyId
          in: path
          description: Format - int32. The family identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<FamilyConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyConfigVmOut'
              example:
                familyName: String
                enableWeb: false
                unlisted: 1
                note: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                familyNameBP: String
                parentsWebFinancialBlock: false
                familyID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Families
        - People
      summary: Replaces the family.
      description: Replaces the family.
      operationId: Family_ReplaceFamily
      parameters:
        - name: familyId
          in: path
          description: Format - int32. The family identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The family.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          text/json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/FamilyConfigVmIn'
            example:
              familyName: String
              enableWeb: false
              unlisted: 1
              note: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              familyNameBP: String
              parentsWebFinancialBlock: false
      responses:
        '200':
          description: Task<ActionResult<FamilyConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyConfigVmOut'
              example:
                familyName: String
                enableWeb: false
                unlisted: 1
                note: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                familyNameBP: String
                parentsWebFinancialBlock: false
                familyID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Families
      summary: Updates the family.
      description: Updates the family.
      operationId: Family_UpdateFamily
      parameters:
        - name: familyId
          in: path
          description: Format - int32. The family identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<FamilyConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyConfigVmOut'
              example:
                familyName: String
                enableWeb: false
                unlisted: 1
                note: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                familyNameBP: String
                parentsWebFinancialBlock: false
                familyID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Students/PreProgression:
    get:
      tags:
        - People
        - StudentPreProgression
      summary: Gets a list of student progression
      description: Gets a list of student progression
      operationId: StudentPreProgression_GetStudentProgressionListV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStudentPreProgressionModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Students/{personStudentId}/PreProgression':
    get:
      tags:
        - People
        - StudentPreProgression
      summary: Gets student progression by id
      description: Gets student progression by id
      operationId: StudentPreProgression_GetStudentProgressionV1
      parameters:
        - name: personStudentId
          in: path
          description: 'Format - int32. The unique student id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPreProgressionModel'
              example:
                preProgressionStatus: String
                preProgressionNextStatus: String
                preProgressionGradeLevel: String
                preProgressionNextGradeLevel: String
                preProgressionSchoolCode: String
                preProgressionNextSchoolCode: String
                preProgressionProgressionDate: '2020-01-01'
                progressionDate: '2020-01-01'
                personStudentId: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /SchoolYears:
    get:
      tags:
        - Academics
        - SchoolYears
      summary: 'Gets a list of SchoolYears. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      description: 'Gets a list of SchoolYears. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      operationId: SchoolYear_GetSchoolYearV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSchoolYearModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Academics
        - SchoolYears
      summary: Create SchoolYear
      description: Create SchoolYear
      operationId: SchoolYear_PostSchoolYearV1
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The schoolYear model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
      responses:
        '201':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/SchoolYears/{schoolYearId}':
    get:
      tags:
        - Academics
        - SchoolYears
      summary: Gets SchoolYear by id
      description: Gets SchoolYear by id
      operationId: SchoolYear_GetSchoolYearByIdV1
      parameters:
        - name: schoolYearId
          in: path
          description: 'Format - int32. The schoolYear id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolYearModel'
              example:
                yearName: String
                allowInquiry: false
                blockAcademicYear: false
                yearId: 0
                firstDay: string
                lastDay: string
                schoolCode: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Academics
        - SchoolYears
      summary: Update SchoolYear by id
      description: Update SchoolYear by id
      operationId: SchoolYear_PutSchoolYearByIdV1
      parameters:
        - name: schoolYearId
          in: path
          description: 'Format - int32. The schoolYear id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: 'The schoolYear model '
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolYearRequest'
            example:
              yearName: String
              allowInquiry: false
              blockAcademicYear: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolYearModel'
              example:
                yearName: String
                allowInquiry: false
                blockAcademicYear: false
                yearId: 0
                firstDay: string
                lastDay: string
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - SchoolYears
        - Academics
      summary: Partial Update SchoolYear by id
      description: Partial Update SchoolYear by id
      operationId: SchoolYear_PatchSchoolYearByIdV1
      parameters:
        - name: schoolYearId
          in: path
          description: 'Format - int32. The schoolYear id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The schoolYear patch doc
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolYearModel'
              example:
                yearName: String
                allowInquiry: false
                blockAcademicYear: false
                yearId: 0
                firstDay: string
                lastDay: string
                schoolCode: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Classes:
    get:
      tags:
        - Academics
        - Classes
      summary: List all classes.
      description: List all classes.
      operationId: Classes_GetAllClasses
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV1>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV1'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Classes
        - Academics
      summary: Creates a class.
      description: Creates a class.
      operationId: Classes_CreateAClass
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          application/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV1>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV1'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                instructor2Id: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/{classId}':
    get:
      tags:
        - Academics
        - Classes
      summary: Gets a class.
      description: Gets a class.
      operationId: Classes_GetAClass
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV1>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV1'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                instructor2Id: 0
                classId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Academics
        - Classes
      summary: Replaces a class.
      description: Replaces a class.
      operationId: Classes_ReplaceAClass
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          application/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV1'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              instructor2Id: 0
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV1>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV1'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                instructor2Id: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Academics
        - Classes
      summary: Updates a class.
      description: Updates a class.
      operationId: Classes_UpdateAClass
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV1>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV1'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                instructor2Id: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/schoolYears/{yearId}':
    get:
      tags:
        - Classes
        - Academics
      summary: Lists the classes by year.
      description: Lists the classes by year.
      operationId: Classes_GetClassesByYear
      parameters:
        - name: yearId
          in: path
          description: Format - int32. The year identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV1>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV1'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/students/{studentId}':
    get:
      tags:
        - Classes
        - Academics
      summary: Lists the classes by student.
      description: Lists the classes by student.
      operationId: Classes_GetClassesByStudent
      parameters:
        - name: studentId
          in: path
          description: Format - int32. The student identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV1>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV1'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Courses:
    get:
      tags:
        - Courses
        - Academics
      summary: List all the courses.
      description: List all the courses.
      operationId: Courses_GetCourses
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<CoursesVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfCoursesVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Courses
        - Academics
      summary: Creates a course.
      description: Creates a course.
      operationId: Courses_CreateCourse
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The course vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          text/json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
      responses:
        '200':
          description: Task<ActionResult<CoursesVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesVmOut'
              example:
                levelID: 1
                legacyCourseID: String
                title: String
                abbreviation: String
                activity: false
                attendance: false
                homeRoom: false
                schoolCode: String
                department: String
                active: false
                elective: false
                hs: false
                preSchool: false
                elementary: false
                middleSchool: false
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                courseType: String
                defaultStaffID: 1
                departmentID: 1
                description: String
                stateID: String
                maxSize: 1
                courseID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Courses/{courseId}':
    get:
      tags:
        - Academics
        - Courses
      summary: Gets a course.
      description: Gets a course.
      operationId: Courses_GetACourse
      parameters:
        - name: courseId
          in: path
          description: Format - int32. The course identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<CoursesVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesVmOut'
              example:
                levelID: 1
                legacyCourseID: String
                title: String
                abbreviation: String
                activity: false
                attendance: false
                homeRoom: false
                schoolCode: String
                department: String
                active: false
                elective: false
                hs: false
                preSchool: false
                elementary: false
                middleSchool: false
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                courseType: String
                defaultStaffID: 1
                departmentID: 1
                description: String
                stateID: String
                maxSize: 1
                courseID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Courses
        - Academics
      summary: Replaces a course.
      description: Replaces a course.
      operationId: Courses_ReplaceACourse
      parameters:
        - name: courseId
          in: path
          description: Format - int32. The course identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The course vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          text/json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/CoursesVmIn'
            example:
              levelID: 1
              legacyCourseID: String
              title: String
              abbreviation: String
              activity: false
              attendance: false
              homeRoom: false
              schoolCode: String
              department: String
              active: false
              elective: false
              hs: false
              preSchool: false
              elementary: false
              middleSchool: false
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              courseType: String
              defaultStaffID: 1
              departmentID: 1
              description: String
              stateID: String
              maxSize: 1
      responses:
        '200':
          description: Task<ActionResult<CoursesVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesVmOut'
              example:
                levelID: 1
                legacyCourseID: String
                title: String
                abbreviation: String
                activity: false
                attendance: false
                homeRoom: false
                schoolCode: String
                department: String
                active: false
                elective: false
                hs: false
                preSchool: false
                elementary: false
                middleSchool: false
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                courseType: String
                defaultStaffID: 1
                departmentID: 1
                description: String
                stateID: String
                maxSize: 1
                courseID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Academics
        - Courses
      summary: Updates a Course.
      description: Updates a Course.
      operationId: Courses_UpdateACourse
      parameters:
        - name: courseId
          in: path
          description: Format - int32. The course identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<CoursesVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesVmOut'
              example:
                levelID: 1
                legacyCourseID: String
                title: String
                abbreviation: String
                activity: false
                attendance: false
                homeRoom: false
                schoolCode: String
                department: String
                active: false
                elective: false
                hs: false
                preSchool: false
                elementary: false
                middleSchool: false
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                courseType: String
                defaultStaffID: 1
                departmentID: 1
                description: String
                stateID: String
                maxSize: 1
                courseID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /academics/Enrollments:
    get:
      tags:
        - Enrollments
        - Academics
      summary: Lists all the enrollments.
      description: Lists all the enrollments.
      operationId: Enrollments_GetEnrollments
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<EnrollmentVm>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassEnrollmentVm'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Academics
        - Enrollments
      summary: Creates an enrollment.
      description: Creates an enrollment.
      operationId: Enrollments_CreateAnEnrollment
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The enrollment.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
      responses:
        '200':
          description: Task<ActionResult<EnrollmentVm>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentVm'
              example:
                altYearId: 1
                classId: 1
                enrolled: false
                enrolled1: false
                enrolled2: false
                enrolled3: false
                enrolled4: false
                enrolled5: false
                enrolled6: false
                gradeLevel: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                studentId: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/academics/Enrollments/students/{studentId}/classes/{classId}':
    get:
      tags:
        - Academics
        - Enrollments
      summary: Gets an enrollment.
      description: Gets an enrollment.
      operationId: Enrollments_GetAnEnrollment
      parameters:
        - name: studentId
          in: path
          description: Format - int32. The student identifier.
          required: true
          schema:
            type: integer
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<EnrollmentVm>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentVm'
              example:
                altYearId: 1
                classId: 1
                enrolled: false
                enrolled1: false
                enrolled2: false
                enrolled3: false
                enrolled4: false
                enrolled5: false
                enrolled6: false
                gradeLevel: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                studentId: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Enrollments
        - Academics
      summary: Replaces an enrollment.
      description: Replaces an enrollment.
      operationId: Enrollments_ReplaceAnEnrollment
      parameters:
        - name: studentId
          in: path
          description: Format - int32. The student identifier.
          required: true
          schema:
            type: integer
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The enrollment.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          application/json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          text/json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassEnrollmentVm'
            example:
              altYearId: 1
              classId: 1
              enrolled: false
              enrolled1: false
              enrolled2: false
              enrolled3: false
              enrolled4: false
              enrolled5: false
              enrolled6: false
              gradeLevel: String
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              studentId: 1
      responses:
        '200':
          description: Task<ActionResult<EnrollmentVm>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentVm'
              example:
                altYearId: 1
                classId: 1
                enrolled: false
                enrolled1: false
                enrolled2: false
                enrolled3: false
                enrolled4: false
                enrolled5: false
                enrolled6: false
                gradeLevel: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                studentId: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Academics
        - Enrollments
      summary: Updates an enrollment.
      description: Updates an enrollment.
      operationId: Enrollments_UpdateAnEnrollment
      parameters:
        - name: studentId
          in: path
          description: Format - int32. The student identifier.
          required: true
          schema:
            type: integer
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<EnrollmentVm>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentVm'
              example:
                altYearId: 1
                classId: 1
                enrolled: false
                enrolled1: false
                enrolled2: false
                enrolled3: false
                enrolled4: false
                enrolled5: false
                enrolled6: false
                gradeLevel: String
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                studentId: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /SchoolConfigurations:
    get:
      tags:
        - SchoolConfigurations
        - Academics
      summary: List all the school configs.
      description: List all the school configs.
      operationId: SchoolConfigurations_GetSchoolConfigs
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<SchoolConfigVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSchoolConfigVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/SchoolConfigurations/{schoolId}':
    get:
      tags:
        - Academics
        - SchoolConfigurations
      summary: Gets a school configuration.
      description: Gets a school configuration.
      operationId: SchoolConfigurations_GetASchoolConfig
      parameters:
        - name: schoolId
          in: path
          description: Format - int32. The school identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<SchoolConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolConfigVmOut'
              example:
                fax: String
                phone: String
                active: true
                address: string
                city: string
                configSchoolID: 0
                defaultTermId: 0
                defaultYearId: 0
                districtName: string
                email: string
                modifiedBy: 0
                modifiedDate: string
                nextYearId: 0
                parentAlert: true
                pwTermID: 0
                pwTermID2: 0
                pwYearID: 0
                schoolCode: string
                schoolLMS: true
                schoolName: string
                state: string
                zip: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - SchoolConfigurations
        - Academics
      summary: Replaces a school configuration.
      description: Replaces a school configuration.
      operationId: SchoolConfigurations_ReplaceASchoolConfig
      parameters:
        - name: schoolId
          in: path
          description: Format - int32. The school identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolConfigVmIn'
            example:
              fax: String
              phone: String
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolConfigVmIn'
            example:
              fax: String
              phone: String
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolConfigVmIn'
            example:
              fax: String
              phone: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolConfigVmIn'
            example:
              fax: String
              phone: String
      responses:
        '200':
          description: Task<ActionResult<SchoolConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolConfigVmOut'
              example:
                fax: String
                phone: String
                active: true
                address: string
                city: string
                configSchoolID: 0
                defaultTermId: 0
                defaultYearId: 0
                districtName: string
                email: string
                modifiedBy: 0
                modifiedDate: string
                nextYearId: 0
                parentAlert: true
                pwTermID: 0
                pwTermID2: 0
                pwYearID: 0
                schoolCode: string
                schoolLMS: true
                schoolName: string
                state: string
                zip: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - SchoolConfigurations
        - Academics
      summary: Updates a school configuration.
      description: Updates a school configuration.
      operationId: SchoolConfigurations_UpdateASchoolConfig
      parameters:
        - name: schoolId
          in: path
          description: Format - int32. The school identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<SchoolConfigVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolConfigVmOut'
              example:
                fax: String
                phone: String
                active: true
                address: string
                city: string
                configSchoolID: 0
                defaultTermId: 0
                defaultYearId: 0
                districtName: string
                email: string
                modifiedBy: 0
                modifiedDate: string
                nextYearId: 0
                parentAlert: true
                pwTermID: 0
                pwTermID2: 0
                pwYearID: 0
                schoolCode: string
                schoolLMS: true
                schoolName: string
                state: string
                zip: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/schools/{schoolId}/SchoolTerms':
    get:
      tags:
        - Academics
        - SchoolTerms
      summary: Gets the school terms.
      description: Gets the school terms.
      operationId: SchoolTerms_GetSchoolTerms
      parameters:
        - name: schoolId
          in: path
          description: Format - int32. The school identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<SchoolTermsVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSchoolTermsVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/SchoolTerms/{schoolTermId}':
    get:
      tags:
        - Academics
        - SchoolTerms
      summary: Gets a school term.
      description: Gets a school term.
      operationId: SchoolTerms_GetASchoolTerm
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOut'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolTermID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Academics
        - SchoolTerms
      summary: Replaces the school term.
      description: Replaces the school term.
      operationId: SchoolTerms_ReplaceSchoolTerm
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The updated term.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOut'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - SchoolTerms
        - Academics
      summary: Updates the school term.
      description: Updates the school term.
      operationId: SchoolTerms_UpdateSchoolTerm
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOut'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /SchoolTerms:
    post:
      tags:
        - SchoolTerms
        - Academics
      summary: Creates the school term.
      description: Creates the school term.
      operationId: SchoolTerms_CreateSchoolTerm
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The school terms.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOut'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                schoolTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /people/Staff:
    get:
      tags:
        - People
        - Staff
      summary: Lists all staff.
      description: Lists all staff.
      operationId: Staff_GetStaff
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<StaffVmOut>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStaffVmOut'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Staff
        - People
      summary: Creates a staff member.
      description: Creates a staff member.
      operationId: Staff_CreateAStaffMember
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The staff member.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          application/json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          text/json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
      responses:
        '200':
          description: Task<ActionResult<StaffVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffVmOut'
              example:
                active: false
                administrator: false
                blockSurvey: false
                districtUser: false
                districtWideUser: false
                dualEnrolledUser: false
                elementary: false
                faculty: false
                fullTime: false
                highSchool: false
                middleSchool: false
                preschool: false
                staffDirectoryBlock: false
                substitute: false
                unsubscribeRenWebEmail: false
                endDate: '2020-01-01'
                startDate: '2020-01-01'
                fte: 1
                financialFamilyId: 1
                pda: 1
                roomId: 1
                schools: [ ]
                department: String
                firstName: String
                lastName: String
                legacyStaffId: String
                middleName: String
                parentAlertPin: String
                spouse: String
                teacherSite: String
                staffId: 0
                name: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/people/Staff/{staffId}':
    get:
      tags:
        - Staff
        - People
      summary: Gets a staff member.
      description: Gets a staff member.
      operationId: Staff_GetAStaffMember
      parameters:
        - name: staffId
          in: path
          description: Format - int32. The staff identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<StaffVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffVmOut'
              example:
                active: false
                administrator: false
                blockSurvey: false
                districtUser: false
                districtWideUser: false
                dualEnrolledUser: false
                elementary: false
                faculty: false
                fullTime: false
                highSchool: false
                middleSchool: false
                preschool: false
                staffDirectoryBlock: false
                substitute: false
                unsubscribeRenWebEmail: false
                endDate: '2020-01-01'
                startDate: '2020-01-01'
                fte: 1
                financialFamilyId: 1
                pda: 1
                roomId: 1
                schools: [ ]
                department: String
                firstName: String
                lastName: String
                legacyStaffId: String
                middleName: String
                parentAlertPin: String
                spouse: String
                teacherSite: String
                staffId: 0
                name: string
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Staff
        - People
      summary: Replaces a staff member.
      description: Replaces a staff member.
      operationId: Staff_ReplaceAStaffMember
      parameters:
        - name: staffId
          in: path
          description: Format - int32. The staff identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The staff member.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          application/json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          text/json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/StaffVmIn'
            example:
              active: false
              administrator: false
              blockSurvey: false
              districtUser: false
              districtWideUser: false
              dualEnrolledUser: false
              elementary: false
              faculty: false
              fullTime: false
              highSchool: false
              middleSchool: false
              preschool: false
              staffDirectoryBlock: false
              substitute: false
              unsubscribeRenWebEmail: false
              endDate: '2020-01-01'
              startDate: '2020-01-01'
              fte: 1
              financialFamilyId: 1
              pda: 1
              roomId: 1
              schools: [ ]
              department: String
              firstName: String
              lastName: String
              legacyStaffId: String
              middleName: String
              parentAlertPin: String
              spouse: String
              teacherSite: String
      responses:
        '200':
          description: Task<ActionResult<StaffVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffVmOut'
              example:
                active: false
                administrator: false
                blockSurvey: false
                districtUser: false
                districtWideUser: false
                dualEnrolledUser: false
                elementary: false
                faculty: false
                fullTime: false
                highSchool: false
                middleSchool: false
                preschool: false
                staffDirectoryBlock: false
                substitute: false
                unsubscribeRenWebEmail: false
                endDate: '2020-01-01'
                startDate: '2020-01-01'
                fte: 1
                financialFamilyId: 1
                pda: 1
                roomId: 1
                schools: [ ]
                department: String
                firstName: String
                lastName: String
                legacyStaffId: String
                middleName: String
                parentAlertPin: String
                spouse: String
                teacherSite: String
                staffId: 0
                name: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - People
        - Staff
      summary: Updates a staff member.
      description: Updates a staff member.
      operationId: Staff_UpdateAStaffMember
      parameters:
        - name: staffId
          in: path
          description: Format - int32. The staff identifier.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/OperationArray'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<StaffVmOut>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffVmOut'
              example:
                active: false
                administrator: false
                blockSurvey: false
                districtUser: false
                districtWideUser: false
                dualEnrolledUser: false
                elementary: false
                faculty: false
                fullTime: false
                highSchool: false
                middleSchool: false
                preschool: false
                staffDirectoryBlock: false
                substitute: false
                unsubscribeRenWebEmail: false
                endDate: '2020-01-01'
                startDate: '2020-01-01'
                fte: 1
                financialFamilyId: 1
                pda: 1
                roomId: 1
                schools: [ ]
                department: String
                firstName: String
                lastName: String
                legacyStaffId: String
                middleName: String
                parentAlertPin: String
                spouse: String
                teacherSite: String
                staffId: 0
                name: string
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignments/classes/{classId}/terms/{termId}':
    get:
      tags:
        - Assignments
      summary: 'Gets a list of Assignments by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      description: 'Gets a list of Assignments by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      operationId: Assignment_GetAssignmentByClassV1
      parameters:
        - name: classId
          in: path
          description: Format - int32. The Class Id for the assignments you are getting.
          required: true
          schema:
            type: integer
        - name: termId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAssignmentModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignments/{sisAssignmentId}':
    get:
      tags:
        - Assignments
      summary: Gets Assignment by id
      description: Gets Assignment by id
      operationId: Assignment_GetAssignmentByIdV1
      parameters:
        - name: sisAssignmentId
          in: path
          description: 'Format - int32. The assignment id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentModel'
              example:
                sisAssignmentId: 1
                classCategoryId: 1
                classId: 1
                classAssignmentId: 1
                title: String
                description: String
                dateAssigned: '2020-01-01'
                dateDue: '2020-01-01'
                assignmentNumber: 1
                maxPoints: 1
                weight: 1
                extraCreditType: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                publish: false
                calculate: false
                markedAsTest: false
                isLmsAssignment: false
                lmsItemId: 1
                lmsItemTypeId: 1
                descriptionHtml: String
                dateAssignedUtc: '2020-01-01'
                dateDueUtc: '2020-01-01'
                systemOfRecord: String
                googleAssignmentId: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Assignments
      summary: Patches an assignment by id
      description: Patches an assignment by id
      operationId: Assignment_PatchAssignment
      parameters:
        - name: sisAssignmentId
          in: path
          description: Format - int32. The assignment id
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: Operations to patch the assignment
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: The patched assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentModel'
              example:
                sisAssignmentId: 1
                classCategoryId: 1
                classId: 1
                classAssignmentId: 1
                title: String
                description: String
                dateAssigned: '2020-01-01'
                dateDue: '2020-01-01'
                assignmentNumber: 1
                maxPoints: 1
                weight: 1
                extraCreditType: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                publish: false
                calculate: false
                markedAsTest: false
                isLmsAssignment: false
                lmsItemId: 1
                lmsItemTypeId: 1
                descriptionHtml: String
                dateAssignedUtc: '2020-01-01'
                dateDueUtc: '2020-01-01'
                systemOfRecord: String
                googleAssignmentId: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/categories/classes/{classId}':
    get:
      tags:
        - Categories
        - Assignments
      summary: 'Gets a list of Categories by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      description: 'Gets a list of Categories by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      operationId: Categories_GetCategoriesByClassV1
      parameters:
        - name: classId
          in: path
          description: Format - int32. The Class Id for the categories you are getting.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAssignmentCategoryModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/categories/{sisCategoryId}':
    get:
      tags:
        - Categories
        - Assignments
      summary: Gets Category by id
      description: Gets Category by id
      operationId: Categories_GetCategoryByIdV1
      parameters:
        - name: sisCategoryId
          in: path
          description: 'Format - int32. The category id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategoryModel'
              example:
                sisCategoryId: 1
                classCategoryId: 1
                weight: 1
                classId: 1
                title: String
                description: String
                meetsInTerm1: false
                meetsInTerm2: false
                meetsInTerm3: false
                meetsInTerm4: false
                meetsInTerm5: false
                meetsInTerm6: false
                drop: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Categories
        - Assignments
      summary: Patches an assignment category by id
      description: Patches an assignment category by id
      operationId: Categories_PatchCategory
      parameters:
        - name: sisCategoryId
          in: path
          description: Format - int32. The assignment category id
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: Operations to patch the assignment category
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: The patched assignment category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategoryModel'
              example:
                sisCategoryId: 1
                classCategoryId: 1
                weight: 1
                classId: 1
                title: String
                description: String
                meetsInTerm1: false
                meetsInTerm2: false
                meetsInTerm3: false
                meetsInTerm4: false
                meetsInTerm5: false
                meetsInTerm6: false
                drop: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/grades/classes/{classId}':
    get:
      tags:
        - Assignments
        - Grades
      summary: 'Gets a list of Grades by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      description: 'Gets a list of Grades by Class. Support filter/sort by yearId, yearName, firstDay, lastDay.'
      operationId: Grades_GetGradesByClassV1
      parameters:
        - name: classId
          in: path
          description: Format - int32. The Class Id for the grades you are getting.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAssignmentGradesModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/grades/{sisGradeId}':
    get:
      tags:
        - Grades
        - Assignments
      summary: Gets Grades by id
      description: Gets Grades by id
      operationId: Grades_GetGradesByIdV1
      parameters:
        - name: sisGradeId
          in: path
          description: 'Format - int32. The grade id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGradesModel'
              example:
                sisGradeId: 1
                sisAssignmentId: 1
                studentId: 1
                maxPoints: 1
                receivedPoints: 1
                curvePoints: 1
                penaltyPoints: 1
                bonusPoints: 1
                notes: String
                weight: 1
                status: String
                emailSent: false
                displayGrade: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Grades
        - Assignments
      summary: Patches an assignment grade by id
      description: Patches an assignment grade by id
      operationId: Grades_PatchGrade
      parameters:
        - name: sisGradeId
          in: path
          description: Format - int32. The assignment grade id
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: Operations to patch the assignment grade
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: The patched assignment grade
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGradesModel'
              example:
                sisGradeId: 1
                sisAssignmentId: 1
                studentId: 1
                maxPoints: 1
                receivedPoints: 1
                curvePoints: 1
                penaltyPoints: 1
                bonusPoints: 1
                notes: String
                weight: 1
                status: String
                emailSent: false
                displayGrade: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Classes/v2:
    get:
      tags:
        - Academics
        - Classes
      summary: List all classes.
      description: List all classes.
      operationId: ClassesNew_GetAllClassesV2
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV2>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV2'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    post:
      tags:
        - Academics
        - Classes
      summary: Creates a class.
      description: Creates a class.
      operationId: ClassesNew_CreateAClassV2
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          application/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV2'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                secondaryStaffId: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/v2/{classId}':
    get:
      tags:
        - Classes
        - Academics
      summary: Gets a class.
      description: Gets a class.
      operationId: ClassesNew_GetAClassV2
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV2'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                secondaryStaffId: 0
                classId: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - Academics
        - Classes
      summary: Replaces a class.
      description: Replaces a class.
      operationId: ClassesNew_ReplaceAClassV2
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
      requestBody:
        description: The vm.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          application/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          text/json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassVmInV2'
            example:
              aideId: 1
              closed: false
              color: String
              colorText: String
              courseID: 1
              googleCourseId: String
              legacyClassId: String
              linkedClassId: 1
              maleFemale: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              name: String
              pattern: 1
              requiredRoom: 1
              section: String
              staffId: 1
              term1: false
              term2: false
              term3: false
              term4: false
              term5: false
              term6: false
              yearId: 1
              secondaryStaffId: 0
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV2'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                secondaryStaffId: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Academics
        - Classes
      summary: Updates a class.
      description: Updates a class.
      operationId: ClassesNew_UpdateAClassV2
      parameters:
        - name: classId
          in: path
          description: Format - int32. The class identifier.
          required: true
          schema:
            type: integer
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<ClassVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassVmOutV2'
              example:
                aideId: 1
                closed: false
                color: String
                colorText: String
                courseID: 1
                googleCourseId: String
                legacyClassId: String
                linkedClassId: 1
                maleFemale: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                name: String
                pattern: 1
                requiredRoom: 1
                section: String
                staffId: 1
                term1: false
                term2: false
                term3: false
                term4: false
                term5: false
                term6: false
                yearId: 1
                secondaryStaffId: 0
                classId: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/v2/schoolYears/{yearId}':
    get:
      tags:
        - Academics
        - Classes
      summary: Lists the classes by year.
      description: Lists the classes by year.
      operationId: ClassesNew_GetClassesByYearV2
      parameters:
        - name: yearId
          in: path
          description: Format - int32. The year identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV2>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV2'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Classes/v2/students/{studentId}':
    get:
      tags:
        - Academics
        - Classes
      summary: Lists the classes by student.
      description: Lists the classes by student.
      operationId: ClassesNew_GetClassesByStudentV2
      parameters:
        - name: studentId
          in: path
          description: Format - int32. The student identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<PagedResult<ClassVmOutV2>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassVmOutV2'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/SchoolTerms/v2/schools/{schoolId}':
    get:
      tags:
        - SchoolTerms
        - Academics
      summary: Gets the school terms.
      description: Gets the school terms.
      operationId: SchoolTermsNew_GetSchoolTermsV2
      parameters:
        - name: schoolId
          in: path
          description: Format - int32. The school identifier.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<PagedResult<SchoolTermsVmOutV2>>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfSchoolTermsVmOutV2'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/SchoolTerms/v2/{schoolTermId}':
    get:
      tags:
        - Academics
        - SchoolTerms
      summary: Gets a school term.
      description: Gets a school term.
      operationId: SchoolTermsNew_GetASchoolTermV2
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOutV2'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                uniqueTermID: 0
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    put:
      tags:
        - SchoolTerms
        - Academics
      summary: Replaces the school term.
      description: Replaces the school term.
      operationId: SchoolTermsNew_ReplaceSchoolTermV2
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
      requestBody:
        description: The updated term.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOutV2'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                uniqueTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Academics
        - SchoolTerms
      summary: Updates the school term.
      description: Updates the school term.
      operationId: SchoolTermsNew_UpdateSchoolTermV2
      parameters:
        - name: schoolTermId
          in: path
          description: Format - int32. The school term identifier.
          required: true
          schema:
            type: integer
      requestBody:
        description: The patch document.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation3Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOutV2'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                uniqueTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /SchoolTerms/v2:
    post:
      tags:
        - SchoolTerms
        - Academics
      summary: Creates the school term.
      description: Creates the school term.
      operationId: SchoolTermsNew_CreateSchoolTermV2
      requestBody:
        description: The school terms.
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          text/json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SchoolTermsVmIn'
            example:
              termID: 1
              yearID: 1
              name: String
              firstDay: '2020-01-01'
              lastDay: '2020-01-01'
              schoolCode: String
              semesterID: { }
              modifiedBy: 1
              modifiedDate: '2020-01-01'
      responses:
        '200':
          description: Task<ActionResult<SchoolTermsVmOutV2>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolTermsVmOutV2'
              example:
                termID: 1
                yearID: 1
                name: String
                firstDay: '2020-01-01'
                lastDay: '2020-01-01'
                schoolCode: String
                semesterID: { }
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                uniqueTermID: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /assignments:
    post:
      tags:
        - Assignments
      summary: Creates an assignment
      description: Creates an assignment
      operationId: Assignment_CreateAssignment
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The assignment to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignmentModelIn'
            example:
              classCategoryId: 1
              classId: 1
              classAssignmentId: 1
              title: String
              description: String
              dateAssigned: '2020-01-01'
              dateDue: '2020-01-01'
              assignmentNumber: 1
              maxPoints: 1
              weight: 1
              extraCreditType: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              publish: false
              calculate: false
              markedAsTest: false
              isLmsAssignment: false
              lmsItemId: 1
              lmsItemTypeId: 1
              descriptionHtml: String
              dateAssignedUtc: '2020-01-01'
              dateDueUtc: '2020-01-01'
              systemOfRecord: String
              googleAssignmentId: String
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentModelIn'
            example:
              classCategoryId: 1
              classId: 1
              classAssignmentId: 1
              title: String
              description: String
              dateAssigned: '2020-01-01'
              dateDue: '2020-01-01'
              assignmentNumber: 1
              maxPoints: 1
              weight: 1
              extraCreditType: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              publish: false
              calculate: false
              markedAsTest: false
              isLmsAssignment: false
              lmsItemId: 1
              lmsItemTypeId: 1
              descriptionHtml: String
              dateAssignedUtc: '2020-01-01'
              dateDueUtc: '2020-01-01'
              systemOfRecord: String
              googleAssignmentId: String
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentModelIn'
            example:
              classCategoryId: 1
              classId: 1
              classAssignmentId: 1
              title: String
              description: String
              dateAssigned: '2020-01-01'
              dateDue: '2020-01-01'
              assignmentNumber: 1
              maxPoints: 1
              weight: 1
              extraCreditType: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              publish: false
              calculate: false
              markedAsTest: false
              isLmsAssignment: false
              lmsItemId: 1
              lmsItemTypeId: 1
              descriptionHtml: String
              dateAssignedUtc: '2020-01-01'
              dateDueUtc: '2020-01-01'
              systemOfRecord: String
              googleAssignmentId: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentModelIn'
            example:
              classCategoryId: 1
              classId: 1
              classAssignmentId: 1
              title: String
              description: String
              dateAssigned: '2020-01-01'
              dateDue: '2020-01-01'
              assignmentNumber: 1
              maxPoints: 1
              weight: 1
              extraCreditType: 1
              modifiedBy: 1
              modifiedDate: '2020-01-01'
              publish: false
              calculate: false
              markedAsTest: false
              isLmsAssignment: false
              lmsItemId: 1
              lmsItemTypeId: 1
              descriptionHtml: String
              dateAssignedUtc: '2020-01-01'
              dateDueUtc: '2020-01-01'
              systemOfRecord: String
              googleAssignmentId: String
      responses:
        '201':
          description: The created assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentModel'
              example:
                sisAssignmentId: 1
                classCategoryId: 1
                classId: 1
                classAssignmentId: 1
                title: String
                description: String
                dateAssigned: '2020-01-01'
                dateDue: '2020-01-01'
                assignmentNumber: 1
                maxPoints: 1
                weight: 1
                extraCreditType: 1
                modifiedBy: 1
                modifiedDate: '2020-01-01'
                publish: false
                calculate: false
                markedAsTest: false
                isLmsAssignment: false
                lmsItemId: 1
                lmsItemTypeId: 1
                descriptionHtml: String
                dateAssignedUtc: '2020-01-01'
                dateDueUtc: '2020-01-01'
                systemOfRecord: String
                googleAssignmentId: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /assignment/categories:
    post:
      tags:
        - Categories
        - Assignments
      summary: Creates an assignment category
      description: Creates an assignment category
      operationId: Categories_CreateCategory
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The assignment category to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignmentCategoryModelIn'
            example:
              classCategoryId: 1
              weight: 1
              classId: 1
              title: String
              description: String
              meetsInTerm1: false
              meetsInTerm2: false
              meetsInTerm3: false
              meetsInTerm4: false
              meetsInTerm5: false
              meetsInTerm6: false
              drop: 1
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCategoryModelIn'
            example:
              classCategoryId: 1
              weight: 1
              classId: 1
              title: String
              description: String
              meetsInTerm1: false
              meetsInTerm2: false
              meetsInTerm3: false
              meetsInTerm4: false
              meetsInTerm5: false
              meetsInTerm6: false
              drop: 1
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentCategoryModelIn'
            example:
              classCategoryId: 1
              weight: 1
              classId: 1
              title: String
              description: String
              meetsInTerm1: false
              meetsInTerm2: false
              meetsInTerm3: false
              meetsInTerm4: false
              meetsInTerm5: false
              meetsInTerm6: false
              drop: 1
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentCategoryModelIn'
            example:
              classCategoryId: 1
              weight: 1
              classId: 1
              title: String
              description: String
              meetsInTerm1: false
              meetsInTerm2: false
              meetsInTerm3: false
              meetsInTerm4: false
              meetsInTerm5: false
              meetsInTerm6: false
              drop: 1
      responses:
        '201':
          description: The created assignment category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentCategoryModel'
              example:
                sisCategoryId: 1
                classCategoryId: 1
                weight: 1
                classId: 1
                title: String
                description: String
                meetsInTerm1: false
                meetsInTerm2: false
                meetsInTerm3: false
                meetsInTerm4: false
                meetsInTerm5: false
                meetsInTerm6: false
                drop: 1
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/codeTranslations/classes/{classId}':
    get:
      tags:
        - CodeTranslations
        - Assignments
      summary: 'Gets a list of Class Assignment Grade Code Translations by Class. Support filter/sort by letterCode, percent, statusCode.'
      description: 'Gets a list of Class Assignment Grade Code Translations by Class. Support filter/sort by letterCode, percent, statusCode.'
      operationId: CodeTranslation_GetCodeTranslationsByClassId
      parameters:
        - name: classId
          in: path
          description: Format - int32. The Class Id for the translations you are getting.
          required: true
          schema:
            type: integer
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfClassAssignmentGradeCodeTranslationModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/assignment/codeTranslations/{id}':
    get:
      tags:
        - CodeTranslations
        - Assignments
      summary: Gets Class Assignment Grade Code Translation by id
      description: Gets Class Assignment Grade Code Translation by id
      operationId: CodeTranslation_GetCodeTranslationByIdV1
      parameters:
        - name: id
          in: path
          description: 'Format - int32. The translations id '
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModel'
              example:
                id: 1
                classId: 1
                letterCode: String
                percent: 1
                statusCode: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
    patch:
      tags:
        - Assignments
        - CodeTranslations
      summary: Patches a class assignment grade code translation by id
      description: Patches a class assignment grade code translation by id
      operationId: CodeTranslation_PatchCodeTranslation
      parameters:
        - name: id
          in: path
          description: Format - int32. The translation id
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: Operations to patch the translation
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          text/json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
          application/*+json:
            schema:
              $ref: '#/components/schemas/Operation2Array'
            example:
              - path: String
                op: String
                from: String
                value: { }
      responses:
        '200':
          description: The patched translation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModel'
              example:
                id: 1
                classId: 1
                letterCode: String
                percent: 1
                statusCode: String
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /assignment/codeTranslations:
    post:
      tags:
        - CodeTranslations
        - Assignments
      summary: Creates a class assignment grade code translation.
      description: Creates a class assignment grade code translation.
      operationId: CodeTranslation_CreateCodeTranslation
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The translation to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModelIn'
            example:
              classId: 1
              letterCode: String
              percent: 1
              statusCode: String
          application/json:
            schema:
              $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModelIn'
            example:
              classId: 1
              letterCode: String
              percent: 1
              statusCode: String
          text/json:
            schema:
              $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModelIn'
            example:
              classId: 1
              letterCode: String
              percent: 1
              statusCode: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModelIn'
            example:
              classId: 1
              letterCode: String
              percent: 1
              statusCode: String
      responses:
        '201':
          description: The created assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModel'
              example:
                id: 1
                classId: 1
                letterCode: String
                percent: 1
                statusCode: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /assignment/grades:
    post:
      tags:
        - Grades
        - Assignments
      summary: Creates an assignment grade
      description: Creates an assignment grade
      operationId: Grades_CreateGrade
      parameters:
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        description: The assignment grade to create
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignmentGradesModelIn'
            example:
              sisAssignmentId: 1
              studentId: 1
              maxPoints: 1
              receivedPoints: 1
              curvePoints: 1
              penaltyPoints: 1
              bonusPoints: 1
              notes: String
              weight: 1
              status: String
              emailSent: false
              displayGrade: String
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentGradesModelIn'
            example:
              sisAssignmentId: 1
              studentId: 1
              maxPoints: 1
              receivedPoints: 1
              curvePoints: 1
              penaltyPoints: 1
              bonusPoints: 1
              notes: String
              weight: 1
              status: String
              emailSent: false
              displayGrade: String
          text/json:
            schema:
              $ref: '#/components/schemas/AssignmentGradesModelIn'
            example:
              sisAssignmentId: 1
              studentId: 1
              maxPoints: 1
              receivedPoints: 1
              curvePoints: 1
              penaltyPoints: 1
              bonusPoints: 1
              notes: String
              weight: 1
              status: String
              emailSent: false
              displayGrade: String
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignmentGradesModelIn'
            example:
              sisAssignmentId: 1
              studentId: 1
              maxPoints: 1
              receivedPoints: 1
              curvePoints: 1
              penaltyPoints: 1
              bonusPoints: 1
              notes: String
              weight: 1
              status: String
              emailSent: false
              displayGrade: String
      responses:
        '201':
          description: The created assignment grade
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentGradesModel'
              example:
                sisGradeId: 1
                sisAssignmentId: 1
                studentId: 1
                maxPoints: 1
                receivedPoints: 1
                curvePoints: 1
                penaltyPoints: 1
                bonusPoints: 1
                notes: String
                weight: 1
                status: String
                emailSent: false
                displayGrade: String
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse2'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/People/{personId}/ProfilePicture':
    get:
      tags:
        - People
        - Person
      summary: Get a person's picture
      description: Get a person's picture
      operationId: People_GetProfilePicture
      parameters:
        - name: personId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileImage'
              example:
                value: String
        '204':
          description: ''
          content:
            application/json: { }
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Admissions/InquiryForm/requests/{requestId}':
    get:
      tags:
        - InquiryForm
        - Admissions
      summary: Gets an inquiry form by request ID.
      description: Gets an inquiry form by request ID.
      operationId: InquiryForm_GetInquiryFormByRequestIdV1
      parameters:
        - name: requestId
          in: path
          description: Format - int32. The inquiry form's request ID
          required: true
          schema:
            type: integer
        - name: includeStudentData
          in: query
          description: Include Student Data in form.
          schema:
            type: boolean
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<InquiryFormModel>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryFormModel'
              example:
                requestId: 1
                studentId: 1
                schoolCode: String
                schoolOptions: [ ]
                standard: [ ]
                custom: [ ]
                interestCategories: [ ]
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Admissions/InquiryForm/members/{memberId}':
    post:
      tags:
        - InquiryForm
        - Admissions
      summary: Creates an inquiry form.
      description: Creates an inquiry form.
      operationId: InquiryForm_CreateInquiryFormV1
      parameters:
        - name: memberId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          application/json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          text/json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          application/*+json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
      responses:
        '200':
          description: Task<ActionResult<InquiryFormModel>>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInquiryFormCommandOut'
              example:
                requestId: 1
                studentId: 1
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  '/Admissions/InquiryForm/students/{studentId}':
    put:
      tags:
        - InquiryForm
        - Admissions
      summary: Updates an inquiry form.
      description: Updates an inquiry form.
      operationId: InquiryForm_UpdateInquiryFormV1
      parameters:
        - name: studentId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          application/json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          text/json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
          application/*+json:
            schema:
              $ref: '#/components/schemas/InquiryFormEditModel'
            example:
              standardAnswers: [ ]
              customAnswers: [ ]
      responses:
        '204':
          description: Task<ActionResult<InquiryFormModel>>.
          content:
            application/json: { }
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
  /Admissions/InquiryForm/requests:
    get:
      tags:
        - InquiryForm
        - Admissions
      summary: Lists all inquiry forms.
      description: Lists all inquiry forms.
      operationId: InquiryForm_GetInquiryFormsV1
      parameters:
        - name: Filters
          in: query
          schema:
            type: string
        - name: Sorts
          in: query
          schema:
            type: string
        - name: Page
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: PageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: api-version
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Task<ActionResult<PagedResult<InquiryFormModel>><.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfInquiryFormModel'
              example:
                results: [ ]
                currentPage: 1
                pageCount: 1
                pageSize: 1
                rowCount: 1
                nextPage: String
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: String
                title: String
                status: 1
                detail: String
                instance: String
                extensions: { }
components:
  schemas:
    PagedResultOfInquiryFormModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InquiryFormModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    InquiryFormModel:
      type: object
      properties:
        requestId:
          type: integer
          format: int32
        studentId:
          type: integer
          format: int32
        schoolCode:
          type: string
        schoolOptions:
          type: array
          items:
            type: string
        standard:
          type: array
          items:
            $ref: '#/components/schemas/StandardQuestionAnswerModel'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomQuestionAnswerModel'
        interestCategories:
          type: array
          items:
            $ref: '#/components/schemas/InterestCategoryModel'
      example:
        requestId: 1
        studentId: 1
        schoolCode: String
        schoolOptions: [ ]
        standard: [ ]
        custom: [ ]
        interestCategories: [ ]
    StandardQuestionAnswerModel:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/StandardQuestionModel'
        answer:
          $ref: '#/components/schemas/StandardAnswerModel'
      example:
        question: { }
        answer: { }
    StandardQuestionModel:
      allOf:
        - $ref: '#/components/schemas/QuestionBaseModel'
        - required:
            - id
          type: object
          properties:
            id:
              $ref: '#/components/schemas/QuestionType'
    QuestionType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
      type: integer
      description: ''
      x-enumNames:
        - Unknown
        - AddressLine
        - City
        - State
        - Zip
        - Country
        - ReferredBy
        - ReferredByDetails
        - ParentNotes
        - HomePhone
        - Parent1Salutation
        - Parent1FirstName
        - Parent1MiddleName
        - Parent1LastName
        - Parent1CellPhone
        - Parent1WorkPhone
        - Parent1Email
        - Parent1Gender
        - Parent2Salutation
        - Parent2FirstName
        - Parent2MiddleName
        - Parent2LastName
        - Parent2CellPhone
        - Parent2WorkPhone
        - Parent2Email
        - Parent2Gender
        - StudentGrade
        - StudentInquirySchool
        - StudentSchoolYear
        - StudentCurrentSchool
        - StudentFirstName
        - StudentMiddleName
        - StudentLastName
        - StudentBirthDate
        - StudentEmail
        - StudentGender
        - StudentInterests
        - InquireDate
    QuestionBaseModel:
      required:
        - questionAnswerType
        - requirementType
      type: object
      properties:
        label:
          type: string
        columns:
          type: integer
          format: int32
        questionAnswerType:
          $ref: '#/components/schemas/QuestionAnswerType'
        requirementType:
          $ref: '#/components/schemas/FieldRequirementType'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ListOptionModel'
      example:
        label: String
        columns: 1
        questionAnswerType: { }
        requirementType: { }
        options: [ ]
      x-abstract: true
    QuestionAnswerType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      description: ''
      x-enumNames:
        - Unknown
        - ShortText
        - LongText
        - Date
        - Dropdown
        - Radio
        - MultiSelectList
        - Event
        - YesNo
    FieldRequirementType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: ''
      x-enumNames:
        - Unknown
        - Required
        - Optional
        - Excluded
    ListOptionModel:
      type: object
      properties:
        display:
          type: string
        keyValue:
          type: integer
          format: int32
        textValue:
          type: string
        sortOrder:
          type: integer
          format: int32
        filter:
          type: string
      example:
        display: String
        keyValue: 1
        textValue: String
        sortOrder: 1
        filter: String
    StandardAnswerModel:
      allOf:
        - $ref: '#/components/schemas/AnswerBaseModel'
        - required:
            - id
          type: object
          properties:
            id:
              $ref: '#/components/schemas/QuestionType'
    AnswerBaseModel:
      type: object
      properties:
        boolValue:
          type: boolean
        textValue:
          type: string
        dateValue:
          type: string
          format: date-time
        intValue:
          type: integer
          format: int32
        listValues:
          type: array
          items:
            $ref: '#/components/schemas/ListValueModel'
      example:
        boolValue: false
        textValue: String
        dateValue: '2020-01-01T00:00:00.0000000+00:00'
        intValue: 1
        listValues: [ ]
      x-abstract: true
    ListValueModel:
      type: object
      properties:
        keyValue:
          type: integer
          format: int32
        textValue:
          type: string
      example:
        keyValue: 1
        textValue: String
    CustomQuestionAnswerModel:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/CustomQuestionModel'
        answer:
          $ref: '#/components/schemas/CustomAnswerModel'
      example:
        question: { }
        answer: { }
    CustomQuestionModel:
      allOf:
        - $ref: '#/components/schemas/QuestionBaseModel'
        - required:
            - id
            - requestLevel
            - sortOrder
            - isConditional
          type: object
          properties:
            id:
              type: integer
              format: int32
            fullText:
              type: string
            requestLevel:
              $ref: '#/components/schemas/RequestLevelType'
            sortOrder:
              type: integer
              format: int32
            eventId:
              type: integer
              format: int32
            isConditional:
              type: boolean
            conditionalRequirement:
              $ref: '#/components/schemas/ConditionalRequirementModel'
    RequestLevelType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: ''
      x-enumNames:
        - Unknown
        - Parent
        - Student
    ConditionalRequirementModel:
      type: object
      properties:
        triggerQuestionId:
          type: integer
          format: int32
        options:
          type: array
          items:
            type: integer
            format: int32
      example:
        triggerQuestionId: 1
        options: [ ]
    CustomAnswerModel:
      allOf:
        - $ref: '#/components/schemas/AnswerBaseModel'
        - required:
            - questionId
          type: object
          properties:
            questionId:
              type: integer
              format: int32
            originalAnswerLabel:
              type: string
    InterestCategoryModel:
      required:
        - id
        - sortOrder
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        sortOrder:
          type: integer
          format: int32
        interestIds:
          type: array
          items:
            type: integer
            format: int32
      example:
        id: 1
        description: String
        sortOrder: 1
        interestIds: [ ]
    ProblemDetails:
      required:
        - extensions
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
        extensions:
          type: object
          additionalProperties: { }
      additionalProperties: { }
      example:
        type: String
        title: String
        status: 1
        detail: String
        instance: String
        extensions: { }
    ErrorResponse:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
      example:
        error:
          code: String
          message: String
          target: String
          details: [ ]
          innererror: { }
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        innererror:
          $ref: '#/components/schemas/Error'
      example:
        code: String
        message: String
        target: String
        details: [ ]
        innererror: { }
    CreateInquiryFormCommandOut:
      required:
        - requestId
        - studentId
      type: object
      properties:
        requestId:
          type: integer
          description: The request identifier.
          format: int32
        studentId:
          type: integer
          description: The student identifier.
          format: int32
      example:
        requestId: 1
        studentId: 1
    InquiryFormEditModel:
      type: object
      properties:
        standardAnswers:
          type: array
          items:
            $ref: '#/components/schemas/StandardAnswerModel'
        customAnswers:
          type: array
          items:
            $ref: '#/components/schemas/CustomAnswerModel'
      example:
        standardAnswers: [ ]
        customAnswers: [ ]
    PagedResultOfDefinedListsModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DefinedListsModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    DefinedListsModel:
      allOf:
        - $ref: '#/components/schemas/DefinedListsRequest'
        - required:
            - definedListId
          type: object
          properties:
            definedListId:
              type: integer
              description: Gets or sets the definedList identifier.
              format: int32
            schoolCode:
              type: string
              description: Gets or sets the school code.
          description: DefinedLists Model.
    DefinedListsRequest:
      type: object
      properties:
        type:
          type: string
          description: Gets or sets the type of the definedList.
        name:
          type: string
          description: Gets or sets the name of the definedList.
      description: DefinedLists Request.
      example:
        type: String
        name: String
    UserDefinedListType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - -1
      type: integer
      description: ''
      x-enumNames:
        - Accomodations
        - AccountingCode
        - AccountingFamilyStatementTemplate
        - AccountingFamilyStatementTitle
        - ApplicationStatus
        - AttendanceComment
        - BloodType
        - CalendarGroup
        - CalendarType
        - CampaignType
        - CashRegisterDepartment
        - CertificationLevel
        - CertificationType
        - ChildcareCharges
        - Citizenship
        - CourseDepartment
        - CourseObjectiveEvaluationMethod
        - CourseObjectiveGrouping
        - CourseObjectiveInstructionMethod
        - CourseType
        - CreateCourseChargesTemplate
        - CustomAccounting
        - CustomReportTemplates
        - DegreePlan
        - DegreeType
        - DisciplineSanction
        - DisciplineStatus
        - DisciplineViolation
        - DonorGiftDesignation
        - Ethnicity
        - FamilyInformationReport
        - FamilyRelation
        - HonorRollTemplate
        - Hospital
        - Immunization
        - JobCategory
        - Language
        - LockerGroups
        - MailLabels
        - MaritalStatus
        - MedicalTests
        - NewStudentInquiryStatus
        - OtherSchools
        - PTConferenceProblems
        - ParentCommittees
        - ParentServiceHours
        - PatternGroup
        - PaymentDescription
        - PaymentMethod
        - PersonInterests
        - Placement
        - ProgressReport
        - Race
        - ReferredBy
        - Religion
        - ReligiousEvents
        - ReportCard
        - Salutation
        - StaffAbsentReason
        - StaffBehaviorEvent
        - StaffBehaviorSanction
        - StaffBehaviorStatus
        - StaffConferenceObservations
        - StaffDepartment
        - StaffSchedules
        - StaffTitle
        - StudentInformation
        - StudentRecognition
        - StudentRecognitionCategory
        - StudentSchedules
        - Team
        - Transcript
        - TransferCreditSchool
        - WithdrawReason
        - LibraryCategory
        - LibraryMediaType
        - Gender
        - None
    Operation:
      type: object
      properties:
        path:
          type: string
        op:
          type: string
        from:
          type: string
        value: { }
      example:
        path: String
        op: String
        from: String
        value: { }
    PagedResultOfEnrollmentHistoryVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnrollmentHistoryVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    EnrollmentHistoryVmOut:
      allOf:
        - $ref: '#/components/schemas/EnrollmentHistoryVmIn'
        - required:
            - enrollmentHistoryId
          type: object
          properties:
            enrollmentHistoryId:
              type: integer
              description: Gets or sets the enrollment history identifier.
              format: int32
    EnrollmentHistoryVmIn:
      required:
        - studentId
      type: object
      properties:
        beginDate:
          type: string
          description: Gets or sets the begin enrollment date.
          format: date-time
        endDate:
          type: string
          description: Gets or sets the end enrollment date.
          format: date-time
        gradeLevel:
          type: string
          description: Gets or sets the grade level.
        note:
          type: string
          description: Gets or sets the note.
        schoolCode:
          type: string
          description: Gets or sets the school code.
        status:
          type: string
          description: Gets or sets the status.
        studentId:
          type: integer
          description: Gets or sets the student identifier.
          format: int32
        yearId:
          type: integer
          description: Gets or sets the year identifier.
          format: int32
      example:
        beginDate: '2020-01-01T00:00:00.0000000+00:00'
        endDate: '2020-01-01T00:00:00.0000000+00:00'
        gradeLevel: String
        note: String
        schoolCode: String
        status: String
        studentId: 1
        yearId: 1
    ExternalApiApimDocumentDto:
      required:
        - districtId
        - schoolId
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        apiHash:
          type: string
        subscriptionId:
          type: string
        districtId:
          type: integer
          format: int32
        schoolId:
          type: integer
          format: int32
        scopes:
          type: string
        schoolName:
          type: string
        districtName:
          type: string
      example:
        id: String
        name: String
        apiHash: String
        subscriptionId: String
        districtId: 1
        schoolId: 1
        scopes: String
        schoolName: String
        districtName: String
    PagedResultOfUserDefinedDataModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedDataModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    UserDefinedDataModel:
      allOf:
        - $ref: '#/components/schemas/UserDefinedDataRequest'
        - required:
            - dataId
          type: object
          properties:
            dataId:
              type: integer
              description: Gets or sets the data identifier.
              format: int32
          description: UserDefined Field Model.
    UserDefinedDataRequest:
      required:
        - fieldId
        - linkedId
      type: object
      properties:
        fieldId:
          type: integer
          description: Gets or sets the field identifier.
          format: int32
        linkedId:
          type: integer
          description: "Gets or sets the linked entity identifier.\n               eg: personId / familyId / classId / courseId / configSchoolId / InquiryId\n               Exact usage will depend on the group type.\n            "
          format: int32
        data:
          type: string
          description: Gets or sets the data.
      description: UserDefined Data Request.
      example:
        fieldId: 1
        linkedId: 1
        data: String
    PagedResultOfUserDefinedFieldModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedFieldModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    UserDefinedFieldModel:
      allOf:
        - $ref: '#/components/schemas/UserDefinedFieldRequest'
        - required:
            - fieldId
          type: object
          properties:
            fieldId:
              type: integer
              description: Gets or sets the field identifier.
              format: int32
          description: UserDefined Field Model.
    UserDefinedFieldRequest:
      type: object
      properties:
        groupId:
          type: integer
          description: Gets or sets the group identifier.
          format: int32
        fieldName:
          type: string
          description: Gets or sets the name of the field.
        fieldType:
          type: integer
          description: Gets or sets the type of the field.
          format: int32
        fieldOrder:
          type: integer
          description: Gets or sets the field order.
          format: int32
        listItems:
          type: array
          items:
            type: string
          description: 'Gets or sets the list items, used with the Defined List data type.'
      description: UserDefined Field Request.
      example:
        groupId: 1
        fieldName: String
        fieldType: 1
        fieldOrder: 1
        listItems: [ ]
    PagedResultOfUserDefinedGroupModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedGroupModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    UserDefinedGroupModel:
      allOf:
        - $ref: '#/components/schemas/UserDefinedGroupRequest'
        - required:
            - groupId
          type: object
          properties:
            groupId:
              type: integer
              description: Gets or sets the group identifier.
              format: int32
            schoolCode:
              type: string
              description: Gets or sets the school code.
            fieldList:
              type: array
              items:
                $ref: '#/components/schemas/UserDefinedFieldModel'
              description: Gets or sets the field list.
            securityLevel:
              type: integer
              description: 'Gets or sets the security level. 2= modify, 1=view, 0/no record = none'
              format: int32
          description: UserDefined Group Model.
    UserDefinedGroupRequest:
      type: object
      properties:
        groupType:
          type: string
          description: "Gets or sets the type of the group.\n            Examples: 'CLASS', 'COURSE', 'FAMILY', 'MEDICAL', 'NSI' (New Student Inquiry), \n            'PARENT', 'SCHOOL', 'STAFF', 'STUDENT'\n            "
        groupName:
          type: string
          description: Gets or sets the name of the group.
        groupOrder:
          type: integer
          description: Gets or sets the group order.
          format: int32
        districtWide:
          type: boolean
          description: 'Gets or sets a value indicating whether the UD group can be used from all schools in the district. [district wide].'
      description: UserDefined Group Request.
      example:
        groupType: String
        groupName: String
        groupOrder: 1
        districtWide: false
    UserDefinedGroupType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      description: ''
      x-enumNames:
        - Unspecified
        - Class
        - Course
        - Family
        - Parent
        - School
        - Staff
        - Student
        - Medical
        - NSI
    UserDefinedGroupSecurityModel:
      required:
        - canEveryoneUse
      type: object
      properties:
        canEveryoneUse:
          type: boolean
          description: "Gets or sets a value indicating whether this instance can everyone use.\n              If true, ignore the values from the Group and Person lists. (they don't matter in that case)\n            "
        group:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
          description: Gets or sets the group.
        person:
          type: array
          items:
            $ref: '#/components/schemas/UserDefinedGroupSecurityItemModel'
          description: Gets or sets the person.
      description: UserDefined Group Security.
      example:
        canEveryoneUse: false
        group: [ ]
        person: [ ]
    UserDefinedGroupSecurityItemModel:
      required:
        - id
        - securityLevel
      type: object
      properties:
        id:
          type: integer
          description: 'Gets or sets the identifier, personId or securityGroupId'
          format: int32
        securityLevel:
          type: integer
          description: 'Gets or sets the security level. 2= modify, 1=view, 0/no record = none'
          format: int32
      description: UserDefined Group Security Item.
      example:
        id: 1
        securityLevel: 1
    PagedResultOfAdvisingNoteVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvisingNoteVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AdvisingNoteVmOut:
      allOf:
        - $ref: '#/components/schemas/AdvisingNoteVmIn'
        - required:
            - noteId
          type: object
          properties:
            noteId:
              type: integer
              description: Gets or sets the note identifier.
              format: int32
    AdvisingNoteVmIn:
      type: object
      properties:
        note:
          type: string
        date:
          type: string
          description: Gets or sets the date.
          format: date-time
        studentId:
          type: integer
          description: Gets or sets the student identifier.
          format: int32
        modifiedBy:
          type: integer
          description: Gets or sets the modified by.
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date.
          format: date-time
      example:
        note: String
        date: '2020-01-01T00:00:00.0000000+00:00'
        studentId: 1
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
    PagedResultOfConferenceVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConferenceVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ConferenceVmOut:
      allOf:
        - $ref: '#/components/schemas/ConferenceVmIn'
        - required:
            - conferenceId
          type: object
          properties:
            conferenceId:
              type: integer
              description: Gets or sets the conference identifier.
              format: int32
          description: "Class ConferenceVmOut.\nImplements the ConferenceVmIn"
    ConferenceVmIn:
      type: object
      properties:
        date:
          type: string
          description: Gets or sets the date.
          format: date-time
        studentId:
          type: integer
          description: Gets or sets the student identifier.
          format: int32
        reason:
          type: string
          description: Gets or sets the reason note.
        problem:
          type: string
          description: Gets or sets the observation details note.
        staffID:
          type: integer
          description: Gets or sets the staff that reported the conference.
          format: int32
        subject:
          type: string
          description: Gets or sets the subject.
        recommendation:
          type: string
          description: Gets or sets the recommendation.
        parent:
          type: string
          description: Gets or sets the parent's reaction/comment.
        location:
          allOf:
            - $ref: '#/components/schemas/ConferenceLocationType'
          description: "Gets or sets the location.\nNull none\n-1 None\n 0 Phone Conversation\n 1 In-Person Conference\n 2 Email/Mail "
        modifiedBy:
          type: integer
          description: Gets or sets the modified by.
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date.
          format: date-time
        reason1:
          type: boolean
          description: Gets or sets a value indicating whether reason1 (Academic) is true for the student.
        reason2:
          type: boolean
          description: Gets or sets a value indicating whether reason2 (Conduct) is true for the student.
        reason3:
          type: boolean
          description: Gets or sets a value indicating whether reason3 (Other - ReasonNote) is true for the student.
        problem1:
          type: boolean
          description: "Gets or sets a value indicating whether problem1 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem2:
          type: boolean
          description: "Gets or sets a value indicating whether problem2 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem3:
          type: boolean
          description: "Gets or sets a value indicating whether problem3 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem4:
          type: boolean
          description: "Gets or sets a value indicating whether problem4 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem5:
          type: boolean
          description: "Gets or sets a value indicating whether problem5 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem6:
          type: boolean
          description: "Gets or sets a value indicating whether problem6 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem7:
          type: boolean
          description: "Gets or sets a value indicating whether problem7 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem8:
          type: boolean
          description: "Gets or sets a value indicating whether problem8 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem9:
          type: boolean
          description: "Gets or sets a value indicating whether problem9 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
        problem10:
          type: boolean
          description: "Gets or sets a value indicating whether problem10 is true for the student.\nThe reasons come from the defined list P/T Conference - Problems"
      example:
        date: '2020-01-01T00:00:00.0000000+00:00'
        studentId: 1
        reason: String
        problem: String
        staffID: 1
        subject: String
        recommendation: String
        parent: String
        location: { }
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        reason1: false
        reason2: false
        reason3: false
        problem1: false
        problem2: false
        problem3: false
        problem4: false
        problem5: false
        problem6: false
        problem7: false
        problem8: false
        problem9: false
        problem10: false
    ConferenceLocationType:
      enum:
        - 0
        - 1
        - 2
        - -1
      type: integer
      description: ''
      x-enumNames:
        - Phone
        - InPerson
        - EmailMail
        - None
    PagedResultOfHonorsVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/HonorsVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    HonorsVmOut:
      allOf:
        - $ref: '#/components/schemas/HonorsVmIn'
        - required:
            - honorId
          type: object
          properties:
            honorId:
              type: integer
              description: Gets or sets the automatic honor identifier.
              format: int32
    HonorsVmIn:
      required:
        - maxClass
        - minAvg
        - minClass
        - minCredits
        - sequence
        - timeFrame
      type: object
      properties:
        calcMethod:
          type: string
          description: "Gets or sets the calculate method.\nKnown Values: \n\"SUMMARYAVG\" - Use the Credit Weighted overall average of the student for this Honor.\n\"SUMMARYGPA\" - Use the Credit Weighted overall GPA of the student for this Honor.\n\"INDAVG\" - Look at each individual class average. (no grades under specific value)\n\"INDGPA\" - Look at each individual class GPA. (no grades under a specific value)\nNote: the GPA options are also used for UPGA honors."
        gradeLevel:
          type: string
          description: "Gets or sets the grade level;\nrestricted by Gradelevel in Configschool"
        honorName:
          type: string
          description: Gets or sets the name of the honor.
        honorRollId:
          type: integer
          description: "Gets or sets the honor roll identifier.\nRestricted to HonorRollConfigId"
          format: int32
        maxClass:
          type: number
          description: "Used with the Individual Class Average/Gpa:\nTo earn this honor, the student needs at least one class that meets this grade threshold."
          format: float
        minAvg:
          type: number
          description: 'To earn this honor, the student is not allowed to have a combined summary grade below this minimum value.'
          format: float
        minClass:
          type: number
          description: 'To earn this honor, the student is not allowed to have an individual grade below this minimum value.'
          format: float
        minCredits:
          type: number
          description: Gets or sets the minimum credits needed for Honor.
          format: float
        modifiedBy:
          type: integer
          description: Gets or sets the modified by.
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date.
          format: date-time
        schoolCode:
          type: string
          description: Gets or sets the school code.
        sequence:
          type: integer
          description: "Represents the order in which the Honor checks are processed when running the associated Honor Roll.\nStudents meeting the conditions for multiple honors within the same run configuration will keep the later entry.\nGiven this, the more strict Honors should be given a higher sequence number. \n(eg AB honor is sequence 0, while A Honor is sequence 1)\nUnique to 1 per grade per honor"
        timeFrame:
          type: integer
          description: "Gets or sets the time frame.\n0 if calculated at 'term', 1 if calculated cumulatively from transcript records.\nMay be redundant, (set at the Honor Roll Config level) but recommended to keep \nmaintained for historical compatibility with the 'run honor roll' processes."
      description: ViewModel for Honors
      example:
        calcMethod: String
        gradeLevel: String
        honorName: String
        honorRollId: 1
        maxClass: 1
        minAvg: 1
        minClass: 1
        minCredits: 1
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        schoolCode: String
        sequence: 1
        timeFrame: 1
    PagedResultOfStudentModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StudentModel:
      allOf:
        - $ref: '#/components/schemas/StudentRequest'
        - required:
            - personStudentId
            - studentId
            - configSchoolId
          type: object
          properties:
            personStudentId:
              type: integer
              description: Gets or sets the person student identifier.
              format: int32
            studentId:
              type: integer
              description: Gets or sets the student identifier.
              format: int32
            configSchoolId:
              type: integer
              description: Gets or sets the configuration school identifier.
              format: int32
            schoolCode:
              type: string
              description: Gets or sets the school code.
          description: Student Information.
    StudentRequest:
      required:
        - configSchoolId
      type: object
      properties:
        school:
          allOf:
            - $ref: '#/components/schemas/StudentSchoolModel'
          description: Gets or sets the school.
        locker:
          type: array
          items:
            $ref: '#/components/schemas/StudentLockerModel'
          description: Gets or sets the locker.
        configSchoolId:
          type: integer
          description: "Gets or sets the configuration school identifier.\nIf x-configSchoolId header is set to anything other\nthan default the MS will default to that value."
          format: int32
      description: Request for new Student.
      example:
        school: { }
        locker: [ ]
        configSchoolId: 1
    StudentSchoolModel:
      type: object
      properties:
        status:
          type: string
          description: Gets or sets the status.
        substatus:
          type: string
          description: Gets or sets the substatus.
        enrollDate:
          type: string
          description: Gets or sets the enroll date.
          format: date-time
        withdrawDate:
          type: string
          description: Gets or sets the withdraw date.
          format: date-time
        withdrawReason:
          type: string
          description: Gets or sets the withdraw reason.
        graduationDate:
          type: string
          description: Gets or sets the graduation date.
          format: date-time
        gradeLevel:
          type: string
          description: Gets or sets the grade level.
        nextStatus:
          type: string
          description: Gets or sets the next status.
        nextSchoolCode:
          type: string
          description: Gets or sets the next school code.
        nextGradeLevel:
          type: string
          description: Gets or sets the next grade level.
      description: Student School Information.
      example:
        status: String
        substatus: String
        enrollDate: '2020-01-01T00:00:00.0000000+00:00'
        withdrawDate: '2020-01-01T00:00:00.0000000+00:00'
        withdrawReason: String
        graduationDate: '2020-01-01T00:00:00.0000000+00:00'
        gradeLevel: String
        nextStatus: String
        nextSchoolCode: String
        nextGradeLevel: String
    StudentLockerModel:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: 'Gets or sets the identifier. Valid value is 1 or 2, match to locker1 or locker2.'
          format: int32
        name:
          type: string
          description: Gets or sets the name.
      description: Student locker Information.
      example:
        id: 1
        name: String
    PagedResultOfLockerModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LockerModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    LockerModel:
      allOf:
        - $ref: '#/components/schemas/LockerRequest'
        - required:
            - lockerId
            - configSchoolId
          type: object
          properties:
            lockerId:
              type: integer
              description: Gets or sets the locker identifier.
              format: int32
            configSchoolId:
              type: integer
              description: Gets or sets the configuration school identifier.
              format: int32
          description: Locker Information.
    LockerRequest:
      type: object
      properties:
        locker:
          type: string
          description: Gets or sets the locker.
        lockerGroupId:
          type: integer
          description: Gets or sets the locker group identifier.
          format: int32
        schoolCode:
          type: string
          description: Gets or sets the school code.
        combination1:
          type: string
          description: Gets or sets the combination1.
        combination2:
          type: string
          description: Gets or sets the combination2.
        combination3:
          type: string
          description: Gets or sets the combination3.
        combination4:
          type: string
          description: Gets or sets the combination4.
        combination5:
          type: string
          description: Gets or sets the combination5.
        note:
          type: string
          description: Gets or sets the note.
        outOfService:
          type: boolean
          description: 'Gets or sets a value indicating whether [out of service].'
        currentCombination:
          type: integer
          description: "Gets or sets which of the combinations is currently the active combination.\n1-5 indicate the corresponding Combination entry. 0 or null indicates no combination currently set.\n            "
          format: int32
      description: Locker Request.
      example:
        locker: String
        lockerGroupId: 1
        schoolCode: String
        combination1: String
        combination2: String
        combination3: String
        combination4: String
        combination5: String
        note: String
        outOfService: false
        currentCombination: 1
    PagedResultOfStudentPreProgressionModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentPreProgressionModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StudentPreProgressionModel:
      required:
        - personStudentId
      type: object
      properties:
        preProgressionStatus:
          type: string
          description: Gets or sets the pre progression status.
        preProgressionNextStatus:
          type: string
          description: Gets or sets the pre progression next status.
        preProgressionGradeLevel:
          type: string
          description: Gets or sets the pre progression grade level.
        preProgressionNextGradeLevel:
          type: string
          description: Gets or sets the pre progression next grade level.
        preProgressionSchoolCode:
          type: string
          description: Gets or sets the pre progression school code.
        preProgressionNextSchoolCode:
          type: string
          description: Gets or sets the pre progression next school code.
        preProgressionProgressionDate:
          type: string
          description: Gets or sets the pre progression progression date.
          format: date-time
        progressionDate:
          type: string
          description: Gets or sets the progression date.
          format: date-time
        personStudentId:
          type: integer
          description: Gets or sets the person student identifier.
          format: int32
      description: "Student Progression Information.\nThe current/next School/Status/Grade information for a student should be stored here as \npart of the progression logic, allowing for a progression undo. (We have several schools\nrequest a roll back each year, even with our checklist prior to progression)\n            "
      example:
        preProgressionStatus: String
        preProgressionNextStatus: String
        preProgressionGradeLevel: String
        preProgressionNextGradeLevel: String
        preProgressionSchoolCode: String
        preProgressionNextSchoolCode: String
        preProgressionProgressionDate: '2020-01-01T00:00:00.0000000+00:00'
        progressionDate: '2020-01-01T00:00:00.0000000+00:00'
        personStudentId: 1
    PagedResultOfStudentRecognitionModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentRecognitionModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StudentRecognitionModel:
      allOf:
        - $ref: '#/components/schemas/StudentRecognitionRequest'
        - required:
            - recognitionId
          type: object
          properties:
            recognitionId:
              type: integer
              description: Gets or sets the studentRecognition identifier.
              format: int32
            schoolCode:
              type: string
              description: Gets or sets the school code.
          description: Student RecognitionInformation.
    StudentRecognitionRequest:
      type: object
      properties:
        studentId:
          type: integer
          description: Gets or sets the student identifier.
          format: int32
        yearId:
          type: integer
          description: Gets or sets the year identifier.
          format: int32
        recognition:
          type: string
          description: Gets or sets the recognition.
        note:
          type: string
          description: Gets or sets the note.
        category:
          type: string
          description: "Gets or sets the category.\n               From list defined by school: DefinedLists.Type = 'Student Recognition Category'\n            "
        gradeLevel:
          type: string
          description: Gets or sets the grade level.
      description: StudentRecognition Request.
      example:
        studentId: 1
        yearId: 1
        recognition: String
        note: String
        category: String
        gradeLevel: String
    PagedResultOfStudentServiceHoursModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentServiceHoursModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StudentServiceHoursModel:
      required:
        - serviceHoursId
      type: object
      properties:
        serviceHoursId:
          type: integer
          description: Gets or sets the service hours identifier.
          format: int32
        personId:
          type: integer
          description: Gets or sets the person identifier.
          format: int32
        description:
          type: string
          description: Gets or sets the description.
        hours:
          type: number
          description: Gets or sets the hours.
          format: float
        date:
          type: string
          description: Gets or sets the date.
          format: date-time
        note:
          type: string
          description: Gets or sets the note.
        verifiedBy:
          type: string
          description: Gets or sets the verified by.
        createdBy:
          type: integer
          description: Gets or sets the created by.
          format: int32
      description: Class StudentServiceHoursModel.
      example:
        serviceHoursId: 1
        personId: 1
        description: String
        hours: 1
        date: '2020-01-01T00:00:00.0000000+00:00'
        note: String
        verifiedBy: String
        createdBy: 1
    StatusModel:
      type: object
      properties:
        status:
          type: string
          description: Gets or sets the status.
        displayName:
          type: string
          description: Gets or sets the display name.
        subStatus:
          type: array
          items:
            $ref: '#/components/schemas/SubStatusModel'
          description: Gets or sets the sub status.
      description: Status Information.
      example:
        status: String
        displayName: String
        subStatus: [ ]
    SubStatusModel:
      allOf:
        - $ref: '#/components/schemas/SubStatusRequest'
        - required:
            - id
          type: object
          properties:
            id:
              type: integer
              description: Gets or sets the identifier.
              format: int32
          description: SubStatus Information.
    SubStatusRequest:
      type: object
      properties:
        status:
          type: string
          description: Gets or sets the status.
        schoolCode:
          type: string
          description: Gets or sets the school code.
      description: SubStatus Request.
      example:
        status: String
        schoolCode: String
    PagedResultOfAddressVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AddressVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AddressVM:
      required:
        - addressID
      type: object
      properties:
        addressID:
          type: integer
          description: Gets or sets the address identifier
          format: int32
        address1:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the address1
        address2:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the address2
        city:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the city
        state:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the state
        zip:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the zipcode
        country:
          maxLength: 255
          minLength: 0
          type: string
          description: Gets or sets the country
        modifiedBy:
          type: integer
          description: Gets or sets modified by
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date
          format: date-time
        greeting1:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets greeting1
        greeting2:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets greeting2
        greeting3:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets greeting3
        greeting4:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets greeting4
        greeting5:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets greeting5
        newStudentInquiryID:
          type: integer
          description: Gets or sets the new student inquiry identifier
          format: int32
      description: Address information
      example:
        addressID: 1
        address1: String
        address2: String
        city: String
        state: String
        zip: String
        country: String
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        greeting1: String
        greeting2: String
        greeting3: String
        greeting4: String
        greeting5: String
        newStudentInquiryID: 1
    PagedResultOfBehaviorEventsVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/BehaviorEventsVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    BehaviorEventsVmOut:
      allOf:
        - $ref: '#/components/schemas/BehaviorEventsVmIn'
        - required:
            - disciplineID
          type: object
          properties:
            disciplineID:
              type: integer
              description: Gets or sets the behavior events identifier
              format: int32
    BehaviorEventsVmIn:
      type: object
      properties:
        dateOfIncident:
          type: string
          description: Gets or sets date of incident
          format: date-time
        descriptionOfIncident:
          type: string
          description: Gets or sets description of incident
        history:
          type: string
          description: Gets or sets history
        sanction1:
          type: string
          description: Gets or sets the sanction1
        sanction2:
          type: string
          description: Gets or sets the sanction2
        sanctionDate1:
          type: string
          description: Gets or sets sanction date1
          format: date-time
        sanctionDate2:
          type: string
          description: Gets or sets sanction date2
          format: date-time
        violation:
          type: string
          description: Gets or sets the violation
        reportedBy:
          type: string
          description: Gets or sets the reported by
        reviewedBy:
          type: string
          description: Gets or sets the reviewed by
        status:
          type: string
          description: Gets or sets the status
        studentID:
          type: integer
          description: Gets or sets student identifier
          format: int32
        demerits:
          type: number
          description: Gets or sets demerits
          format: float
        modifiedBy:
          type: integer
          description: Gets or sets modified by
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets modified date
          format: date-time
        staffID:
          type: integer
          description: Gets or sets staff identifier
          format: int32
        level:
          type: integer
          description: Gets or sets level
          format: int32
        type:
          type: integer
          description: Gets or sets type
          format: int32
        notified:
          type: boolean
          description: Gets or sets the notified flag
      example:
        dateOfIncident: '2020-01-01T00:00:00.0000000+00:00'
        descriptionOfIncident: String
        history: String
        sanction1: String
        sanction2: String
        sanctionDate1: '2020-01-01T00:00:00.0000000+00:00'
        sanctionDate2: '2020-01-01T00:00:00.0000000+00:00'
        violation: String
        reportedBy: String
        reviewedBy: String
        status: String
        studentID: 1
        demerits: 1
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        staffID: 1
        level: 1
        type: 1
        notified: false
    PagedResultOfCongregationVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CongregationVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    CongregationVM:
      required:
        - congregationId
      type: object
      properties:
        congregationId:
          type: integer
          description: The congregation identifier.
          format: int32
          readOnly: true
        congregationName:
          type: string
          description: Gets or sets the name of the congregation.
        congregationCity:
          type: string
          description: Gets or sets the congregation city.
        congregationPhone:
          type: string
          description: Gets or sets the congregation phone number.
        congregationState:
          type: string
          description: Gets or sets the state (address) of the congregation .
        congregationStreet:
          type: string
          description: Gets or sets the congregation street address.
        congregationZip:
          type: string
          description: Gets or sets the congregation zip code. (address)
        seniorPastor:
          type: string
          description: Gets or sets the senior pastor.
        youthPastor:
          type: string
          description: Gets or sets the youth pastor.
      description: "Class CongregationVM.\nBuilding/people group of a religious affiliation."
      example:
        congregationId: 1
        congregationName: String
        congregationCity: String
        congregationPhone: String
        congregationState: String
        congregationStreet: String
        congregationZip: String
        seniorPastor: String
        youthPastor: String
    PagedResultOfPersonDemographicVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonDemographicVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonDemographicVM:
      required:
        - personId
      type: object
      properties:
        personId:
          type: integer
          description: The person's id
          format: int32
          example: 1
        gender:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's gender
          example: female
        birthdate:
          type: string
          description: The person's birthdate
          format: date-time
        ethnicity:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's ethnicity
        citizenship:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's country of citizenship
          example: USA
        maritalStatus:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's marital status
          example: Married
        primaryLanguage:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's Primary Language
          example: Welsh
        birthplace:
          maxLength: 50
          minLength: 0
          type: string
          description: The person's birthplace
        birthCity:
          maxLength: 64
          minLength: 0
          type: string
          description: The name of the city where the person was born
          example: Cardiff
        birthState:
          maxLength: 64
          minLength: 0
          type: string
          description: The name of the state or province where the person was born
          example: Wales
        birthCountry:
          maxLength: 64
          minLength: 0
          type: string
          description: The name of the country where the person was born
          example: UK
      description: A person's demographic information
      example:
        personId: 1
        gender: female
        birthdate: '2020-01-01T00:00:00.0000000+00:00'
        ethnicity: String
        citizenship: USA
        maritalStatus: Married
        primaryLanguage: Welsh
        birthplace: String
        birthCity: Cardiff
        birthState: Wales
        birthCountry: UK
    PagedResultOfDirectoryPreferencesVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DirectoryPreferencesVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    DirectoryPreferencesVmOut:
      allOf:
        - $ref: '#/components/schemas/DirectoryPreferencesVmIn'
        - required:
            - personId
          type: object
          properties:
            personId:
              type: integer
              description: Gets or sets the person identifier.
              format: int32
    DirectoryPreferencesVmIn:
      type: object
      properties:
        blockName:
          type: boolean
          description: "Gets or sets a value indicating whether we should block the name in\nthe directory."
        blockCellPhone:
          type: boolean
          description: "Gets or sets a value indicating whether we should block the cellphone\nin the directory."
        blockHomePhone:
          type: boolean
          description: "Gets or sets a value indicating whether the home phone\nin the directory."
        blockAddress:
          type: boolean
          description: "Gets or sets a value indicating whether the Home address\nin the directory."
        blockEmail:
          type: boolean
          description: "Gets or sets a value indicating whether the email\nin the directory."
      example:
        blockName: false
        blockCellPhone: false
        blockHomePhone: false
        blockAddress: false
        blockEmail: false
    PagedResultOfEducationVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EducationVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    EducationVmOut:
      allOf:
        - $ref: '#/components/schemas/EducationVmIn'
        - required:
            - educationId
          type: object
          properties:
            educationId:
              type: integer
              description: The education Id
              format: int32
              example: 1
    EducationVmIn:
      required:
        - personId
      type: object
      properties:
        personId:
          type: integer
          description: The person's Id
          format: int32
        degreeSchool:
          type: string
          description: The school where the degree came from
          example: Name
        degreeName:
          type: string
          description: The degree name
        degreeYear:
          type: string
          description: The year when the degree was aquired
          example: '2020'
        educationLevel:
          type: integer
          description: The education level
          format: int32
          example: 1
        degreeType:
          type: string
          description: The degree type
          example: Associates
      description: A person's education information
      example:
        personId: 1
        degreeSchool: Name
        degreeName: String
        degreeYear: '2020'
        educationLevel: 1
        degreeType: Associates
    PagedResultOfEmergencyContactVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    EmergencyContactVM:
      required:
        - emergencyContactID
        - portalSortOrder
      type: object
      properties:
        emergencyContactID:
          type: integer
          description: Gets or sets the emergency contact identifier
          format: int32
        firstName:
          maxLength: 64
          minLength: 0
          type: string
          description: Gets or sets first name
        lastName:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets last name
        middleName:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets middle name
        salutation:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets salutation
        suffix:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets suffix
        homePhone:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets home phone
        cellPhone:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets cell phone
        email:
          maxLength: 256
          minLength: 0
          type: string
          description: Gets or sets email
        relationship:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets relationship
        workPhone:
          maxLength: 128
          minLength: 0
          type: string
          description: Gets or sets work phone
        studentID:
          type: integer
          description: Gets or sets student identifier
          format: int32
        sortOrder:
          type: integer
          description: Gets or sets sort order
          format: int32
        refID:
          type: integer
          description: Gets or sets ref identifier
          format: int32
        note:
          maxLength: 2000
          minLength: 0
          type: string
          description: Gets or sets note
        countryCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets country code
        portalSortOrder:
          type: integer
          description: Gets or sets portal sort order
          format: int32
      description: EmergencyContact information
      example:
        emergencyContactID: 1
        firstName: String
        lastName: String
        middleName: String
        salutation: String
        suffix: String
        homePhone: String
        cellPhone: String
        email: String
        relationship: String
        workPhone: String
        studentID: 1
        sortOrder: 1
        refID: 1
        note: String
        countryCode: String
        portalSortOrder: 1
    PagedResultOfPersonInterestVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonInterestVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonInterestVM:
      required:
        - personID
      type: object
      properties:
        personID:
          type: integer
          description: Gets or sets the person identifier
          format: int32
        interest:
          type: string
          description: Gets or sets the interest
      description: A person's interest information
      example:
        personID: 1
        interest: String
    PagedResultOfNoteVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/NoteVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    NoteVmOut:
      allOf:
        - $ref: '#/components/schemas/NoteVmIn'
        - required:
            - noteId
            - modifiedById
          type: object
          properties:
            noteId:
              type: integer
              description: Gets or sets the note identifier.
              format: int32
            modifiedById:
              type: integer
              description: "Gets or sets the modified by identifier.\nWe are unable to set this in the External Api"
              format: int32
    NoteVmIn:
      required:
        - enteredById
        - noteType
        - personId
      type: object
      properties:
        enteredById:
          type: integer
          description: Gets or sets the entered by identifier.
          format: int32
        noteDate:
          type: string
          description: Gets or sets the note date.
          format: date-time
        noteType:
          allOf:
            - $ref: '#/components/schemas/NoteTypeEnum'
          description: Gets or sets the type of the note.
        personId:
          type: integer
          description: Gets or sets the person identifier that the note is about.
          format: int32
        note:
          type: string
          description: Gets or sets the note.
        yearId:
          type: integer
          description: Gets or sets the year identifier.
          format: int32
      example:
        enteredById: 1
        noteDate: '2020-01-01T00:00:00.0000000+00:00'
        noteType: { }
        personId: 1
        note: String
        yearId: 1
    NoteTypeEnum:
      enum:
        - Admission
        - Inquiry
        - ReEnrollment
      type: string
      description: ''
      x-enumNames:
        - Admission
        - Inquiry
        - ReEnrollment
    PagedResultOfParentAlertEntity:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ParentAlertEntity'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ParentAlertEntity:
      required:
        - personId
      type: object
      properties:
        id:
          type: string
        personId:
          type: integer
          format: int32
        parentAlertPreference:
          maxLength: 50
          minLength: 0
          type: string
        parentAlertHomePhone:
          type: boolean
        parentAlertCellPhone:
          type: boolean
        parentAlertWorkPhone:
          type: boolean
        parentAlertNoText:
          type: boolean
      example:
        id: String
        personId: 1
        parentAlertPreference: String
        parentAlertHomePhone: false
        parentAlertCellPhone: false
        parentAlertWorkPhone: false
        parentAlertNoText: false
    ServiceHoursModel:
      allOf:
        - $ref: '#/components/schemas/StudentServiceHoursModel'
        - type: object
          properties:
            yearId:
              type: integer
              description: Gets or sets the year identifier.
              format: int32
          description: Class ServiceHoursModel.
    PagedResultOfParentStudentVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ParentStudentVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ParentStudentVM:
      required:
        - parentID
        - studentID
      type: object
      properties:
        parentID:
          type: integer
          description: Gets or sets the parent identifier
          format: int32
        studentID:
          type: integer
          description: Gets or sets the student identifier
          format: int32
        custody:
          type: boolean
          description: Gets or sets the custody flag
        correspondence:
          type: boolean
          description: Gets or sets the correspondence flag
        relationship:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets the relationship
        grandparent:
          type: boolean
          description: Gets or sets the grandparent flag
        emergencyContact:
          type: boolean
          description: Gets or sets the emergency contact flag
        reportCard:
          type: boolean
          description: Gets or sets the report card flag
        pwBlock:
          type: boolean
          description: Gets or sets the pw block flag
        pickUp:
          type: boolean
          description: Gets or sets the pickup flag
        parentsWeb:
          type: boolean
          description: Gets or sets the parents web flag
        reEnroll:
          type: boolean
          description: Gets or sets the reenrollment flag
      description: A person's family information
      example:
        parentID: 1
        studentID: 1
        custody: false
        correspondence: false
        relationship: String
        grandparent: false
        emergencyContact: false
        reportCard: false
        pwBlock: false
        pickUp: false
        parentsWeb: false
        reEnroll: false
    PagedResultOfPersonVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonVM:
      required:
        - personId
        - deceased
      type: object
      properties:
        personId:
          type: integer
          description: The person's id
          format: int32
        firstName:
          type: string
          description: The person's first name
        lastName:
          type: string
          description: The person's last name
        middleName:
          type: string
          description: The person's middle name
        nickName:
          type: string
          description: The person's nick name
        salutation:
          type: string
          description: The person's salutation
          example: Mrs
        suffix:
          type: string
          description: The person's suffix
          example: Jr.
        email:
          type: string
          description: The person's email address
        email2:
          type: string
          description: 'The person''s alternate email address '
        username:
          type: string
          description: The person's username
        homePhone:
          type: string
          description: The person's home phone number
          example: 555-555-5555
        cellPhone:
          type: string
          description: The person's cell phone number
          example: 555-555-5555
        addressID:
          type: integer
          description: The person's address by id
          format: int32
        deceased:
          type: boolean
          description: The person's living status
        modifiedDate:
          type: string
          description: Last time Person was modified
          format: date-time
      description: Basic Person Information
      example:
        personId: 1
        firstName: String
        lastName: String
        middleName: String
        nickName: String
        salutation: Mrs
        suffix: Jr.
        email: String
        email2: String
        username: String
        homePhone: 555-555-5555
        cellPhone: 555-555-5555
        addressID: 1
        deceased: false
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
    ProfileImage:
      type: object
      properties:
        value:
          type: string
      example:
        value: String
    PagedResultOfPublicSchoolVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicSchoolVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PublicSchoolVM:
      required:
        - personId
      type: object
      properties:
        personId:
          type: integer
          description: Get or Set the PersonId
          format: int32
          example: 12345
        publicSchoolDistrict:
          type: string
          description: Gets or Sets the PublicSchoolDistrict
          example: District Name
        publicSchoolCounty:
          type: string
          description: Gets or Sets the Public School County
          example: County Name
        publicSchoolState:
          type: string
          description: Gets or Sets the Public School State
          example: NE
        publicSchoolLocalSchool:
          type: string
          description: Gets or Sets the public school Local school
          example: School Name
        publicSchoolCode:
          type: string
          description: Gets or Sets the public school Code
          example: School Code
      description: ViewModel for PersonPublicSchoolEntity
      example:
        personId: 12345
        publicSchoolDistrict: District Name
        publicSchoolCounty: County Name
        publicSchoolState: NE
        publicSchoolLocalSchool: School Name
        publicSchoolCode: School Code
    PagedResultOfPersonFamilyVM:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonFamilyVM'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonFamilyVM:
      required:
        - personId
        - familyId
        - factsCustomer
      type: object
      properties:
        personId:
          type: integer
          description: Gets or sets the person identifier
          format: int32
        familyId:
          type: integer
          description: Gets or sets the family identifier
          format: int32
        parent:
          type: boolean
          description: Gets or sets the parent flag
        student:
          type: boolean
          description: Gets or sets the student flag
        financialResponsibility:
          type: boolean
          description: Gets or sets the financial responsibility
        financialResponsibilityPercent:
          maxLength: 50
          minLength: 0
          type: string
          description: Gets or sets the financial responsibility percentage
        familyOrder:
          type: integer
          description: Gets or sets the family order
          format: int32
        factsCustomer:
          type: boolean
          description: Gets or sets the facts customer flag
      description: A person's family information
      example:
        personId: 1
        familyId: 1
        parent: false
        student: false
        financialResponsibility: false
        financialResponsibilityPercent: String
        familyOrder: 1
        factsCustomer: false
    PagedResultOfPersonReligionEntity:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonReligionEntity'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonReligionEntity:
      required:
        - personId
      type: object
      properties:
        id:
          type: string
        personId:
          type: integer
          format: int32
        denomination:
          maxLength: 50
          minLength: 0
          type: string
        congregationId:
          type: integer
          format: int32
        baptismCongregation:
          maxLength: 50
          minLength: 0
          type: string
        baptismCity:
          maxLength: 50
          minLength: 0
          type: string
        baptismState:
          maxLength: 50
          minLength: 0
          type: string
        baptismDate:
          maxLength: 50
          minLength: 0
          type: string
        communionCongregation:
          maxLength: 50
          minLength: 0
          type: string
        communionCity:
          maxLength: 50
          minLength: 0
          type: string
        communionState:
          maxLength: 50
          minLength: 0
          type: string
        communionDate:
          maxLength: 50
          minLength: 0
          type: string
        confirmationCongregation:
          maxLength: 50
          minLength: 0
          type: string
        confirmationCity:
          maxLength: 50
          minLength: 0
          type: string
        confirmationState:
          maxLength: 50
          minLength: 0
          type: string
        confirmationDate:
          maxLength: 50
          minLength: 0
          type: string
        reconciliationCongregation:
          maxLength: 50
          minLength: 0
          type: string
        reconciliationCity:
          maxLength: 50
          minLength: 0
          type: string
        reconciliationState:
          maxLength: 50
          minLength: 0
          type: string
        reconciliationDate:
          maxLength: 50
          minLength: 0
          type: string
        barMitzvahCongregation:
          maxLength: 50
          minLength: 0
          type: string
        barMitzvahCity:
          maxLength: 50
          minLength: 0
          type: string
        barMitzvahState:
          maxLength: 50
          minLength: 0
          type: string
        barMitzvahDate:
          maxLength: 50
          minLength: 0
          type: string
        localChurchMember:
          type: boolean
      example:
        id: String
        personId: 1
        denomination: String
        congregationId: 1
        baptismCongregation: String
        baptismCity: String
        baptismState: String
        baptismDate: String
        communionCongregation: String
        communionCity: String
        communionState: String
        communionDate: String
        confirmationCongregation: String
        confirmationCity: String
        confirmationState: String
        confirmationDate: String
        reconciliationCongregation: String
        reconciliationCity: String
        reconciliationState: String
        reconciliationDate: String
        barMitzvahCongregation: String
        barMitzvahCity: String
        barMitzvahState: String
        barMitzvahDate: String
        localChurchMember: false
    PagedResultOfReligiousEventVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReligiousEventVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ReligiousEventVmOut:
      allOf:
        - $ref: '#/components/schemas/ReligiousEventVmIn'
        - required:
            - religiousEventId
          type: object
          properties:
            religiousEventId:
              type: integer
              description: Gets or sets the religious event identifier.
              format: int32
    ReligiousEventVmIn:
      type: object
      properties:
        personId:
          type: integer
          description: Gets or sets the person identifier.
          format: int32
        religiousEventDate:
          type: string
          description: Gets or sets the religious event date.
          format: date-time
        religiousEventType:
          type: string
          description: "Gets or sets the type of the religious event.\nThis must be unique per PersonId"
        location:
          type: string
          description: Gets or sets the location.
        city:
          type: string
          description: Gets or sets the city.
        state:
          type: string
          description: Gets or sets the state.
        note:
          type: string
          description: Gets or sets the note.
      example:
        personId: 1
        religiousEventDate: '2020-01-01T00:00:00.0000000+00:00'
        religiousEventType: String
        location: String
        city: String
        state: String
        note: String
    PagedResultOfStaffVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffVmOut'
          description: Gets or sets the results.
        currentPage:
          type: integer
          description: Gets or sets the current page.
          format: int32
        pageCount:
          type: integer
          description: Gets or sets the page count.
          format: int32
        pageSize:
          type: integer
          description: Gets or sets the size of the page.
          format: int32
        rowCount:
          type: integer
          description: Gets or sets the row count.
          format: int64
        nextPage:
          type: string
          description: Gets or sets the next page.
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StaffVmOut:
      allOf:
        - $ref: '#/components/schemas/StaffVmIn'
        - required:
            - staffId
          type: object
          properties:
            staffId:
              type: integer
              description: Gets or sets the staff identifier.
              format: int32
            name:
              type: string
              description: Gets or sets the name.
          description: "Class StaffVmOut.\nImplements the StaffVmIn"
    StaffVmIn:
      type: object
      properties:
        active:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is active.
        administrator:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is administrator.
        blockSurvey:
          type: boolean
          description: 'Gets or sets a value indicating whether [block survey].'
        districtUser:
          type: boolean
          description: 'Gets or sets a value indicating whether [district user].'
        districtWideUser:
          type: boolean
          description: 'Gets or sets a value indicating whether [district wide user].'
        dualEnrolledUser:
          type: boolean
          description: 'Gets or sets a value indicating whether [dual enrolled user].'
        elementary:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is elementary.
        faculty:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is faculty.
        fullTime:
          type: boolean
          description: 'Gets or sets a value indicating whether [full time].'
        highSchool:
          type: boolean
          description: 'Gets or sets a value indicating whether [high school].'
        middleSchool:
          type: boolean
          description: 'Gets or sets a value indicating whether [middle school].'
        preschool:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is preschool.
        staffDirectoryBlock:
          type: boolean
          description: 'Gets or sets a value indicating whether [staff directory block].'
        substitute:
          type: boolean
          description: Gets or sets a value indicating whether this StaffVmIn is substitute.
        unsubscribeRenWebEmail:
          type: boolean
          description: 'Gets or sets a value indicating whether [unsubscribe ren web email].'
        endDate:
          type: string
          description: Gets or sets the end date.
          format: date-time
        startDate:
          type: string
          description: Gets or sets the start date.
          format: date-time
        fte:
          type: number
          description: Gets or sets the fte.
          format: float
        financialFamilyId:
          type: integer
          description: Gets or sets the financial family identifier.
          format: int32
        pda:
          type: integer
          description: Gets or sets the pda.
          format: int32
        roomId:
          type: integer
          description: Gets or sets the room identifier.
          format: int32
        schools:
          type: array
          items:
            type: string
          description: Gets or sets the schools.
        department:
          type: string
          description: Gets or sets the department.
        firstName:
          type: string
          description: Gets or sets the first name.
        lastName:
          type: string
          description: Gets or sets the last name.
        legacyStaffId:
          type: string
          description: Gets or sets the legacy staff identifier.
        middleName:
          type: string
          description: Gets or sets the name of the middle.
        parentAlertPin:
          type: string
          description: Gets or sets the parent alert pin.
        spouse:
          type: string
          description: Gets or sets the spouse.
        teacherSite:
          type: string
          description: Gets or sets the teacher site.
      description: Class StaffVmIn.
      example:
        active: false
        administrator: false
        blockSurvey: false
        districtUser: false
        districtWideUser: false
        dualEnrolledUser: false
        elementary: false
        faculty: false
        fullTime: false
        highSchool: false
        middleSchool: false
        preschool: false
        staffDirectoryBlock: false
        substitute: false
        unsubscribeRenWebEmail: false
        endDate: '2020-01-01T00:00:00.0000000+00:00'
        startDate: '2020-01-01T00:00:00.0000000+00:00'
        fte: 1
        financialFamilyId: 1
        pda: 1
        roomId: 1
        schools: [ ]
        department: String
        firstName: String
        lastName: String
        legacyStaffId: String
        middleName: String
        parentAlertPin: String
        spouse: String
        teacherSite: String
    PagedResultOfStaffObservationsVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/StaffObservationsVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    StaffObservationsVmOut:
      allOf:
        - $ref: '#/components/schemas/StaffObservationsVmIn'
        - required:
            - observationId
          type: object
          properties:
            observationId:
              type: integer
              description: Gets or sets the observation identifier.
              format: int32
    StaffObservationsVmIn:
      required:
        - evaluatorId
        - observationConfigId
        - personId
      type: object
      properties:
        endDate:
          type: string
          description: Gets or sets the end date.
          format: date-time
        eval:
          type: boolean
          description: Gets or sets a value indicating whether this StaffObservationsVmIn is an evaluation.
        evaluatorId:
          type: integer
          description: Gets or sets the evaluator identifier.
          format: int32
        observationConfigId:
          type: integer
          description: Gets or sets the observation configuration identifier.
          format: int32
        personId:
          type: integer
          description: Gets or sets the person identifier.
          format: int32
        startDate:
          type: string
          description: Gets or sets the start date.
          format: date-time
        title:
          type: string
          description: Gets or sets the title.
      description: Class StaffObservationsVmIn.
      example:
        endDate: '2020-01-01T00:00:00.0000000+00:00'
        eval: false
        evaluatorId: 1
        observationConfigId: 1
        personId: 1
        startDate: '2020-01-01T00:00:00.0000000+00:00'
        title: String
    PagedResultOfPersonVehicleEntity:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonVehicleEntity'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonVehicleEntity:
      required:
        - personId
      type: object
      properties:
        id:
          type: string
        personId:
          type: integer
          format: int32
        autoMake:
          maxLength: 50
          minLength: 0
          type: string
        autoModel:
          maxLength: 50
          minLength: 0
          type: string
        autoLicense:
          maxLength: 50
          minLength: 0
          type: string
        driversLicense:
          maxLength: 50
          minLength: 0
          type: string
        permitNumber:
          maxLength: 50
          minLength: 0
          type: string
      example:
        id: String
        personId: 1
        autoMake: String
        autoModel: String
        autoLicense: String
        driversLicense: String
        permitNumber: String
    PagedResultOfPersonWorkEntity:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PersonWorkEntity'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PersonWorkEntity:
      required:
        - personId
      type: object
      properties:
        id:
          type: string
        personId:
          type: integer
          format: int32
        occupation:
          maxLength: 128
          minLength: 0
          type: string
        company:
          maxLength: 254
          minLength: 0
          type: string
        jobCategory:
          maxLength: 64
          minLength: 0
          type: string
        workStreet:
          maxLength: 255
          minLength: 0
          type: string
        workFax:
          maxLength: 50
          minLength: 0
          type: string
        workPhone:
          maxLength: 50
          minLength: 0
          type: string
        workPhoneExtension:
          maxLength: 50
          minLength: 0
          type: string
        workCity:
          maxLength: 50
          minLength: 0
          type: string
        workState:
          maxLength: 50
          minLength: 0
          type: string
        workZip:
          maxLength: 50
          minLength: 0
          type: string
        matchingGiftEmployer:
          type: boolean
      example:
        id: String
        personId: 1
        occupation: String
        company: String
        jobCategory: String
        workStreet: String
        workFax: String
        workPhone: String
        workPhoneExtension: String
        workCity: String
        workState: String
        workZip: String
        matchingGiftEmployer: false
    PagedResultOfAlertApplicationVm:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AlertApplicationVm'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AlertApplicationVm:
      required:
        - alertID
        - applicationID
      type: object
      properties:
        alertID:
          type: integer
          description: Gets or sets alert identifier
          format: int32
        applicationID:
          type: integer
          description: "Gets or sets the which application the alert should show in.\nUnless noted, it will show upon selecting the person on the main screen in that area\n1= Student General\n2= Cash Register\n3= Lunch Verification\n4= Student Clock\n5= Medical\n6= Teacher (Shows on staff login, for any instructors of classes the student is in)"
          format: int32
        visual:
          type: boolean
          description: Gets or sets visual flag
        beep:
          type: boolean
          description: Gets or sets beep flag
        popUp:
          type: boolean
          description: Gets or sets popup flag
        popUpAlways:
          type: boolean
          description: Gets or sets popup always flag
      example:
        alertID: 1
        applicationID: 1
        visual: false
        beep: false
        popUp: false
        popUpAlways: false
    PagedResultOfAlertVm:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AlertVm'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AlertVm:
      required:
        - alertID
        - active
      type: object
      properties:
        alertID:
          type: integer
          description: Gets or sets the alert identifier
          format: int32
        studentID:
          type: integer
          description: Gets or sets student identifier
          format: int32
        title:
          type: string
          description: Gets or sets alert title
        description:
          type: string
          description: Gets or sets alert description
        active:
          type: boolean
          description: Gets or sets active flag
      example:
        alertID: 1
        studentID: 1
        title: String
        description: String
        active: false
    PagedResultOfPickupContactVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PickupContactVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    PickupContactVmOut:
      allOf:
        - $ref: '#/components/schemas/PickupContactVmIn'
        - required:
            - pickupId
          type: object
          properties:
            pickupId:
              type: integer
              description: Gets or sets the pickup identifier
              format: int32
    PickupContactVmIn:
      required:
        - portalSortOrder
        - studentId
      type: object
      properties:
        cellPhone:
          type: string
          description: Gets or sets the cell phone number
        countryCode:
          type: string
          description: Gets or sets the country code.
        email:
          type: string
          description: Gets or sets the email address
        firstName:
          type: string
          description: Gets or sets the first name.
        homePhone:
          type: string
          description: Gets or sets the home phone number.
        lastName:
          type: string
          description: Gets or sets the last name.
        middleName:
          type: string
          description: Gets or sets the middle name.
        note:
          type: string
          description: Gets or sets the note.
        portalSortOrder:
          type: integer
          description: Gets or sets the portal sort order.
          format: int32
        refId:
          type: integer
          description: "Gets or sets the reference identifier.\nIf present, ties this to the person with the corresponding personID."
          format: int32
        relationship:
          type: string
          description: Gets or sets the relationship.
        salutation:
          type: string
          description: Gets or sets the salutation.
        studentId:
          type: integer
          description: Gets or sets the student identifier.
          format: int32
        suffix:
          type: string
          description: Gets or sets the suffix.
        workPhone:
          type: string
          description: Gets or sets the work phone number.
      example:
        cellPhone: String
        countryCode: String
        email: String
        firstName: String
        homePhone: String
        lastName: String
        middleName: String
        note: String
        portalSortOrder: 1
        refId: 1
        relationship: String
        salutation: String
        studentId: 1
        suffix: String
        workPhone: String
    PagedResultOfInterestCategoryVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InterestCategoryVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    InterestCategoryVmOut:
      allOf:
        - $ref: '#/components/schemas/InterestCategoryVmIn'
        - required:
            - interestCategoryID
          type: object
          properties:
            interestCategoryID:
              type: integer
              description: Gets or sets the interest category identifier
              format: int32
    InterestCategoryVmIn:
      type: object
      properties:
        category:
          type: string
          description: Gets or sets category
        districtWide:
          type: boolean
          description: Gets or sets district wide flag
        type:
          type: integer
          description: Gets or sets type
          format: int32
        sortOrder:
          type: integer
          description: Gets or sets sort order
          format: int32
        onlineApplication:
          type: boolean
          description: Gets or sets online application flag
        schoolCode:
          type: string
          description: Gets or sets school code
        active:
          type: boolean
          description: Gets or sets active flag
      example:
        category: String
        districtWide: false
        type: 1
        sortOrder: 1
        onlineApplication: false
        schoolCode: String
        active: false
    PagedResultOfInterestItemsVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/InterestItemsVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    InterestItemsVmOut:
      allOf:
        - $ref: '#/components/schemas/InterestItemsVmIn'
        - required:
            - interestID
          type: object
          properties:
            interestID:
              type: integer
              description: Gets or sets the interest identifier
              format: int32
    InterestItemsVmIn:
      type: object
      properties:
        interest:
          type: string
          description: Gets or sets interest
        interestCategoryID:
          type: integer
          description: Gets or sets interest category id
          format: int32
        sortOrder:
          type: integer
          description: Gets or sets sort order
          format: int32
        active:
          type: boolean
          description: Gets or sets active flag
      example:
        interest: String
        interestCategoryID: 1
        sortOrder: 1
        active: false
    PagedResultOfFamilyConfigVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FamilyConfigVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    FamilyConfigVmOut:
      allOf:
        - $ref: '#/components/schemas/FamilyConfigVmIn'
        - required:
            - familyID
          type: object
          properties:
            familyID:
              type: integer
              description: Gets or sets the family identifier
              format: int32
    FamilyConfigVmIn:
      required:
        - parentsWebFinancialBlock
      type: object
      properties:
        familyName:
          type: string
          description: Name of the Family
        enableWeb:
          type: boolean
          description: Gets or sets a value indicating whether they are enabled for web (Family Portal).
        unlisted:
          type: integer
          description: 'Gets or sets the unlisted property, which would hide/show them in the directory.'
          format: int32
        note:
          type: string
          description: Gets or sets the note.
        modifiedBy:
          type: integer
          description: Gets or sets modified by
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date
          format: date-time
        familyNameBP:
          type: string
          description: Gets or sets the family name bp.
        parentsWebFinancialBlock:
          type: boolean
          description: Gets or sets a value indicating whether family is financially blocked.
      example:
        familyName: String
        enableWeb: false
        unlisted: 1
        note: String
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        familyNameBP: String
        parentsWebFinancialBlock: false
    PagedResultOfAssignmentModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AssignmentModel:
      required:
        - sisAssignmentId
        - classCategoryId
        - classId
        - classAssignmentId
        - title
        - description
        - dateAssigned
        - dateDue
        - assignmentNumber
        - maxPoints
        - weight
        - extraCreditType
        - modifiedBy
        - modifiedDate
        - publish
        - calculate
        - markedAsTest
        - isLmsAssignment
        - lmsItemId
        - lmsItemTypeId
        - descriptionHtml
        - dateAssignedUtc
        - dateDueUtc
        - systemOfRecord
        - googleAssignmentId
      type: object
      properties:
        sisAssignmentId:
          type: integer
          format: int32
        classCategoryId:
          type: integer
          format: int32
        classId:
          type: integer
          format: int32
        classAssignmentId:
          type: integer
          format: int32
        title:
          maxLength: 50
          minLength: 0
          type: string
        description:
          maxLength: 8000
          minLength: 0
          type: string
        dateAssigned:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        assignmentNumber:
          type: integer
          format: int32
        maxPoints:
          type: number
          format: float
        weight:
          type: number
          format: float
        extraCreditType:
          type: integer
          format: int32
        modifiedBy:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        publish:
          type: boolean
        calculate:
          type: boolean
        markedAsTest:
          type: boolean
        isLmsAssignment:
          type: boolean
        lmsItemId:
          type: integer
          format: int32
        lmsItemTypeId:
          type: integer
          format: int32
        descriptionHtml:
          maxLength: 8000
          minLength: 0
          type: string
        dateAssignedUtc:
          type: string
          format: date-time
        dateDueUtc:
          type: string
          format: date-time
        systemOfRecord:
          type: string
        googleAssignmentId:
          type: string
      example:
        sisAssignmentId: 1
        classCategoryId: 1
        classId: 1
        classAssignmentId: 1
        title: String
        description: String
        dateAssigned: '2020-01-01T00:00:00.0000000+00:00'
        dateDue: '2020-01-01T00:00:00.0000000+00:00'
        assignmentNumber: 1
        maxPoints: 1
        weight: 1
        extraCreditType: 1
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        publish: false
        calculate: false
        markedAsTest: false
        isLmsAssignment: false
        lmsItemId: 1
        lmsItemTypeId: 1
        descriptionHtml: String
        dateAssignedUtc: '2020-01-01T00:00:00.0000000+00:00'
        dateDueUtc: '2020-01-01T00:00:00.0000000+00:00'
        systemOfRecord: String
        googleAssignmentId: String
    AssignmentModelIn:
      required:
        - classCategoryId
        - classId
        - classAssignmentId
        - title
        - description
        - dateAssigned
        - dateDue
        - assignmentNumber
        - maxPoints
        - weight
        - extraCreditType
        - modifiedBy
        - modifiedDate
        - publish
        - calculate
        - markedAsTest
        - isLmsAssignment
        - lmsItemId
        - lmsItemTypeId
        - descriptionHtml
        - dateAssignedUtc
        - dateDueUtc
        - systemOfRecord
        - googleAssignmentId
      type: object
      properties:
        classCategoryId:
          type: integer
          format: int32
        classId:
          type: integer
          format: int32
        classAssignmentId:
          type: integer
          format: int32
        title:
          maxLength: 50
          minLength: 0
          type: string
        description:
          maxLength: 8000
          minLength: 0
          type: string
        dateAssigned:
          type: string
          format: date-time
        dateDue:
          type: string
          format: date-time
        assignmentNumber:
          type: integer
          format: int32
        maxPoints:
          type: number
          format: float
        weight:
          type: number
          format: float
        extraCreditType:
          type: integer
          format: int32
        modifiedBy:
          type: integer
          format: int32
        modifiedDate:
          type: string
          format: date-time
        publish:
          type: boolean
        calculate:
          type: boolean
        markedAsTest:
          type: boolean
        isLmsAssignment:
          type: boolean
        lmsItemId:
          type: integer
          format: int32
        lmsItemTypeId:
          type: integer
          format: int32
        descriptionHtml:
          maxLength: 8000
          minLength: 0
          type: string
        dateAssignedUtc:
          type: string
          format: date-time
        dateDueUtc:
          type: string
          format: date-time
        systemOfRecord:
          type: string
        googleAssignmentId:
          type: string
      example:
        classCategoryId: 1
        classId: 1
        classAssignmentId: 1
        title: String
        description: String
        dateAssigned: '2020-01-01T00:00:00.0000000+00:00'
        dateDue: '2020-01-01T00:00:00.0000000+00:00'
        assignmentNumber: 1
        maxPoints: 1
        weight: 1
        extraCreditType: 1
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        publish: false
        calculate: false
        markedAsTest: false
        isLmsAssignment: false
        lmsItemId: 1
        lmsItemTypeId: 1
        descriptionHtml: String
        dateAssignedUtc: '2020-01-01T00:00:00.0000000+00:00'
        dateDueUtc: '2020-01-01T00:00:00.0000000+00:00'
        systemOfRecord: String
        googleAssignmentId: String
    Operation2:
      allOf:
        - $ref: '#/components/schemas/OperationBase'
        - type: object
          properties:
            value: { }
    OperationBase:
      type: object
      properties:
        path:
          type: string
        op:
          type: string
        from:
          type: string
      example:
        path: String
        op: String
        from: String
    PagedResultOfAssignmentCategoryModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentCategoryModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AssignmentCategoryModel:
      required:
        - sisCategoryId
        - classCategoryId
        - classId
      type: object
      properties:
        sisCategoryId:
          type: integer
          format: int32
        classCategoryId:
          type: integer
          format: int32
        weight:
          type: number
          format: float
        classId:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        meetsInTerm1:
          type: boolean
        meetsInTerm2:
          type: boolean
        meetsInTerm3:
          type: boolean
        meetsInTerm4:
          type: boolean
        meetsInTerm5:
          type: boolean
        meetsInTerm6:
          type: boolean
        drop:
          type: integer
          format: int32
      example:
        sisCategoryId: 1
        classCategoryId: 1
        weight: 1
        classId: 1
        title: String
        description: String
        meetsInTerm1: false
        meetsInTerm2: false
        meetsInTerm3: false
        meetsInTerm4: false
        meetsInTerm5: false
        meetsInTerm6: false
        drop: 1
    AssignmentCategoryModelIn:
      required:
        - classCategoryId
        - classId
      type: object
      properties:
        classCategoryId:
          type: integer
          format: int32
        weight:
          type: number
          format: float
        classId:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        meetsInTerm1:
          type: boolean
        meetsInTerm2:
          type: boolean
        meetsInTerm3:
          type: boolean
        meetsInTerm4:
          type: boolean
        meetsInTerm5:
          type: boolean
        meetsInTerm6:
          type: boolean
        drop:
          type: integer
          format: int32
      example:
        classCategoryId: 1
        weight: 1
        classId: 1
        title: String
        description: String
        meetsInTerm1: false
        meetsInTerm2: false
        meetsInTerm3: false
        meetsInTerm4: false
        meetsInTerm5: false
        meetsInTerm6: false
        drop: 1
    PagedResultOfClassAssignmentGradeCodeTranslationModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClassAssignmentGradeCodeTranslationModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ClassAssignmentGradeCodeTranslationModel:
      required:
        - id
        - classId
        - letterCode
        - percent
        - statusCode
      type: object
      properties:
        id:
          type: integer
          format: int32
        classId:
          type: integer
          format: int32
        letterCode:
          type: string
        percent:
          type: number
          format: decimal
        statusCode:
          type: string
      example:
        id: 1
        classId: 1
        letterCode: String
        percent: 1
        statusCode: String
    ErrorResponse2:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error2'
      example:
        error:
          code: String
          message: String
          target: String
          details: [ ]
          innererror: { }
    Error2:
      required:
        - code
        - message
      type: object
      properties:
        code:
          minLength: 1
          type: string
        message:
          minLength: 1
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/Error2'
        innererror:
          $ref: '#/components/schemas/Error2'
      example:
        code: String
        message: String
        target: String
        details: [ ]
        innererror: { }
    ClassAssignmentGradeCodeTranslationModelIn:
      required:
        - classId
        - letterCode
        - percent
        - statusCode
      type: object
      properties:
        classId:
          type: integer
          format: int32
        letterCode:
          type: string
        percent:
          type: number
          format: decimal
        statusCode:
          type: string
      example:
        classId: 1
        letterCode: String
        percent: 1
        statusCode: String
    PagedResultOfAssignmentGradesModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentGradesModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    AssignmentGradesModel:
      required:
        - sisGradeId
        - sisAssignmentId
        - studentId
        - maxPoints
        - receivedPoints
        - curvePoints
        - penaltyPoints
        - bonusPoints
        - notes
        - weight
        - status
        - emailSent
        - displayGrade
      type: object
      properties:
        sisGradeId:
          type: integer
          format: int32
        sisAssignmentId:
          type: integer
          format: int32
        studentId:
          type: integer
          format: int32
        maxPoints:
          type: number
          format: float
        receivedPoints:
          type: number
          format: float
        curvePoints:
          type: number
          format: float
        penaltyPoints:
          type: number
          format: float
        bonusPoints:
          type: number
          format: float
        notes:
          type: string
        weight:
          type: number
          format: float
        status:
          maxLength: 50
          minLength: 0
          type: string
        emailSent:
          type: boolean
        displayGrade:
          maxLength: 5
          minLength: 0
          type: string
      example:
        sisGradeId: 1
        sisAssignmentId: 1
        studentId: 1
        maxPoints: 1
        receivedPoints: 1
        curvePoints: 1
        penaltyPoints: 1
        bonusPoints: 1
        notes: String
        weight: 1
        status: String
        emailSent: false
        displayGrade: String
    AssignmentGradesModelIn:
      required:
        - sisAssignmentId
        - studentId
        - maxPoints
        - receivedPoints
        - curvePoints
        - penaltyPoints
        - bonusPoints
        - notes
        - weight
        - status
        - emailSent
        - displayGrade
      type: object
      properties:
        sisAssignmentId:
          type: integer
          format: int32
        studentId:
          type: integer
          format: int32
        maxPoints:
          type: number
          format: float
        receivedPoints:
          type: number
          format: float
        curvePoints:
          type: number
          format: float
        penaltyPoints:
          type: number
          format: float
        bonusPoints:
          type: number
          format: float
        notes:
          type: string
        weight:
          type: number
          format: float
        status:
          maxLength: 50
          minLength: 0
          type: string
        emailSent:
          type: boolean
        displayGrade:
          maxLength: 5
          minLength: 0
          type: string
      example:
        sisAssignmentId: 1
        studentId: 1
        maxPoints: 1
        receivedPoints: 1
        curvePoints: 1
        penaltyPoints: 1
        bonusPoints: 1
        notes: String
        weight: 1
        status: String
        emailSent: false
        displayGrade: String
    PagedResultOfSchoolYearModel:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchoolYearModel'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    SchoolYearModel:
      allOf:
        - $ref: '#/components/schemas/SchoolYearRequest'
        - required:
            - yearId
          type: object
          properties:
            yearId:
              type: integer
              description: Gets or sets the year identifier.
              format: int32
            firstDay:
              type: string
              description: Gets or sets the first day.
              format: date-time
            lastDay:
              type: string
              description: Gets or sets the last day.
              format: date-time
            schoolCode:
              type: string
              description: Gets or sets the school code.
          description: SchoolYear Model.
    SchoolYearRequest:
      required:
        - blockAcademicYear
      type: object
      properties:
        yearName:
          type: string
          description: Gets or sets the name of the year.
        allowInquiry:
          type: boolean
          description: Flag indicating whether inquiry requests are allowed
        blockAcademicYear:
          type: boolean
          description: Flag indicating whether to block Academic Year
      description: SchoolYear Request.
      example:
        yearName: String
        allowInquiry: false
        blockAcademicYear: false
    Operation3:
      allOf:
        - $ref: '#/components/schemas/OperationBase2'
        - type: object
          properties:
            value: { }
    OperationBase2:
      type: object
      properties:
        path:
          type: string
        op:
          type: string
        from:
          type: string
      example:
        path: String
        op: String
        from: String
    PagedResultOfClassVmOutV1:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClassVmOutV1'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ClassVmOutV1:
      allOf:
        - $ref: '#/components/schemas/ClassVmInV1'
        - required:
            - classId
          type: object
          properties:
            classId:
              type: integer
              description: Gets or sets the class identifier.
              format: int32
          description: "Class ClassVmOutV1.\nImplements the ClassVmInV1"
          x-deprecated: true
          x-deprecatedMessage: Use V2 of this model for newer updates
    ClassVmInV1:
      allOf:
        - $ref: '#/components/schemas/ClassVmIn'
        - type: object
          properties:
            instructor2Id:
              type: integer
              description: "Gets or sets the alt staff identifier.\n            "
              format: int32
          description: Class ClassVmIn1.
          x-deprecated: true
          x-deprecatedMessage: Use V2 of this model for newer updates
    ClassVmIn:
      required:
        - courseID
        - term1
        - term2
        - term3
        - term4
        - term5
        - term6
      type: object
      properties:
        aideId:
          type: integer
          description: "Gets or sets the aid identifier.\n            "
          format: int32
        closed:
          type: boolean
          description: Gets or sets a value indicating whether this ClassVmIn is closed.
        color:
          type: string
          description: Gets or sets the color.
        colorText:
          type: string
          description: Gets or sets the color text.
        courseID:
          type: integer
          description: "Gets or sets the course identifier.\n            "
          format: int32
        googleCourseId:
          type: string
          description: Gets or sets the google course identifier.
        legacyClassId:
          type: string
          description: Gets or sets the legacy class identifier.
        linkedClassId:
          type: integer
          description: Gets or sets the linked class identifier.
          format: int32
        maleFemale:
          allOf:
            - $ref: '#/components/schemas/GenderedClassEnum'
          description: Gets or sets the male female.
        modifiedBy:
          type: integer
          description: Id of user who modified class
          format: int32
        modifiedDate:
          type: string
          description: Date modified.
          format: date-time
        name:
          type: string
          description: "Gets or sets the name.\n            "
        pattern:
          type: integer
          description: Gets or sets the pattern.
          format: int32
        requiredRoom:
          type: integer
          description: Gets or sets the required room.
          format: int32
        section:
          type: string
          description: "Gets or sets the section.\n            "
        staffId:
          type: integer
          description: "Gets or sets the staff identifier.\n            "
          format: int32
        term1:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term1.\n            "
        term2:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term2.\n            "
        term3:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term3.\n            "
        term4:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term4.\n            "
        term5:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term5.\n            "
        term6:
          type: boolean
          description: "Gets or sets a value indicating whether this Classes is term6.\n            "
        yearId:
          type: integer
          description: "Gets or sets the year identifier.\n            "
          format: int32
      description: Class ClassVmIn.
      example:
        aideId: 1
        closed: false
        color: String
        colorText: String
        courseID: 1
        googleCourseId: String
        legacyClassId: String
        linkedClassId: 1
        maleFemale: { }
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        name: String
        pattern: 1
        requiredRoom: 1
        section: String
        staffId: 1
        term1: false
        term2: false
        term3: false
        term4: false
        term5: false
        term6: false
        yearId: 1
    GenderedClassEnum:
      enum:
        - Female
        - Male
      type: string
      description: ''
      x-enumNames:
        - Female
        - Male
    PagedResultOfCoursesVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CoursesVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    CoursesVmOut:
      allOf:
        - $ref: '#/components/schemas/CoursesVmIn'
        - required:
            - courseID
          type: object
          properties:
            courseID:
              type: integer
              description: "Gets or sets the course identifier.\n            "
              format: int32
          description: Class CoursesVmOut.
    CoursesVmIn:
      required:
        - activity
        - attendance
        - homeRoom
      type: object
      properties:
        levelID:
          type: integer
          description: "Gets or sets the course level identifier.\n            "
          format: int32
        legacyCourseID:
          type: string
          description: "Gets or sets the legacy course identifier. (from school's previous SIS)\n            "
        title:
          type: string
          description: "Gets or sets the title.\n            "
        abbreviation:
          type: string
          description: "Gets or sets the abbreviation.\n            "
        activity:
          type: boolean
          description: "Gets or sets a value indicating whether this Courses is activity.\n            "
        attendance:
          type: boolean
          description: "Gets or sets a value indicating whether this Courses is intended\n            to take attendance.\n            "
        homeRoom:
          type: boolean
          description: "Gets or sets a value indicating whether [home room].\n            "
        schoolCode:
          type: string
          description: "Gets or sets the school code.\n            "
        department:
          type: string
          description: "Gets or sets the department.\n            "
        active:
          type: boolean
          description: "Gets or sets whether the course is active.\n            "
        elective:
          type: boolean
          description: "Gets or sets whether the course counts as an elective.\n            "
        hs:
          type: boolean
        preSchool:
          type: boolean
          description: "Gets or sets whether this course is associated with \"Pre School\" for scheduling/filtering\n            "
        elementary:
          type: boolean
          description: "Gets or sets whether this course is associated with \"Elementary School\" for scheduling/filtering\n            "
        middleSchool:
          type: boolean
          description: "Gets or sets whether this course is associated with \"Middle School\" for scheduling/filtering\n            "
        modifiedBy:
          type: integer
          description: "Gets or sets modified by.\n            "
          format: int32
        modifiedDate:
          type: string
          description: "Gets or sets modified date.\n            "
          format: date-time
        courseType:
          type: string
          description: "Gets or sets the course type.\n            "
        defaultStaffID:
          type: integer
          description: "Gets or sets the default staff identifier.\n            "
          format: int32
        departmentID:
          type: integer
          description: "Gets or sets the department identifier.\n            "
          format: int32
        description:
          type: string
          description: "Gets or sets the description.\n            "
        stateID:
          type: string
          description: "Gets or sets the state identifier. (used with State Reporting exports)\n            "
        maxSize:
          type: integer
          description: "Gets or sets the MaxSize of the course.  0 will allow this course to be uncapped.\n            "
          format: int32
      description: Class CoursesVmIn.
      example:
        levelID: 1
        legacyCourseID: String
        title: String
        abbreviation: String
        activity: false
        attendance: false
        homeRoom: false
        schoolCode: String
        department: String
        active: false
        elective: false
        hs: false
        preSchool: false
        elementary: false
        middleSchool: false
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        courseType: String
        defaultStaffID: 1
        departmentID: 1
        description: String
        stateID: String
        maxSize: 1
    PagedResultOfClassEnrollmentVm:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClassEnrollmentVm'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ClassEnrollmentVm:
      required:
        - classId
        - enrolled
        - studentId
      type: object
      properties:
        altYearId:
          type: integer
          description: Gets or sets the alt year identifier.
          format: int32
        classId:
          type: integer
          description: "Gets or sets the class identifier.\n            "
          format: int32
        enrolled:
          type: boolean
          description: "Gets or sets a value indicating whether this EnrollmentDto is enrolled.\n            "
        enrolled1:
          type: boolean
          description: "Gets or sets the enrolled1.\n            "
        enrolled2:
          type: boolean
          description: "Gets or sets the enrolled2.\n            "
        enrolled3:
          type: boolean
          description: "Gets or sets the enrolled3.\n            "
        enrolled4:
          type: boolean
          description: "Gets or sets the enrolled4.\n            "
        enrolled5:
          type: boolean
          description: "Gets or sets the enrolled5.\n            "
        enrolled6:
          type: boolean
          description: "Gets or sets the enrolled6.\n            "
        gradeLevel:
          type: string
          description: Gets or sets the grade level.
        modifiedBy:
          type: integer
          description: 'Gets or sets the modified by field, set to PersonId.'
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date.
          format: date-time
        studentId:
          type: integer
          description: "Gets or sets the student identifier.\n            "
          format: int32
      description: Class EnrollmentVm.
      example:
        altYearId: 1
        classId: 1
        enrolled: false
        enrolled1: false
        enrolled2: false
        enrolled3: false
        enrolled4: false
        enrolled5: false
        enrolled6: false
        gradeLevel: String
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
        studentId: 1
    PagedResultOfSchoolConfigVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchoolConfigVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    SchoolConfigVmOut:
      allOf:
        - $ref: '#/components/schemas/SchoolConfigVmIn'
        - required:
            - active
            - configSchoolID
            - schoolLMS
          type: object
          properties:
            active:
              type: boolean
              description: Gets or sets a value indicating whether this SchoolConfigVmOut is active.
            address:
              type: string
              description: Gets or sets the address.
            city:
              type: string
              description: Gets or sets the city.
            configSchoolID:
              type: integer
              description: Gets or sets the configuration school identifier.
            defaultTermId:
              type: integer
              description: Gets or sets the default term identifier.
            defaultYearId:
              type: integer
              description: Gets or sets the default year identifier.
              format: int32
            districtName:
              type: string
              description: Gets or sets the name of the district.
            email:
              type: string
              description: Gets or sets the email address associated with the school.
            modifiedBy:
              type: integer
              description: Gets or sets who last modified this config school.
              format: int32
            modifiedDate:
              type: string
              description: Gets or sets the modified date.
              format: date-time
            nextYearId:
              type: integer
              description: Gets or sets the next year identifier.
              format: int32
            parentAlert:
              type: boolean
              description: Gets or sets the parent alert.
            pwTermID:
              type: integer
              description: Gets or sets the pw term identifier.
              format: int32
            pwTermID2:
              type: integer
              description: Gets or sets the pw term i d2.
              format: int32
            pwYearID:
              type: integer
              description: Gets or sets the pw year identifier.
              format: int32
            schoolCode:
              type: string
              description: Gets or sets the school code.
            schoolLMS:
              type: boolean
              description: 'Gets or sets a value indicating whether [school LMS].'
            schoolName:
              type: string
              description: Gets or sets the name of the school.
            state:
              type: string
              description: Gets or sets the state or province the school is located.
            zip:
              type: string
              description: Gets or sets the zip code.
          description: Class SchoolConfigVmOut.
    SchoolConfigVmIn:
      type: object
      properties:
        fax:
          type: string
          description: Gets or sets the fax number.
        phone:
          type: string
          description: Gets or sets the phone number.
      description: Class SchoolConfigVmIn.
      example:
        fax: String
        phone: String
    PagedResultOfSchoolTermsVmOut:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchoolTermsVmOut'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    SchoolTermsVmOut:
      allOf:
        - $ref: '#/components/schemas/SchoolTermsVmIn'
        - required:
            - schoolTermID
          type: object
          properties:
            schoolTermID:
              type: integer
              description: Gets or sets the school term identifier.
              format: int32
          description: "Class SchoolTermsVmOut.\nImplements the SchoolTermsVmIn"
    SchoolTermsVmIn:
      required:
        - termID
        - yearID
      type: object
      properties:
        termID:
          type: integer
          description: "Gets or sets the term identifier.\n            "
        yearID:
          type: integer
          description: "Gets or sets the year identifier.\n            "
          format: int32
        name:
          type: string
          description: "Gets or sets the name.\n            "
        firstDay:
          type: string
          description: "Gets or sets the first day.\n            "
          format: date-time
        lastDay:
          type: string
          description: "Gets or sets the last day.\n            "
          format: date-time
        schoolCode:
          type: string
          description: "Gets or sets the school code.\n            "
        semesterID:
          allOf:
            - $ref: '#/components/schemas/SemesterIDEnum'
          description: "Gets or sets the semester identifier.\n            "
        modifiedBy:
          type: integer
          description: Gets or sets the modified by.
          format: int32
        modifiedDate:
          type: string
          description: Gets or sets the modified date.
          format: date-time
      description: Class SchoolTermsVmIn.
      example:
        termID: 1
        yearID: 1
        name: String
        firstDay: '2020-01-01T00:00:00.0000000+00:00'
        lastDay: '2020-01-01T00:00:00.0000000+00:00'
        schoolCode: String
        semesterID: { }
        modifiedBy: 1
        modifiedDate: '2020-01-01T00:00:00.0000000+00:00'
    SemesterIDEnum:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: ''
      x-enumNames:
        - Year
        - Sem1
        - Sem2
        - Sem3
    PagedResultOfClassVmOutV2:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ClassVmOutV2'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    ClassVmOutV2:
      allOf:
        - $ref: '#/components/schemas/ClassVmInV2'
        - required:
            - classId
          type: object
          properties:
            classId:
              type: integer
              description: Gets or sets the class identifier.
              format: int32
          description: "Class ClassVmOutV2.\nImplements the ClassVmInV2"
    ClassVmInV2:
      allOf:
        - $ref: '#/components/schemas/ClassVmIn'
        - type: object
          properties:
            secondaryStaffId:
              type: integer
              description: "Gets or sets the secondary staff identifier.\n            "
              format: int32
          description: Class ClassVmIn2.
    PagedResultOfSchoolTermsVmOutV2:
      required:
        - currentPage
        - pageCount
        - pageSize
        - rowCount
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SchoolTermsVmOutV2'
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int64
        nextPage:
          type: string
      example:
        results: [ ]
        currentPage: 1
        pageCount: 1
        pageSize: 1
        rowCount: 1
        nextPage: String
    SchoolTermsVmOutV2:
      allOf:
        - $ref: '#/components/schemas/SchoolTermsVmIn'
        - required:
            - uniqueTermID
          type: object
          properties:
            uniqueTermID:
              type: integer
              description: Gets or sets the school term identifier.
              format: int32
          description: "Class SchoolTermsVmOutV2.\nImplements the SchoolTermsVmIn"
    OperationArray:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    ExternalApiApimDocumentDtoArray:
      type: array
      items:
        $ref: '#/components/schemas/ExternalApiApimDocumentDto'
    StatusModelArray:
      type: array
      items:
        $ref: '#/components/schemas/StatusModel'
    SubStatusModelArray:
      type: array
      items:
        $ref: '#/components/schemas/SubStatusModel'
    Operation2Array:
      type: array
      items:
        $ref: '#/components/schemas/Operation2'
    Operation3Array:
      type: array
      items:
        $ref: '#/components/schemas/Operation3'
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]
tags:
  - name: People
  - name: Address
  - name: Demographic
  - name: Directory Preferences
  - name: Education
  - name: Emergency Contact
  - name: Parent Alert
  - name: Parent Student
  - name: Person
  - name: Public Schools
  - name: Person Family
  - name: Religion
  - name: Religious Events
  - name: Vehicle
  - name: Work
  - name: Honors
  - name: Student
  - name: StudentLocker
  - name: StudentSchool
  - name: StudentStatus
  - name: Congregations
  - name: Interests
  - name: Alerts
  - name: PickupContacts
  - name: DefinedLists
  - name: Enrollment History
  - name: UserDefinedData
  - name: UserDefinedFields
  - name: UserDefinedGroups
  - name: UserDefinedGroupsSecurity
  - name: Admissions
  - name: AdvisingNotes
  - name: Conferences
  - name: StudentRecognition
  - name: StudentServiceHours
  - name: BehaviorEvents
  - name: Notes
  - name: ParentServiceHours
  - name: Staff Observations
  - name: AlertApplication
  - name: InterestCategories
  - name: InterestItems
  - name: Families
  - name: StudentPreProgression
  - name: Academics
  - name: SchoolYears
  - name: Classes
  - name: Courses
  - name: Enrollments
  - name: SchoolConfigurations
  - name: SchoolTerms
  - name: Staff
  - name: Assignments
  - name: Categories
  - name: Grades
  - name: CodeTranslations
  - name: InquiryForm